rule win_babylon_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.babylon_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.babylon_rat"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd6 8d854ce0ffff 50 ffb51ce0ffff ffd7 81bd4ce0ffff03010000 0f8454feffff }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8d854ce0ffff         | lea                 eax, dword ptr [ebp - 0x1fb4]
            //   50                   | push                eax
            //   ffb51ce0ffff         | push                dword ptr [ebp - 0x1fe4]
            //   ffd7                 | call                edi
            //   81bd4ce0ffff03010000     | cmp    dword ptr [ebp - 0x1fb4], 0x103
            //   0f8454feffff         | je                  0xfffffe5a

        $sequence_1 = { f6471610 7533 8365f400 8d45f4 50 52 e8???????? }
            // n = 7, score = 100
            //   f6471610             | test                byte ptr [edi + 0x16], 0x10
            //   7533                 | jne                 0x35
            //   8365f400             | and                 dword ptr [ebp - 0xc], 0
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_2 = { eb05 b8???????? 6a00 6a01 6aff 50 ff7508 }
            // n = 7, score = 100
            //   eb05                 | jmp                 7
            //   b8????????           |                     
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_3 = { ff75f8 e8???????? ff750c 57 e8???????? 8b4514 83c41c }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   83c41c               | add                 esp, 0x1c

        $sequence_4 = { 83ec30 a1???????? 33c5 8945fc 833d????????02 53 8b5d08 }
            // n = 7, score = 100
            //   83ec30               | sub                 esp, 0x30
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   833d????????02       |                     
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]

        $sequence_5 = { ff75fc ff7020 56 e8???????? 83c41c 8bd8 eb08 }
            // n = 7, score = 100
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff7020               | push                dword ptr [eax + 0x20]
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   8bd8                 | mov                 ebx, eax
            //   eb08                 | jmp                 0xa

        $sequence_6 = { 8945f4 85db 7507 33c0 e9???????? 53 56 }
            // n = 7, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   85db                 | test                ebx, ebx
            //   7507                 | jne                 9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_7 = { ff75fc 57 e8???????? 83c438 f6462a08 741f 8b4b10 }
            // n = 7, score = 100
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c438               | add                 esp, 0x38
            //   f6462a08             | test                byte ptr [esi + 0x2a], 8
            //   741f                 | je                  0x21
            //   8b4b10               | mov                 ecx, dword ptr [ebx + 0x10]

        $sequence_8 = { f6c204 7406 c6400b03 eb09 c6400b02 f6c208 7406 }
            // n = 7, score = 100
            //   f6c204               | test                dl, 4
            //   7406                 | je                  8
            //   c6400b03             | mov                 byte ptr [eax + 0xb], 3
            //   eb09                 | jmp                 0xb
            //   c6400b02             | mov                 byte ptr [eax + 0xb], 2
            //   f6c208               | test                dl, 8
            //   7406                 | je                  8

        $sequence_9 = { ff15???????? 56 e9???????? 6a10 e8???????? 8bf0 59 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   56                   | push                esi
            //   e9????????           |                     
            //   6a10                 | push                0x10
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 1604608
}