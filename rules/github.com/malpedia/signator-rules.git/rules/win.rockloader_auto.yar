rule win_rockloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.rockloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rockloader"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 803822 8bcf 7419 a3???????? 33c0 e9???????? }
            // n = 6, score = 300
            //   803822               | cmp                 byte ptr [eax], 0x22
            //   8bcf                 | mov                 ecx, edi
            //   7419                 | je                  0x1b
            //   a3????????           |                     
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     

        $sequence_1 = { 7e17 8b45f8 8b04b0 85c0 7407 }
            // n = 5, score = 300
            //   7e17                 | jle                 0x19
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b04b0               | mov                 eax, dword ptr [eax + esi*4]
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9

        $sequence_2 = { 51 57 2bc6 8b7508 50 }
            // n = 5, score = 300
            //   51                   | push                ecx
            //   57                   | push                edi
            //   2bc6                 | sub                 eax, esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   50                   | push                eax

        $sequence_3 = { 837d1000 7404 c6070a 47 8b45f4 c60700 ff3403 }
            // n = 7, score = 300
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   7404                 | je                  6
            //   c6070a               | mov                 byte ptr [edi], 0xa
            //   47                   | inc                 edi
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   c60700               | mov                 byte ptr [edi], 0
            //   ff3403               | push                dword ptr [ebx + eax]

        $sequence_4 = { 0f8434ffffff 837d1000 c6003a 7404 c6400109 8b4508 }
            // n = 6, score = 300
            //   0f8434ffffff         | je                  0xffffff3a
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   c6003a               | mov                 byte ptr [eax], 0x3a
            //   7404                 | je                  6
            //   c6400109             | mov                 byte ptr [eax + 1], 9
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_5 = { e8???????? 50 56 e8???????? 85c0 7508 56 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7508                 | jne                 0xa
            //   56                   | push                esi

        $sequence_6 = { 48 390424 7317 48 }
            // n = 4, score = 300
            //   48                   | dec                 eax
            //   390424               | cmp                 dword ptr [esp], eax
            //   7317                 | jae                 0x19
            //   48                   | dec                 eax

        $sequence_7 = { 57 b800014480 50 57 57 68???????? }
            // n = 6, score = 300
            //   57                   | push                edi
            //   b800014480           | mov                 eax, 0x80440100
            //   50                   | push                eax
            //   57                   | push                edi
            //   57                   | push                edi
            //   68????????           |                     

        $sequence_8 = { 8365fc00 53 56 57 8b7d08 8a17 33f6 }
            // n = 7, score = 300
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8a17                 | mov                 dl, byte ptr [edi]
            //   33f6                 | xor                 esi, esi

        $sequence_9 = { 6a03 59 8bc1 03f1 48 742d 48 }
            // n = 7, score = 300
            //   6a03                 | push                3
            //   59                   | pop                 ecx
            //   8bc1                 | mov                 eax, ecx
            //   03f1                 | add                 esi, ecx
            //   48                   | dec                 eax
            //   742d                 | je                  0x2f
            //   48                   | dec                 eax

    condition:
        7 of them and filesize < 98304
}