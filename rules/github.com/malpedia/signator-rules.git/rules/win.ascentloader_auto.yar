rule win_ascentloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.ascentloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ascentloader"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945f4 c745ac6b652047 c745b065636b6f c645b400 c78564ffffff76650d0a }
            // n = 5, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   c745ac6b652047       | mov                 dword ptr [ebp - 0x54], 0x4720656b
            //   c745b065636b6f       | mov                 dword ptr [ebp - 0x50], 0x6f6b6365
            //   c645b400             | mov                 byte ptr [ebp - 0x4c], 0
            //   c78564ffffff76650d0a     | mov    dword ptr [ebp - 0x9c], 0xa0d6576

        $sequence_1 = { 5d c3 56 8bf2 85c9 7405 e8???????? }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8bf2                 | mov                 esi, edx
            //   85c9                 | test                ecx, ecx
            //   7405                 | je                  7
            //   e8????????           |                     

        $sequence_2 = { 8b4dfc 83c604 8b55f8 8b06 85c0 75d6 }
            // n = 6, score = 100
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   83c604               | add                 esi, 4
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   85c0                 | test                eax, eax
            //   75d6                 | jne                 0xffffffd8

        $sequence_3 = { 8b049d88ac4100 c744023801000000 e9???????? ff15???????? 8bf8 e9???????? }
            // n = 6, score = 100
            //   8b049d88ac4100       | mov                 eax, dword ptr [ebx*4 + 0x41ac88]
            //   c744023801000000     | mov                 dword ptr [edx + eax + 0x38], 1
            //   e9????????           |                     
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   e9????????           |                     

        $sequence_4 = { 0caa 40 0038 aa }
            // n = 4, score = 100
            //   0caa                 | or                  al, 0xaa
            //   40                   | inc                 eax
            //   0038                 | add                 byte ptr [eax], bh
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_5 = { eb0a b900240000 b8???????? 85c9 7409 8034060a 46 }
            // n = 7, score = 100
            //   eb0a                 | jmp                 0xc
            //   b900240000           | mov                 ecx, 0x2400
            //   b8????????           |                     
            //   85c9                 | test                ecx, ecx
            //   7409                 | je                  0xb
            //   8034060a             | xor                 byte ptr [esi + eax], 0xa
            //   46                   | inc                 esi

        $sequence_6 = { 8d45dc 51 50 ff75d8 8bce e8???????? 83c40c }
            // n = 7, score = 100
            //   8d45dc               | lea                 eax, dword ptr [ebp - 0x24]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff75d8               | push                dword ptr [ebp - 0x28]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_7 = { 56 e8???????? 59 8365fc00 8b049d88ac4100 f644380401 740b }
            // n = 7, score = 100
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b049d88ac4100       | mov                 eax, dword ptr [ebx*4 + 0x41ac88]
            //   f644380401           | test                byte ptr [eax + edi + 4], 1
            //   740b                 | je                  0xd

        $sequence_8 = { 8d8d1cfbffff c645cc00 f30f7f45bc e8???????? 8bd0 85d2 7434 }
            // n = 7, score = 100
            //   8d8d1cfbffff         | lea                 ecx, dword ptr [ebp - 0x4e4]
            //   c645cc00             | mov                 byte ptr [ebp - 0x34], 0
            //   f30f7f45bc           | movdqu              xmmword ptr [ebp - 0x44], xmm0
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   85d2                 | test                edx, edx
            //   7434                 | je                  0x36

        $sequence_9 = { 8b4514 40 c745ec53c14000 894df8 8945fc 64a100000000 8945e8 }
            // n = 7, score = 100
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   40                   | inc                 eax
            //   c745ec53c14000       | mov                 dword ptr [ebp - 0x14], 0x40c153
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax

    condition:
        7 of them and filesize < 253952
}