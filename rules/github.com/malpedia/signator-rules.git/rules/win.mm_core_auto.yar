rule win_mm_core_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.mm_core."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mm_core"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 ff15???????? 8b44240c 8b35???????? 50 }
            // n = 5, score = 200
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   8b35????????         |                     
            //   50                   | push                eax

        $sequence_1 = { 8b442418 5d 5f 5e 33cc }
            // n = 5, score = 200
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   5d                   | pop                 ebp
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33cc                 | xor                 ecx, esp

        $sequence_2 = { cc e8???????? 8b8c2414020000 33cc }
            // n = 4, score = 200
            //   cc                   | int3                
            //   e8????????           |                     
            //   8b8c2414020000       | mov                 ecx, dword ptr [esp + 0x214]
            //   33cc                 | xor                 ecx, esp

        $sequence_3 = { 50 ffd7 8b442424 8b54241c }
            // n = 4, score = 200
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]

        $sequence_4 = { eb1e 8b45dc 8b4dd4 0308 894dc4 8b55c4 }
            // n = 6, score = 200
            //   eb1e                 | jmp                 0x20
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   0308                 | add                 ecx, dword ptr [eax]
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx
            //   8b55c4               | mov                 edx, dword ptr [ebp - 0x3c]

        $sequence_5 = { 6a00 50 e8???????? 83c40c 33c0 33c9 8d542408 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   33c0                 | xor                 eax, eax
            //   33c9                 | xor                 ecx, ecx
            //   8d542408             | lea                 edx, dword ptr [esp + 8]

        $sequence_6 = { 33c0 6a08 8944244c 52 8944244c }
            // n = 5, score = 200
            //   33c0                 | xor                 eax, eax
            //   6a08                 | push                8
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   52                   | push                edx
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax

        $sequence_7 = { 6a00 6a01 57 53 ffd5 85c0 7503 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   57                   | push                edi
            //   53                   | push                ebx
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   7503                 | jne                 5

        $sequence_8 = { 50 894c2444 89542448 897c2420 ffd6 8b0d???????? }
            // n = 6, score = 200
            //   50                   | push                eax
            //   894c2444             | mov                 dword ptr [esp + 0x44], ecx
            //   89542448             | mov                 dword ptr [esp + 0x48], edx
            //   897c2420             | mov                 dword ptr [esp + 0x20], edi
            //   ffd6                 | call                esi
            //   8b0d????????         |                     

        $sequence_9 = { 8d9c245c020000 e8???????? 8d442414 50 8bf3 e8???????? 83c40c }
            // n = 7, score = 200
            //   8d9c245c020000       | lea                 ebx, dword ptr [esp + 0x25c]
            //   e8????????           |                     
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   50                   | push                eax
            //   8bf3                 | mov                 esi, ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

    condition:
        7 of them and filesize < 319488
}