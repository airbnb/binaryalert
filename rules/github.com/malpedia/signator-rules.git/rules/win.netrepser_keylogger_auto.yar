rule win_netrepser_keylogger_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.netrepser_keylogger."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.netrepser_keylogger"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e108 894dfc 8b55fc c1ea08 8955fc 8b450c }
            // n = 6, score = 200
            //   c1e108               | shl                 ecx, 8
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   c1ea08               | shr                 edx, 8
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_1 = { c645cb65 c645cc63 c645cd74 c645ce00 6a31 6a00 8d4dcf }
            // n = 7, score = 200
            //   c645cb65             | mov                 byte ptr [ebp - 0x35], 0x65
            //   c645cc63             | mov                 byte ptr [ebp - 0x34], 0x63
            //   c645cd74             | mov                 byte ptr [ebp - 0x33], 0x74
            //   c645ce00             | mov                 byte ptr [ebp - 0x32], 0
            //   6a31                 | push                0x31
            //   6a00                 | push                0
            //   8d4dcf               | lea                 ecx, dword ptr [ebp - 0x31]

        $sequence_2 = { 8b4d10 8901 8b5510 833aff 750a }
            // n = 5, score = 200
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   833aff               | cmp                 dword ptr [edx], -1
            //   750a                 | jne                 0xc

        $sequence_3 = { c645cc44 c645cd41 c645ce54 c645cf41 c645d00d c645d10a }
            // n = 6, score = 200
            //   c645cc44             | mov                 byte ptr [ebp - 0x34], 0x44
            //   c645cd41             | mov                 byte ptr [ebp - 0x33], 0x41
            //   c645ce54             | mov                 byte ptr [ebp - 0x32], 0x54
            //   c645cf41             | mov                 byte ptr [ebp - 0x31], 0x41
            //   c645d00d             | mov                 byte ptr [ebp - 0x30], 0xd
            //   c645d10a             | mov                 byte ptr [ebp - 0x2f], 0xa

        $sequence_4 = { 8d8de0feffff 51 ff15???????? 8985d4feffff }
            // n = 4, score = 200
            //   8d8de0feffff         | lea                 ecx, dword ptr [ebp - 0x120]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8985d4feffff         | mov                 dword ptr [ebp - 0x12c], eax

        $sequence_5 = { c645f36c c645f446 c645f56f c645f66c c645f764 }
            // n = 5, score = 200
            //   c645f36c             | mov                 byte ptr [ebp - 0xd], 0x6c
            //   c645f446             | mov                 byte ptr [ebp - 0xc], 0x46
            //   c645f56f             | mov                 byte ptr [ebp - 0xb], 0x6f
            //   c645f66c             | mov                 byte ptr [ebp - 0xa], 0x6c
            //   c645f764             | mov                 byte ptr [ebp - 9], 0x64

        $sequence_6 = { 8b5508 52 e8???????? 8945a4 837da4ff }
            // n = 5, score = 200
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8945a4               | mov                 dword ptr [ebp - 0x5c], eax
            //   837da4ff             | cmp                 dword ptr [ebp - 0x5c], -1

        $sequence_7 = { c645f653 c645f774 c645f86f c645f972 c645fa65 }
            // n = 5, score = 200
            //   c645f653             | mov                 byte ptr [ebp - 0xa], 0x53
            //   c645f774             | mov                 byte ptr [ebp - 9], 0x74
            //   c645f86f             | mov                 byte ptr [ebp - 8], 0x6f
            //   c645f972             | mov                 byte ptr [ebp - 7], 0x72
            //   c645fa65             | mov                 byte ptr [ebp - 6], 0x65

        $sequence_8 = { 300c38 40 3b442418 72be 5f 889600010000 8a54240b }
            // n = 7, score = 100
            //   300c38               | xor                 byte ptr [eax + edi], cl
            //   40                   | inc                 eax
            //   3b442418             | cmp                 eax, dword ptr [esp + 0x18]
            //   72be                 | jb                  0xffffffc0
            //   5f                   | pop                 edi
            //   889600010000         | mov                 byte ptr [esi + 0x100], dl
            //   8a54240b             | mov                 dl, byte ptr [esp + 0xb]

        $sequence_9 = { ffd5 85c0 750d 8b442418 e8???????? 85c0 }
            // n = 6, score = 100
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   750d                 | jne                 0xf
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_10 = { 5b 59 c3 889e01010000 889600010000 5b }
            // n = 6, score = 100
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   c3                   | ret                 
            //   889e01010000         | mov                 byte ptr [esi + 0x101], bl
            //   889600010000         | mov                 byte ptr [esi + 0x100], dl
            //   5b                   | pop                 ebx

        $sequence_11 = { 8b8424ac000000 57 b913000000 be???????? 8bfd }
            // n = 5, score = 100
            //   8b8424ac000000       | mov                 eax, dword ptr [esp + 0xac]
            //   57                   | push                edi
            //   b913000000           | mov                 ecx, 0x13
            //   be????????           |                     
            //   8bfd                 | mov                 edi, ebp

        $sequence_12 = { 83c410 88442411 88442415 33c0 57 8d742414 }
            // n = 6, score = 100
            //   83c410               | add                 esp, 0x10
            //   88442411             | mov                 byte ptr [esp + 0x11], al
            //   88442415             | mov                 byte ptr [esp + 0x15], al
            //   33c0                 | xor                 eax, eax
            //   57                   | push                edi
            //   8d742414             | lea                 esi, dword ptr [esp + 0x14]

        $sequence_13 = { 85f6 7416 8b4c2434 57 56 8bd5 }
            // n = 6, score = 100
            //   85f6                 | test                esi, esi
            //   7416                 | je                  0x18
            //   8b4c2434             | mov                 ecx, dword ptr [esp + 0x34]
            //   57                   | push                edi
            //   56                   | push                esi
            //   8bd5                 | mov                 edx, ebp

        $sequence_14 = { 50 e8???????? 33db 83c404 33c9 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   83c404               | add                 esp, 4
            //   33c9                 | xor                 ecx, ecx

        $sequence_15 = { 89442434 89442438 ff15???????? 8b442414 6683f809 7505 bd02000000 }
            // n = 7, score = 100
            //   89442434             | mov                 dword ptr [esp + 0x34], eax
            //   89442438             | mov                 dword ptr [esp + 0x38], eax
            //   ff15????????         |                     
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   6683f809             | cmp                 ax, 9
            //   7505                 | jne                 7
            //   bd02000000           | mov                 ebp, 2

    condition:
        7 of them and filesize < 303104
}