rule win_ranbyus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.ranbyus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ranbyus"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7458 57 ff74240c 83c02c 50 e8???????? }
            // n = 6, score = 1100
            //   7458                 | je                  0x5a
            //   57                   | push                edi
            //   ff74240c             | push                dword ptr [esp + 0xc]
            //   83c02c               | add                 eax, 0x2c
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 8b4518 89460c 8b4514 59 }
            // n = 4, score = 1100
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   59                   | pop                 ecx

        $sequence_2 = { 740a ff742404 e8???????? 59 83c8ff c3 56 }
            // n = 7, score = 1100
            //   740a                 | je                  0xc
            //   ff742404             | push                dword ptr [esp + 4]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   83c8ff               | or                  eax, 0xffffffff
            //   c3                   | ret                 
            //   56                   | push                esi

        $sequence_3 = { 6a10 e8???????? 8bf0 59 85f6 741a }
            // n = 6, score = 1100
            //   6a10                 | push                0x10
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   85f6                 | test                esi, esi
            //   741a                 | je                  0x1c

        $sequence_4 = { e8???????? 59 33c0 eb03 83c8ff }
            // n = 5, score = 1100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   eb03                 | jmp                 5
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_5 = { 83c40c 297e14 33c0 5f eb03 }
            // n = 5, score = 1100
            //   83c40c               | add                 esp, 0xc
            //   297e14               | sub                 dword ptr [esi + 0x14], edi
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   eb03                 | jmp                 5

        $sequence_6 = { 8bc8 e8???????? 50 e8???????? 59 33c0 c3 }
            // n = 7, score = 1100
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 

        $sequence_7 = { 33c0 eb14 ff742408 ff742408 }
            // n = 4, score = 1100
            //   33c0                 | xor                 eax, eax
            //   eb14                 | jmp                 0x16
            //   ff742408             | push                dword ptr [esp + 8]
            //   ff742408             | push                dword ptr [esp + 8]

        $sequence_8 = { 59 59 85c0 740d 68???????? 50 }
            // n = 6, score = 1100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_9 = { 897e10 897e14 6880260400 e8???????? }
            // n = 4, score = 1100
            //   897e10               | mov                 dword ptr [esi + 0x10], edi
            //   897e14               | mov                 dword ptr [esi + 0x14], edi
            //   6880260400           | push                0x42680
            //   e8????????           |                     

    condition:
        7 of them and filesize < 638976
}