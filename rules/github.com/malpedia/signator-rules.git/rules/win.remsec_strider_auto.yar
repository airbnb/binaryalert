rule win_remsec_strider_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.remsec_strider."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remsec_strider"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c0 83fe01 7d03 33f6 46 3bc7 }
            // n = 6, score = 200
            //   33c0                 | xor                 eax, eax
            //   83fe01               | cmp                 esi, 1
            //   7d03                 | jge                 5
            //   33f6                 | xor                 esi, esi
            //   46                   | inc                 esi
            //   3bc7                 | cmp                 eax, edi

        $sequence_1 = { 8b4724 894644 eb16 8b4724 89466c }
            // n = 5, score = 200
            //   8b4724               | mov                 eax, dword ptr [edi + 0x24]
            //   894644               | mov                 dword ptr [esi + 0x44], eax
            //   eb16                 | jmp                 0x18
            //   8b4724               | mov                 eax, dword ptr [edi + 0x24]
            //   89466c               | mov                 dword ptr [esi + 0x6c], eax

        $sequence_2 = { e8???????? 83660400 8bcf 5f }
            // n = 4, score = 200
            //   e8????????           |                     
            //   83660400             | and                 dword ptr [esi + 4], 0
            //   8bcf                 | mov                 ecx, edi
            //   5f                   | pop                 edi

        $sequence_3 = { 8b4508 ff7004 ff7014 ff7010 }
            // n = 4, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   ff7004               | push                dword ptr [eax + 4]
            //   ff7014               | push                dword ptr [eax + 0x14]
            //   ff7010               | push                dword ptr [eax + 0x10]

        $sequence_4 = { c3 ff7110 ff15???????? 33c0 40 c3 55 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   ff7110               | push                dword ptr [ecx + 0x10]
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_5 = { 8bc1 83e00f 48 7424 48 }
            // n = 5, score = 200
            //   8bc1                 | mov                 eax, ecx
            //   83e00f               | and                 eax, 0xf
            //   48                   | dec                 eax
            //   7424                 | je                  0x26
            //   48                   | dec                 eax

        $sequence_6 = { 58 c3 6a0a 58 c3 6a09 58 }
            // n = 7, score = 200
            //   58                   | pop                 eax
            //   c3                   | ret                 
            //   6a0a                 | push                0xa
            //   58                   | pop                 eax
            //   c3                   | ret                 
            //   6a09                 | push                9
            //   58                   | pop                 eax

        $sequence_7 = { 7507 be100e0000 eb07 33c0 eb0e 33f6 }
            // n = 6, score = 200
            //   7507                 | jne                 9
            //   be100e0000           | mov                 esi, 0xe10
            //   eb07                 | jmp                 9
            //   33c0                 | xor                 eax, eax
            //   eb0e                 | jmp                 0x10
            //   33f6                 | xor                 esi, esi

        $sequence_8 = { 7431 39481c 722c 8b4818 85c9 740f }
            // n = 6, score = 200
            //   7431                 | je                  0x33
            //   39481c               | cmp                 dword ptr [eax + 0x1c], ecx
            //   722c                 | jb                  0x2e
            //   8b4818               | mov                 ecx, dword ptr [eax + 0x18]
            //   85c9                 | test                ecx, ecx
            //   740f                 | je                  0x11

        $sequence_9 = { 40 894604 eb02 33c0 }
            // n = 4, score = 200
            //   40                   | inc                 eax
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 344064
}