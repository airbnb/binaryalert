rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b03 8906 8b4304 894604 8d4308 c645fc02 }
            // n = 6, score = 100
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8906                 | mov                 dword ptr [esi], eax
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   8d4308               | lea                 eax, dword ptr [ebx + 8]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2

        $sequence_1 = { 8945f0 8955f4 8b4dec 8d45f8 50 8d45f4 33d2 }
            // n = 7, score = 100
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   33d2                 | xor                 edx, edx

        $sequence_2 = { 7d15 837dcc00 740f 33c0 50 ff75fc ff75f8 }
            // n = 7, score = 100
            //   7d15                 | jge                 0x17
            //   837dcc00             | cmp                 dword ptr [ebp - 0x34], 0
            //   740f                 | je                  0x11
            //   33c0                 | xor                 eax, eax
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff75f8               | push                dword ptr [ebp - 8]

        $sequence_3 = { 8854072a 8b0c8d68ff4700 8a45e1 5a 88440f2b 8b4df8 8b048d68ff4700 }
            // n = 7, score = 100
            //   8854072a             | mov                 byte ptr [edi + eax + 0x2a], dl
            //   8b0c8d68ff4700       | mov                 ecx, dword ptr [ecx*4 + 0x47ff68]
            //   8a45e1               | mov                 al, byte ptr [ebp - 0x1f]
            //   5a                   | pop                 edx
            //   88440f2b             | mov                 byte ptr [edi + ecx + 0x2b], al
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8b048d68ff4700       | mov                 eax, dword ptr [ecx*4 + 0x47ff68]

        $sequence_4 = { 894c2428 c7411000000000 c7411400000000 837f1410 8b4710 89442444 7202 }
            // n = 7, score = 100
            //   894c2428             | mov                 dword ptr [esp + 0x28], ecx
            //   c7411000000000       | mov                 dword ptr [ecx + 0x10], 0
            //   c7411400000000       | mov                 dword ptr [ecx + 0x14], 0
            //   837f1410             | cmp                 dword ptr [edi + 0x14], 0x10
            //   8b4710               | mov                 eax, dword ptr [edi + 0x10]
            //   89442444             | mov                 dword ptr [esp + 0x44], eax
            //   7202                 | jb                  4

        $sequence_5 = { 53 8b5d10 56 57 8bf9 33f6 8b07 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx
            //   33f6                 | xor                 esi, esi
            //   8b07                 | mov                 eax, dword ptr [edi]

        $sequence_6 = { 75f5 5f 5e 8bc3 5b 5d c3 }
            // n = 7, score = 100
            //   75f5                 | jne                 0xfffffff7
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8bc3                 | mov                 eax, ebx
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_7 = { 0fb60c9d0e624600 0fb6349d0f624600 8bf9 c1e702 57 6a00 8d0431 }
            // n = 7, score = 100
            //   0fb60c9d0e624600     | movzx               ecx, byte ptr [ebx*4 + 0x46620e]
            //   0fb6349d0f624600     | movzx               esi, byte ptr [ebx*4 + 0x46620f]
            //   8bf9                 | mov                 edi, ecx
            //   c1e702               | shl                 edi, 2
            //   57                   | push                edi
            //   6a00                 | push                0
            //   8d0431               | lea                 eax, dword ptr [ecx + esi]

        $sequence_8 = { 33de c1c10a 33c8 d1ce }
            // n = 4, score = 100
            //   33de                 | xor                 ebx, esi
            //   c1c10a               | rol                 ecx, 0xa
            //   33c8                 | xor                 ecx, eax
            //   d1ce                 | ror                 esi, 1

        $sequence_9 = { e8???????? eb65 6a00 8d4dec e8???????? 8b5d08 c745fc01000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb65                 | jmp                 0x67
            //   6a00                 | push                0
            //   8d4dec               | lea                 ecx, dword ptr [ebp - 0x14]
            //   e8????????           |                     
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1

    condition:
        7 of them and filesize < 1122304
}