rule win_faketc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.faketc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.faketc"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 83c404 3bf4 e8???????? 8b5508 83babc86000000 7429 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4
            //   3bf4                 | cmp                 esi, esp
            //   e8????????           |                     
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83babc86000000       | cmp                 dword ptr [edx + 0x86bc], 0
            //   7429                 | je                  0x2b

        $sequence_1 = { f7da 1bd2 81e200feffff 81c200040000 3bc2 7e46 68700d0000 }
            // n = 7, score = 100
            //   f7da                 | neg                 edx
            //   1bd2                 | sbb                 edx, edx
            //   81e200feffff         | and                 edx, 0xfffffe00
            //   81c200040000         | add                 edx, 0x400
            //   3bc2                 | cmp                 eax, edx
            //   7e46                 | jle                 0x48
            //   68700d0000           | push                0xd70

        $sequence_2 = { eb04 c645f800 8d45f8 50 8b4df0 c1e90c 81e1ff000000 }
            // n = 7, score = 100
            //   eb04                 | jmp                 6
            //   c645f800             | mov                 byte ptr [ebp - 8], 0
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   c1e90c               | shr                 ecx, 0xc
            //   81e1ff000000         | and                 ecx, 0xff

        $sequence_3 = { e9???????? 837df000 7505 e9???????? 8b45e8 8b4838 894dd4 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   7505                 | jne                 7
            //   e9????????           |                     
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b4838               | mov                 ecx, dword ptr [eax + 0x38]
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx

        $sequence_4 = { ff15???????? e9???????? 8b35???????? 6a00 6a00 6847010000 68f4130000 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   e9????????           |                     
            //   8b35????????         |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6847010000           | push                0x147
            //   68f4130000           | push                0x13f4

        $sequence_5 = { ff15???????? 85c0 0f84d9000000 807c247c46 0f85ce000000 807c247d41 0f85c3000000 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84d9000000         | je                  0xdf
            //   807c247c46           | cmp                 byte ptr [esp + 0x7c], 0x46
            //   0f85ce000000         | jne                 0xd4
            //   807c247d41           | cmp                 byte ptr [esp + 0x7d], 0x41
            //   0f85c3000000         | jne                 0xc9

        $sequence_6 = { ffd3 6a00 685b9c0000 56 ffd7 50 ffd3 }
            // n = 7, score = 100
            //   ffd3                 | call                ebx
            //   6a00                 | push                0
            //   685b9c0000           | push                0x9c5b
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ffd3                 | call                ebx

        $sequence_7 = { f3ab a1???????? 33c5 8945fc 8b451c 6bc003 83c001 }
            // n = 7, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]
            //   6bc003               | imul                eax, eax, 3
            //   83c001               | add                 eax, 1

        $sequence_8 = { eb22 8b45f4 83b8f402000000 7409 c745ecc8906200 eb07 c745ecd0906200 }
            // n = 7, score = 100
            //   eb22                 | jmp                 0x24
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83b8f402000000       | cmp                 dword ptr [eax + 0x2f4], 0
            //   7409                 | je                  0xb
            //   c745ecc8906200       | mov                 dword ptr [ebp - 0x14], 0x6290c8
            //   eb07                 | jmp                 9
            //   c745ecd0906200       | mov                 dword ptr [ebp - 0x14], 0x6290d0

        $sequence_9 = { ffd7 50 ff15???????? a1???????? 50 68af130000 53 }
            // n = 7, score = 100
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ff15????????         |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   68af130000           | push                0x13af
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 6864896
}