rule win_zhcat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.zhcat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zhcat"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ebd5 8bc8 c1f905 8b0c8d40604100 83e01f }
            // n = 5, score = 200
            //   ebd5                 | jmp                 0xffffffd7
            //   8bc8                 | mov                 ecx, eax
            //   c1f905               | sar                 ecx, 5
            //   8b0c8d40604100       | mov                 ecx, dword ptr [ecx*4 + 0x416040]
            //   83e01f               | and                 eax, 0x1f

        $sequence_1 = { 6af6 ffd7 6af5 894604 }
            // n = 4, score = 200
            //   6af6                 | push                -0xa
            //   ffd7                 | call                edi
            //   6af5                 | push                -0xb
            //   894604               | mov                 dword ptr [esi + 4], eax

        $sequence_2 = { 833d????????00 53 8bd8 7511 6a00 53 }
            // n = 6, score = 200
            //   833d????????00       |                     
            //   53                   | push                ebx
            //   8bd8                 | mov                 ebx, eax
            //   7511                 | jne                 0x13
            //   6a00                 | push                0
            //   53                   | push                ebx

        $sequence_3 = { 83e01f c1e006 03048d40604100 eb05 }
            // n = 4, score = 200
            //   83e01f               | and                 eax, 0x1f
            //   c1e006               | shl                 eax, 6
            //   03048d40604100       | add                 eax, dword ptr [ecx*4 + 0x416040]
            //   eb05                 | jmp                 7

        $sequence_4 = { ff3498 68???????? e8???????? 59 59 e9???????? 6a02 }
            // n = 7, score = 200
            //   ff3498               | push                dword ptr [eax + ebx*4]
            //   68????????           |                     
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   e9????????           |                     
            //   6a02                 | push                2

        $sequence_5 = { ff15???????? eb05 ff7508 ffd7 6a02 8945d8 58 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   eb05                 | jmp                 7
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd7                 | call                edi
            //   6a02                 | push                2
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   58                   | pop                 eax

        $sequence_6 = { eb1b 8bc6 c1f805 8b048540604100 }
            // n = 4, score = 200
            //   eb1b                 | jmp                 0x1d
            //   8bc6                 | mov                 eax, esi
            //   c1f805               | sar                 eax, 5
            //   8b048540604100       | mov                 eax, dword ptr [eax*4 + 0x416040]

        $sequence_7 = { bf???????? 8bf0 59 33d2 f3a6 0f84e0010000 6a04 }
            // n = 7, score = 200
            //   bf????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   33d2                 | xor                 edx, edx
            //   f3a6                 | repe cmpsb          byte ptr [esi], byte ptr es:[edi]
            //   0f84e0010000         | je                  0x1e6
            //   6a04                 | push                4

        $sequence_8 = { 83f8ff 0f8488000000 6a05 56 ff15???????? }
            // n = 5, score = 200
            //   83f8ff               | cmp                 eax, -1
            //   0f8488000000         | je                  0x8e
            //   6a05                 | push                5
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_9 = { 5f 890b 5e c9 }
            // n = 4, score = 200
            //   5f                   | pop                 edi
            //   890b                 | mov                 dword ptr [ebx], ecx
            //   5e                   | pop                 esi
            //   c9                   | leave               

    condition:
        7 of them and filesize < 376832
}