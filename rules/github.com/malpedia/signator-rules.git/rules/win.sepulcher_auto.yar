rule win_sepulcher_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.sepulcher."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sepulcher"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a4a0c 83623000 80f9ff 7507 8b4238 29421c }
            // n = 6, score = 100
            //   8a4a0c               | mov                 cl, byte ptr [edx + 0xc]
            //   83623000             | and                 dword ptr [edx + 0x30], 0
            //   80f9ff               | cmp                 cl, 0xff
            //   7507                 | jne                 9
            //   8b4238               | mov                 eax, dword ptr [edx + 0x38]
            //   29421c               | sub                 dword ptr [edx + 0x1c], eax

        $sequence_1 = { e8???????? 8d8424946e0000 50 e8???????? 89442424 83c414 33c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d8424946e0000       | lea                 eax, dword ptr [esp + 0x6e94]
            //   50                   | push                eax
            //   e8????????           |                     
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   83c414               | add                 esp, 0x14
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 6bd730 8b0c8d50de0110 c644112800 85f6 740c 56 }
            // n = 6, score = 100
            //   6bd730               | imul                edx, edi, 0x30
            //   8b0c8d50de0110       | mov                 ecx, dword ptr [ecx*4 + 0x1001de50]
            //   c644112800           | mov                 byte ptr [ecx + edx + 0x28], 0
            //   85f6                 | test                esi, esi
            //   740c                 | je                  0xe
            //   56                   | push                esi

        $sequence_3 = { 898de4f7ffff ff15???????? 8bd8 8dbdeaf7ffff 33c0 33d2 668985e8f7ffff }
            // n = 7, score = 100
            //   898de4f7ffff         | mov                 dword ptr [ebp - 0x81c], ecx
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   8dbdeaf7ffff         | lea                 edi, dword ptr [ebp - 0x816]
            //   33c0                 | xor                 eax, eax
            //   33d2                 | xor                 edx, edx
            //   668985e8f7ffff       | mov                 word ptr [ebp - 0x818], ax

        $sequence_4 = { 33f6 8d85e8f9ffff 668995f8fdffff 56 }
            // n = 4, score = 100
            //   33f6                 | xor                 esi, esi
            //   8d85e8f9ffff         | lea                 eax, dword ptr [ebp - 0x618]
            //   668995f8fdffff       | mov                 word ptr [ebp - 0x208], dx
            //   56                   | push                esi

        $sequence_5 = { 8b85e0f7ffff 1b85e8f7ffff 898530d2ffff 898d2cd2ffff }
            // n = 4, score = 100
            //   8b85e0f7ffff         | mov                 eax, dword ptr [ebp - 0x820]
            //   1b85e8f7ffff         | sbb                 eax, dword ptr [ebp - 0x818]
            //   898530d2ffff         | mov                 dword ptr [ebp - 0x2dd0], eax
            //   898d2cd2ffff         | mov                 dword ptr [ebp - 0x2dd4], ecx

        $sequence_6 = { 8bce e8???????? 85c0 75da 8bce 5e }
            // n = 6, score = 100
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   75da                 | jne                 0xffffffdc
            //   8bce                 | mov                 ecx, esi
            //   5e                   | pop                 esi

        $sequence_7 = { 50 8d851cd8ffff 50 e8???????? 8bc7 b938020000 80b4051cd8fffff5 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d851cd8ffff         | lea                 eax, dword ptr [ebp - 0x27e4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   b938020000           | mov                 ecx, 0x238
            //   80b4051cd8fffff5     | xor                 byte ptr [ebp + eax - 0x27e4], 0xf5

        $sequence_8 = { 8b048550de0110 f644082801 7406 8b440818 5d c3 e8???????? }
            // n = 7, score = 100
            //   8b048550de0110       | mov                 eax, dword ptr [eax*4 + 0x1001de50]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7406                 | je                  8
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   e8????????           |                     

        $sequence_9 = { 740a 6683bd54ffffff06 7503 33db 43 }
            // n = 5, score = 100
            //   740a                 | je                  0xc
            //   6683bd54ffffff06     | cmp                 word ptr [ebp - 0xac], 6
            //   7503                 | jne                 5
            //   33db                 | xor                 ebx, ebx
            //   43                   | inc                 ebx

    condition:
        7 of them and filesize < 279552
}