rule win_vidar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.vidar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.vidar"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 0fb6c0 50 ff742410 56 e8???????? 83c40c }
            // n = 7, score = 1800
            //   e8????????           |                     
            //   0fb6c0               | movzx               eax, al
            //   50                   | push                eax
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_1 = { c20400 ff742408 e8???????? 59 83f8ff 7503 32c0 }
            // n = 7, score = 1800
            //   c20400               | ret                 4
            //   ff742408             | push                dword ptr [esp + 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   83f8ff               | cmp                 eax, -1
            //   7503                 | jne                 5
            //   32c0                 | xor                 al, al

        $sequence_2 = { 83f8ff 7503 32c0 c3 8b4c2404 8801 b001 }
            // n = 7, score = 1800
            //   83f8ff               | cmp                 eax, -1
            //   7503                 | jne                 5
            //   32c0                 | xor                 al, al
            //   c3                   | ret                 
            //   8b4c2404             | mov                 ecx, dword ptr [esp + 4]
            //   8801                 | mov                 byte ptr [ecx], al
            //   b001                 | mov                 al, 1

        $sequence_3 = { c9 c3 8b542408 85d2 7503 33c0 }
            // n = 6, score = 1800
            //   c9                   | leave               
            //   c3                   | ret                 
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   85d2                 | test                edx, edx
            //   7503                 | jne                 5
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { c20800 56 57 8b7c240c 8b07 }
            // n = 5, score = 1800
            //   c20800               | ret                 8
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7c240c             | mov                 edi, dword ptr [esp + 0xc]
            //   8b07                 | mov                 eax, dword ptr [edi]

        $sequence_5 = { 5e c20400 b001 c3 33c0 40 }
            // n = 6, score = 1800
            //   5e                   | pop                 esi
            //   c20400               | ret                 4
            //   b001                 | mov                 al, 1
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax

        $sequence_6 = { c20400 56 8bf1 8b4e20 33c0 }
            // n = 5, score = 1800
            //   c20400               | ret                 4
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 8b742408 8b06 8b4804 6a0a }
            // n = 4, score = 1800
            //   8b742408             | mov                 esi, dword ptr [esp + 8]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   6a0a                 | push                0xa

        $sequence_8 = { dd1c24 83ec08 dd4508 dd1c24 6a0b 6a10 e8???????? }
            // n = 7, score = 200
            //   dd1c24               | fstp                qword ptr [esp]
            //   83ec08               | sub                 esp, 8
            //   dd4508               | fld                 qword ptr [ebp + 8]
            //   dd1c24               | fstp                qword ptr [esp]
            //   6a0b                 | push                0xb
            //   6a10                 | push                0x10
            //   e8????????           |                     

        $sequence_9 = { c3 8bff 55 8bec 83ec0c c745fc00000000 }
            // n = 6, score = 200
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec0c               | sub                 esp, 0xc
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0

        $sequence_10 = { dd4508 dd1c24 6a0b 6a08 e8???????? 83c41c }
            // n = 6, score = 200
            //   dd4508               | fld                 qword ptr [ebp + 8]
            //   dd1c24               | fstp                qword ptr [esp]
            //   6a0b                 | push                0xb
            //   6a08                 | push                8
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c

        $sequence_11 = { 0006 4a 42 0032 }
            // n = 4, score = 100
            //   0006                 | add                 byte ptr [esi], al
            //   4a                   | dec                 edx
            //   42                   | inc                 edx
            //   0032                 | add                 byte ptr [edx], dh

        $sequence_12 = { 0013 17 43 0020 }
            // n = 4, score = 100
            //   0013                 | add                 byte ptr [ebx], dl
            //   17                   | pop                 ss
            //   43                   | inc                 ebx
            //   0020                 | add                 byte ptr [eax], ah

        $sequence_13 = { 000d???????? 45 43 001f }
            // n = 4, score = 100
            //   000d????????         |                     
            //   45                   | inc                 ebp
            //   43                   | inc                 ebx
            //   001f                 | add                 byte ptr [edi], bl

    condition:
        7 of them and filesize < 2793472
}