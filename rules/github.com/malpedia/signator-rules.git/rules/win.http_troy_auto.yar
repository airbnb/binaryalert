rule win_http_troy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.http_troy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.http_troy"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 84c0 59 7908 83e0fc 89460c eb14 a801 }
            // n = 7, score = 200
            //   84c0                 | test                al, al
            //   59                   | pop                 ecx
            //   7908                 | jns                 0xa
            //   83e0fc               | and                 eax, 0xfffffffc
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   eb14                 | jmp                 0x16
            //   a801                 | test                al, 1

        $sequence_1 = { e8???????? 83c40c c3 8b4048 8b4c2404 0fb60448 83e010 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   c3                   | ret                 
            //   8b4048               | mov                 eax, dword ptr [eax + 0x48]
            //   8b4c2404             | mov                 ecx, dword ptr [esp + 4]
            //   0fb60448             | movzx               eax, byte ptr [eax + ecx*2]
            //   83e010               | and                 eax, 0x10

        $sequence_2 = { 6a01 8d4c2458 51 56 88442460 ffd7 8a530e }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   8d4c2458             | lea                 ecx, dword ptr [esp + 0x58]
            //   51                   | push                ecx
            //   56                   | push                esi
            //   88442460             | mov                 byte ptr [esp + 0x60], al
            //   ffd7                 | call                edi
            //   8a530e               | mov                 dl, byte ptr [ebx + 0xe]

        $sequence_3 = { 53 e8???????? 83c410 85c0 0f858d000000 88842428010000 b940000000 }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   0f858d000000         | jne                 0x93
            //   88842428010000       | mov                 byte ptr [esp + 0x128], al
            //   b940000000           | mov                 ecx, 0x40

        $sequence_4 = { 80fb2b 0f8448ffffff 80fb2d 0f843fffffff e9???????? 0fb6c3 50 }
            // n = 7, score = 200
            //   80fb2b               | cmp                 bl, 0x2b
            //   0f8448ffffff         | je                  0xffffff4e
            //   80fb2d               | cmp                 bl, 0x2d
            //   0f843fffffff         | je                  0xffffff45
            //   e9????????           |                     
            //   0fb6c3               | movzx               eax, bl
            //   50                   | push                eax

        $sequence_5 = { 83c418 eb53 33c0 c644241000 b940000000 8d7c2411 f3ab }
            // n = 7, score = 200
            //   83c418               | add                 esp, 0x18
            //   eb53                 | jmp                 0x55
            //   33c0                 | xor                 eax, eax
            //   c644241000           | mov                 byte ptr [esp + 0x10], 0
            //   b940000000           | mov                 ecx, 0x40
            //   8d7c2411             | lea                 edi, dword ptr [esp + 0x11]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_6 = { 51 8bcd e8???????? eb4c 83fe01 7519 8b9424bc040000 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   8bcd                 | mov                 ecx, ebp
            //   e8????????           |                     
            //   eb4c                 | jmp                 0x4e
            //   83fe01               | cmp                 esi, 1
            //   7519                 | jne                 0x1b
            //   8b9424bc040000       | mov                 edx, dword ptr [esp + 0x4bc]

        $sequence_7 = { 8dbc3805e9e3a9 8bc7 c1e81b c1e705 0bc7 03c6 }
            // n = 6, score = 200
            //   8dbc3805e9e3a9       | lea                 edi, dword ptr [eax + edi - 0x561c16fb]
            //   8bc7                 | mov                 eax, edi
            //   c1e81b               | shr                 eax, 0x1b
            //   c1e705               | shl                 edi, 5
            //   0bc7                 | or                  eax, edi
            //   03c6                 | add                 eax, esi

        $sequence_8 = { 57 e8???????? 8d95e8feffff 6a3b 52 e8???????? 8bf0 }
            // n = 7, score = 200
            //   57                   | push                edi
            //   e8????????           |                     
            //   8d95e8feffff         | lea                 edx, dword ptr [ebp - 0x118]
            //   6a3b                 | push                0x3b
            //   52                   | push                edx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_9 = { 7562 f7450cffff0f00 7505 394d08 7454 dd4508 ba03fcffff }
            // n = 7, score = 200
            //   7562                 | jne                 0x64
            //   f7450cffff0f00       | test                dword ptr [ebp + 0xc], 0xfffff
            //   7505                 | jne                 7
            //   394d08               | cmp                 dword ptr [ebp + 8], ecx
            //   7454                 | je                  0x56
            //   dd4508               | fld                 qword ptr [ebp + 8]
            //   ba03fcffff           | mov                 edx, 0xfffffc03

    condition:
        7 of them and filesize < 475136
}