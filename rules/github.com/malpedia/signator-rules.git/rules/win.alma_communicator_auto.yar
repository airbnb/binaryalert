rule win_alma_communicator_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.alma_communicator."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_communicator"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f8e1c030000 8b9d50f7ffff 68???????? 68???????? }
            // n = 4, score = 100
            //   0f8e1c030000         | jle                 0x322
            //   8b9d50f7ffff         | mov                 ebx, dword ptr [ebp - 0x8b0]
            //   68????????           |                     
            //   68????????           |                     

        $sequence_1 = { 8bd3 66a1???????? 8bf2 668907 8a02 42 84c0 }
            // n = 7, score = 100
            //   8bd3                 | mov                 edx, ebx
            //   66a1????????         |                     
            //   8bf2                 | mov                 esi, edx
            //   668907               | mov                 word ptr [edi], ax
            //   8a02                 | mov                 al, byte ptr [edx]
            //   42                   | inc                 edx
            //   84c0                 | test                al, al

        $sequence_2 = { e8???????? 3d00020000 0f83ad030000 8dbdfcfbffff }
            // n = 4, score = 100
            //   e8????????           |                     
            //   3d00020000           | cmp                 eax, 0x200
            //   0f83ad030000         | jae                 0x3b3
            //   8dbdfcfbffff         | lea                 edi, dword ptr [ebp - 0x404]

        $sequence_3 = { 745f 8d85f0fdffff 50 6819010200 6a00 68???????? 6802000080 }
            // n = 7, score = 100
            //   745f                 | je                  0x61
            //   8d85f0fdffff         | lea                 eax, dword ptr [ebp - 0x210]
            //   50                   | push                eax
            //   6819010200           | push                0x20119
            //   6a00                 | push                0
            //   68????????           |                     
            //   6802000080           | push                0x80000002

        $sequence_4 = { 8d85d4ebffff 50 e8???????? 8d8dd4ebffff 83c40c }
            // n = 5, score = 100
            //   8d85d4ebffff         | lea                 eax, dword ptr [ebp - 0x142c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d8dd4ebffff         | lea                 ecx, dword ptr [ebp - 0x142c]
            //   83c40c               | add                 esp, 0xc

        $sequence_5 = { 6a30 58 85f6 743b }
            // n = 4, score = 100
            //   6a30                 | push                0x30
            //   58                   | pop                 eax
            //   85f6                 | test                esi, esi
            //   743b                 | je                  0x3d

        $sequence_6 = { e8???????? 8b4dfc 83c40c 33cd 33c0 5b }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   83c40c               | add                 esp, 0xc
            //   33cd                 | xor                 ecx, ebp
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx

        $sequence_7 = { 740f 8bc1 2bc7 46 3bf0 77e4 663b1473 }
            // n = 7, score = 100
            //   740f                 | je                  0x11
            //   8bc1                 | mov                 eax, ecx
            //   2bc7                 | sub                 eax, edi
            //   46                   | inc                 esi
            //   3bf0                 | cmp                 esi, eax
            //   77e4                 | ja                  0xffffffe6
            //   663b1473             | cmp                 dx, word ptr [ebx + esi*2]

        $sequence_8 = { 52 52 ff15???????? 89849da0e9ffff 43 68e8030000 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   52                   | push                edx
            //   ff15????????         |                     
            //   89849da0e9ffff       | mov                 dword ptr [ebp + ebx*4 - 0x1660], eax
            //   43                   | inc                 ebx
            //   68e8030000           | push                0x3e8

        $sequence_9 = { 8d8d08fcffff e8???????? 8d8d0cf8ffff 898508f8ffff 51 ba???????? }
            // n = 6, score = 100
            //   8d8d08fcffff         | lea                 ecx, dword ptr [ebp - 0x3f8]
            //   e8????????           |                     
            //   8d8d0cf8ffff         | lea                 ecx, dword ptr [ebp - 0x7f4]
            //   898508f8ffff         | mov                 dword ptr [ebp - 0x7f8], eax
            //   51                   | push                ecx
            //   ba????????           |                     

    condition:
        7 of them and filesize < 245760
}