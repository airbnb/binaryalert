rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a09 33c0 c785c0feffff00000000 68???????? c785c4feffff07000000 }
            // n = 5, score = 100
            //   6a09                 | push                9
            //   33c0                 | xor                 eax, eax
            //   c785c0feffff00000000     | mov    dword ptr [ebp - 0x140], 0
            //   68????????           |                     
            //   c785c4feffff07000000     | mov    dword ptr [ebp - 0x13c], 7

        $sequence_1 = { e8???????? 8b8e8c000000 e8???????? 85c0 7551 8b8e90000000 85c9 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b8e8c000000         | mov                 ecx, dword ptr [esi + 0x8c]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7551                 | jne                 0x53
            //   8b8e90000000         | mov                 ecx, dword ptr [esi + 0x90]
            //   85c9                 | test                ecx, ecx

        $sequence_2 = { 7505 83f801 7412 50 51 56 ff774c }
            // n = 7, score = 100
            //   7505                 | jne                 7
            //   83f801               | cmp                 eax, 1
            //   7412                 | je                  0x14
            //   50                   | push                eax
            //   51                   | push                ecx
            //   56                   | push                esi
            //   ff774c               | push                dword ptr [edi + 0x4c]

        $sequence_3 = { 6a04 b8???????? e8???????? 33f6 33c0 8975f0 8b7d08 }
            // n = 7, score = 100
            //   6a04                 | push                4
            //   b8????????           |                     
            //   e8????????           |                     
            //   33f6                 | xor                 esi, esi
            //   33c0                 | xor                 eax, eax
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_4 = { 8bd1 8b0496 bb???????? 6a04 3b0493 5b 750c }
            // n = 7, score = 100
            //   8bd1                 | mov                 edx, ecx
            //   8b0496               | mov                 eax, dword ptr [esi + edx*4]
            //   bb????????           |                     
            //   6a04                 | push                4
            //   3b0493               | cmp                 eax, dword ptr [ebx + edx*4]
            //   5b                   | pop                 ebx
            //   750c                 | jne                 0xe

        $sequence_5 = { 0f857c9f0000 8d0d00be4200 ba1d000000 e8???????? 5a c3 }
            // n = 6, score = 100
            //   0f857c9f0000         | jne                 0x9f82
            //   8d0d00be4200         | lea                 ecx, dword ptr [0x42be00]
            //   ba1d000000           | mov                 edx, 0x1d
            //   e8????????           |                     
            //   5a                   | pop                 edx
            //   c3                   | ret                 

        $sequence_6 = { 8b4220 ffd0 c645fc01 8b4de0 8845f3 85c9 7411 }
            // n = 7, score = 100
            //   8b4220               | mov                 eax, dword ptr [edx + 0x20]
            //   ffd0                 | call                eax
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8845f3               | mov                 byte ptr [ebp - 0xd], al
            //   85c9                 | test                ecx, ecx
            //   7411                 | je                  0x13

        $sequence_7 = { e8???????? 33db 8d45d8 43 eb18 ff7708 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]
            //   43                   | inc                 ebx
            //   eb18                 | jmp                 0x1a
            //   ff7708               | push                dword ptr [edi + 8]

        $sequence_8 = { 83e13f c1f806 6bc938 53 56 8b048598ae4300 8b7508 }
            // n = 7, score = 100
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b048598ae4300       | mov                 eax, dword ptr [eax*4 + 0x43ae98]
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

        $sequence_9 = { 3bce 7414 e8???????? 8b06 8b4004 837c300c00 0f94c0 }
            // n = 7, score = 100
            //   3bce                 | cmp                 ecx, esi
            //   7414                 | je                  0x16
            //   e8????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   837c300c00           | cmp                 dword ptr [eax + esi + 0xc], 0
            //   0f94c0               | sete                al

    condition:
        7 of them and filesize < 519168
}