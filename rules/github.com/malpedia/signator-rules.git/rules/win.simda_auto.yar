rule win_simda_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.simda."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simda"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8955ec 897de0 3bce 0f8278feffff 5b }
            // n = 5, score = 700
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi
            //   3bce                 | cmp                 ecx, esi
            //   0f8278feffff         | jb                  0xfffffe7e
            //   5b                   | pop                 ebx

        $sequence_1 = { 83c424 33c0 668945d0 8845fe }
            // n = 4, score = 700
            //   83c424               | add                 esp, 0x24
            //   33c0                 | xor                 eax, eax
            //   668945d0             | mov                 word ptr [ebp - 0x30], ax
            //   8845fe               | mov                 byte ptr [ebp - 2], al

        $sequence_2 = { 85f6 0f84a0010000 8b4d08 8b450c }
            // n = 4, score = 700
            //   85f6                 | test                esi, esi
            //   0f84a0010000         | je                  0x1a6
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_3 = { 33f6 68ff000000 8d85f1feffff 56 50 }
            // n = 5, score = 700
            //   33f6                 | xor                 esi, esi
            //   68ff000000           | push                0xff
            //   8d85f1feffff         | lea                 eax, dword ptr [ebp - 0x10f]
            //   56                   | push                esi
            //   50                   | push                eax

        $sequence_4 = { 8d85f8feffff 50 ffd7 8b1d???????? 6a00 }
            // n = 5, score = 700
            //   8d85f8feffff         | lea                 eax, dword ptr [ebp - 0x108]
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   8b1d????????         |                     
            //   6a00                 | push                0

        $sequence_5 = { 52 ffd7 85c0 740c 68???????? }
            // n = 5, score = 700
            //   52                   | push                edx
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   68????????           |                     

        $sequence_6 = { c1eb10 3bce 7601 4b c1ef10 }
            // n = 5, score = 700
            //   c1eb10               | shr                 ebx, 0x10
            //   3bce                 | cmp                 ecx, esi
            //   7601                 | jbe                 3
            //   4b                   | dec                 ebx
            //   c1ef10               | shr                 edi, 0x10

        $sequence_7 = { 8b02 8945fc 8b55fc 8b5510 33c0 4a }
            // n = 6, score = 700
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   33c0                 | xor                 eax, eax
            //   4a                   | dec                 edx

        $sequence_8 = { 8bd1 c1ea10 8955ec 8bf8 }
            // n = 4, score = 700
            //   8bd1                 | mov                 edx, ecx
            //   c1ea10               | shr                 edx, 0x10
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   8bf8                 | mov                 edi, eax

        $sequence_9 = { 41 eb08 83c102 eb03 83c103 }
            // n = 5, score = 700
            //   41                   | inc                 ecx
            //   eb08                 | jmp                 0xa
            //   83c102               | add                 ecx, 2
            //   eb03                 | jmp                 5
            //   83c103               | add                 ecx, 3

    condition:
        7 of them and filesize < 1581056
}