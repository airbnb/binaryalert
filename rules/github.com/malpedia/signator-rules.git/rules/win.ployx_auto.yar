rule win_ployx_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.ployx."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ployx"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c410 8d1c37 8d4301 50 e8???????? 56 8945f4 }
            // n = 7, score = 100
            //   83c410               | add                 esp, 0x10
            //   8d1c37               | lea                 ebx, dword ptr [edi + esi]
            //   8d4301               | lea                 eax, dword ptr [ebx + 1]
            //   50                   | push                eax
            //   e8????????           |                     
            //   56                   | push                esi
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

        $sequence_1 = { 50 8d85e8faffff 68???????? 50 33db }
            // n = 5, score = 100
            //   50                   | push                eax
            //   8d85e8faffff         | lea                 eax, dword ptr [ebp - 0x518]
            //   68????????           |                     
            //   50                   | push                eax
            //   33db                 | xor                 ebx, ebx

        $sequence_2 = { 50 e8???????? 8bf0 59 85f6 59 7505 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   85f6                 | test                esi, esi
            //   59                   | pop                 ecx
            //   7505                 | jne                 7

        $sequence_3 = { c9 c20c00 53 55 56 8b35???????? }
            // n = 6, score = 100
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   8b35????????         |                     

        $sequence_4 = { b340 0fb64dfd 8a89d8302700 880c30 40 0fb64dfc 8a89d8302700 }
            // n = 7, score = 100
            //   b340                 | mov                 bl, 0x40
            //   0fb64dfd             | movzx               ecx, byte ptr [ebp - 3]
            //   8a89d8302700         | mov                 cl, byte ptr [ecx + 0x2730d8]
            //   880c30               | mov                 byte ptr [eax + esi], cl
            //   40                   | inc                 eax
            //   0fb64dfc             | movzx               ecx, byte ptr [ebp - 4]
            //   8a89d8302700         | mov                 cl, byte ptr [ecx + 0x2730d8]

        $sequence_5 = { 56 8bf1 c1e603 3b96983d2700 0f851c010000 a1???????? }
            // n = 6, score = 100
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   c1e603               | shl                 esi, 3
            //   3b96983d2700         | cmp                 edx, dword ptr [esi + 0x273d98]
            //   0f851c010000         | jne                 0x122
            //   a1????????           |                     

        $sequence_6 = { ffd6 8d7c0701 ebde 55 ffd6 8bf0 46 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8d7c0701             | lea                 edi, dword ptr [edi + eax + 1]
            //   ebde                 | jmp                 0xffffffe0
            //   55                   | push                ebp
            //   ffd6                 | call                esi
            //   8bf0                 | mov                 esi, eax
            //   46                   | inc                 esi

        $sequence_7 = { 50 57 e8???????? 83c40c 85c0 0f8408020000 8945e0 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f8408020000         | je                  0x20e
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax

        $sequence_8 = { 59 85c0 7e19 8bf0 8bfe }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7e19                 | jle                 0x1b
            //   8bf0                 | mov                 esi, eax
            //   8bfe                 | mov                 edi, esi

        $sequence_9 = { 59 59 7410 55 ff35???????? 53 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   7410                 | je                  0x12
            //   55                   | push                ebp
            //   ff35????????         |                     
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 229376
}