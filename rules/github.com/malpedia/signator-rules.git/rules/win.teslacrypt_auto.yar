rule win_teslacrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.teslacrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.teslacrypt"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 335d04 8b6c2418 894500 895d04 897508 897d0c 31c0 }
            // n = 7, score = 900
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   894500               | mov                 dword ptr [ebp], eax
            //   895d04               | mov                 dword ptr [ebp + 4], ebx
            //   897508               | mov                 dword ptr [ebp + 8], esi
            //   897d0c               | mov                 dword ptr [ebp + 0xc], edi
            //   31c0                 | xor                 eax, eax

        $sequence_1 = { 335d04 8b542418 8902 895a04 897208 897a0c 31c0 }
            // n = 7, score = 900
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   8b542418             | mov                 edx, dword ptr [esp + 0x18]
            //   8902                 | mov                 dword ptr [edx], eax
            //   895a04               | mov                 dword ptr [edx + 4], ebx
            //   897208               | mov                 dword ptr [edx + 8], esi
            //   897a0c               | mov                 dword ptr [edx + 0xc], edi
            //   31c0                 | xor                 eax, eax

        $sequence_2 = { 51 52 8b5510 0fb6c8 }
            // n = 4, score = 900
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   0fb6c8               | movzx               ecx, al

        $sequence_3 = { 335d04 334d08 33550c 81ffa0000000 0f8456030000 81ffc0000000 0f84ae010000 }
            // n = 7, score = 900
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   334d08               | xor                 ecx, dword ptr [ebp + 8]
            //   33550c               | xor                 edx, dword ptr [ebp + 0xc]
            //   81ffa0000000         | cmp                 edi, 0xa0
            //   0f8456030000         | je                  0x35c
            //   81ffc0000000         | cmp                 edi, 0xc0
            //   0f84ae010000         | je                  0x1b4

        $sequence_4 = { 53 56 57 8b6c2418 c785f0000000e0000000 8b5c2414 }
            // n = 6, score = 900
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   c785f0000000e0000000     | mov    dword ptr [ebp + 0xf0], 0xe0
            //   8b5c2414             | mov                 ebx, dword ptr [esp + 0x14]

        $sequence_5 = { 335d04 83c510 8b7508 8b7d0c 55 c1c310 0fb6e9 }
            // n = 7, score = 900
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   83c510               | add                 ebp, 0x10
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   55                   | push                ebp
            //   c1c310               | rol                 ebx, 0x10
            //   0fb6e9               | movzx               ebp, cl

        $sequence_6 = { 33859c000000 8985bc000000 51 52 }
            // n = 4, score = 900
            //   33859c000000         | xor                 eax, dword ptr [ebp + 0x9c]
            //   8985bc000000         | mov                 dword ptr [ebp + 0xbc], eax
            //   51                   | push                ecx
            //   52                   | push                edx

        $sequence_7 = { 31c8 c1eb10 c1ea10 0fb6ce }
            // n = 4, score = 900
            //   31c8                 | xor                 eax, ecx
            //   c1eb10               | shr                 ebx, 0x10
            //   c1ea10               | shr                 edx, 0x10
            //   0fb6ce               | movzx               ecx, dh

        $sequence_8 = { 894c2470 8b4c2474 89480c 896804 8910 c7400804000000 }
            // n = 6, score = 100
            //   894c2470             | mov                 dword ptr [esp + 0x70], ecx
            //   8b4c2474             | mov                 ecx, dword ptr [esp + 0x74]
            //   89480c               | mov                 dword ptr [eax + 0xc], ecx
            //   896804               | mov                 dword ptr [eax + 4], ebp
            //   8910                 | mov                 dword ptr [eax], edx
            //   c7400804000000       | mov                 dword ptr [eax + 8], 4

        $sequence_9 = { e8???????? 83ec0c 8b4c2410 83c101 8b542414 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   83ec0c               | sub                 esp, 0xc
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   83c101               | add                 ecx, 1
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]

        $sequence_10 = { 8b542410 8902 890c24 e8???????? 8d0dfd304b00 8b542410 }
            // n = 6, score = 100
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   8902                 | mov                 dword ptr [edx], eax
            //   890c24               | mov                 dword ptr [esp], ecx
            //   e8????????           |                     
            //   8d0dfd304b00         | lea                 ecx, dword ptr [0x4b30fd]
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]

        $sequence_11 = { 8b3d???????? 8b5f4c 891c24 89442430 }
            // n = 4, score = 100
            //   8b3d????????         |                     
            //   8b5f4c               | mov                 ebx, dword ptr [edi + 0x4c]
            //   891c24               | mov                 dword ptr [esp], ebx
            //   89442430             | mov                 dword ptr [esp + 0x30], eax

        $sequence_12 = { 8b7204 83fe00 8b7c2438 894c2420 89742424 }
            // n = 5, score = 100
            //   8b7204               | mov                 esi, dword ptr [edx + 4]
            //   83fe00               | cmp                 esi, 0
            //   8b7c2438             | mov                 edi, dword ptr [esp + 0x38]
            //   894c2420             | mov                 dword ptr [esp + 0x20], ecx
            //   89742424             | mov                 dword ptr [esp + 0x24], esi

        $sequence_13 = { 891406 eb28 8b442410 8b4c2430 01c8 8b542470 }
            // n = 6, score = 100
            //   891406               | mov                 dword ptr [esi + eax], edx
            //   eb28                 | jmp                 0x2a
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]
            //   01c8                 | add                 eax, ecx
            //   8b542470             | mov                 edx, dword ptr [esp + 0x70]

        $sequence_14 = { 8b542428 0fb77214 01f1 89442420 894c241c eb2c 8b442428 }
            // n = 7, score = 100
            //   8b542428             | mov                 edx, dword ptr [esp + 0x28]
            //   0fb77214             | movzx               esi, word ptr [edx + 0x14]
            //   01f1                 | add                 ecx, esi
            //   89442420             | mov                 dword ptr [esp + 0x20], eax
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx
            //   eb2c                 | jmp                 0x2e
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]

        $sequence_15 = { c20c00 8b0424 8b4c2408 8a1401 8b742404 }
            // n = 5, score = 100
            //   c20c00               | ret                 0xc
            //   8b0424               | mov                 eax, dword ptr [esp]
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   8a1401               | mov                 dl, byte ptr [ecx + eax]
            //   8b742404             | mov                 esi, dword ptr [esp + 4]

    condition:
        7 of them and filesize < 1187840
}