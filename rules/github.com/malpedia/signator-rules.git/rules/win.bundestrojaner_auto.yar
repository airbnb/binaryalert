rule win_bundestrojaner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.bundestrojaner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bundestrojaner"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33ed 8b4730 8b5728 8d7710 898424bc000000 3bd5 8b4604 }
            // n = 7, score = 100
            //   33ed                 | xor                 ebp, ebp
            //   8b4730               | mov                 eax, dword ptr [edi + 0x30]
            //   8b5728               | mov                 edx, dword ptr [edi + 0x28]
            //   8d7710               | lea                 esi, dword ptr [edi + 0x10]
            //   898424bc000000       | mov                 dword ptr [esp + 0xbc], eax
            //   3bd5                 | cmp                 edx, ebp
            //   8b4604               | mov                 eax, dword ptr [esi + 4]

        $sequence_1 = { 8b4c2418 8bf0 8d0433 50 68???????? 51 8bcf }
            // n = 7, score = 100
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   8bf0                 | mov                 esi, eax
            //   8d0433               | lea                 eax, dword ptr [ebx + esi]
            //   50                   | push                eax
            //   68????????           |                     
            //   51                   | push                ecx
            //   8bcf                 | mov                 ecx, edi

        $sequence_2 = { 33fd c1e918 81e6ff000000 8b2c8dc8040410 8b484c 33fd 8b2cb5c8f80310 }
            // n = 7, score = 100
            //   33fd                 | xor                 edi, ebp
            //   c1e918               | shr                 ecx, 0x18
            //   81e6ff000000         | and                 esi, 0xff
            //   8b2c8dc8040410       | mov                 ebp, dword ptr [ecx*4 + 0x100404c8]
            //   8b484c               | mov                 ecx, dword ptr [eax + 0x4c]
            //   33fd                 | xor                 edi, ebp
            //   8b2cb5c8f80310       | mov                 ebp, dword ptr [esi*4 + 0x1003f8c8]

        $sequence_3 = { 75dc 33c0 eb05 1bc0 83d8ff 85c0 0f84fe000000 }
            // n = 7, score = 100
            //   75dc                 | jne                 0xffffffde
            //   33c0                 | xor                 eax, eax
            //   eb05                 | jmp                 7
            //   1bc0                 | sbb                 eax, eax
            //   83d8ff               | sbb                 eax, -1
            //   85c0                 | test                eax, eax
            //   0f84fe000000         | je                  0x104

        $sequence_4 = { 83e203 2bd8 03d0 895c2448 03fa 8bef 2be8 }
            // n = 7, score = 100
            //   83e203               | and                 edx, 3
            //   2bd8                 | sub                 ebx, eax
            //   03d0                 | add                 edx, eax
            //   895c2448             | mov                 dword ptr [esp + 0x48], ebx
            //   03fa                 | add                 edi, edx
            //   8bef                 | mov                 ebp, edi
            //   2be8                 | sub                 ebp, eax

        $sequence_5 = { 5d 5b 83c434 c3 8b5670 8b466c 833c9000 }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   83c434               | add                 esp, 0x34
            //   c3                   | ret                 
            //   8b5670               | mov                 edx, dword ptr [esi + 0x70]
            //   8b466c               | mov                 eax, dword ptr [esi + 0x6c]
            //   833c9000             | cmp                 dword ptr [eax + edx*4], 0

        $sequence_6 = { eb05 1bc0 83d8ff 3bc3 0f85be000000 8a4510 84c0 }
            // n = 7, score = 100
            //   eb05                 | jmp                 7
            //   1bc0                 | sbb                 eax, eax
            //   83d8ff               | sbb                 eax, -1
            //   3bc3                 | cmp                 eax, ebx
            //   0f85be000000         | jne                 0xc4
            //   8a4510               | mov                 al, byte ptr [ebp + 0x10]
            //   84c0                 | test                al, al

        $sequence_7 = { 50 57 51 53 e8???????? 8be8 a1???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   e8????????           |                     
            //   8be8                 | mov                 ebp, eax
            //   a1????????           |                     

        $sequence_8 = { 7d0a 8b442428 85c0 7429 eb11 8b4c2428 3bc8 }
            // n = 7, score = 100
            //   7d0a                 | jge                 0xc
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   85c0                 | test                eax, eax
            //   7429                 | je                  0x2b
            //   eb11                 | jmp                 0x13
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   3bc8                 | cmp                 ecx, eax

        $sequence_9 = { 8b16 8b4e04 42 49 89442424 8916 894e04 }
            // n = 7, score = 100
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   42                   | inc                 edx
            //   49                   | dec                 ecx
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   8916                 | mov                 dword ptr [esi], edx
            //   894e04               | mov                 dword ptr [esi + 4], ecx

    condition:
        7 of them and filesize < 729088
}