rule win_klrd_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.klrd."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.klrd"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffb5d0feffff ff15???????? 8b8dd0feffff 88840dc0fdffff ebcc 8a85e7feffff 8885acfcffff }
            // n = 7, score = 100
            //   ffb5d0feffff         | push                dword ptr [ebp - 0x130]
            //   ff15????????         |                     
            //   8b8dd0feffff         | mov                 ecx, dword ptr [ebp - 0x130]
            //   88840dc0fdffff       | mov                 byte ptr [ebp + ecx - 0x240], al
            //   ebcc                 | jmp                 0xffffffce
            //   8a85e7feffff         | mov                 al, byte ptr [ebp - 0x119]
            //   8885acfcffff         | mov                 byte ptr [ebp - 0x354], al

        $sequence_1 = { 8885b7fcffff 0fbe85b7fcffff 50 68???????? e8???????? }
            // n = 5, score = 100
            //   8885b7fcffff         | mov                 byte ptr [ebp - 0x349], al
            //   0fbe85b7fcffff       | movsx               eax, byte ptr [ebp - 0x349]
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_2 = { 83c40c 83a5b0fcffff00 83a5bcfdffff00 33c0 }
            // n = 4, score = 100
            //   83c40c               | add                 esp, 0xc
            //   83a5b0fcffff00       | and                 dword ptr [ebp - 0x350], 0
            //   83a5bcfdffff00       | and                 dword ptr [ebp - 0x244], 0
            //   33c0                 | xor                 eax, eax

        $sequence_3 = { 754f ff15???????? a3???????? 6800010000 8d85e8feffff }
            // n = 5, score = 100
            //   754f                 | jne                 0x51
            //   ff15????????         |                     
            //   a3????????           |                     
            //   6800010000           | push                0x100
            //   8d85e8feffff         | lea                 eax, dword ptr [ebp - 0x118]

        $sequence_4 = { 88840dc0fdffff ebcc 8a85e7feffff 8885acfcffff }
            // n = 4, score = 100
            //   88840dc0fdffff       | mov                 byte ptr [ebp + ecx - 0x240], al
            //   ebcc                 | jmp                 0xffffffce
            //   8a85e7feffff         | mov                 al, byte ptr [ebp - 0x119]
            //   8885acfcffff         | mov                 byte ptr [ebp - 0x354], al

        $sequence_5 = { 50 889dfcfeffff e8???????? 83c40c 53 ff15???????? }
            // n = 6, score = 100
            //   50                   | push                eax
            //   889dfcfeffff         | mov                 byte ptr [ebp - 0x104], bl
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_6 = { 740d 817d0c00010000 0f85a6020000 8b7510 }
            // n = 4, score = 100
            //   740d                 | je                  0xf
            //   817d0c00010000       | cmp                 dword ptr [ebp + 0xc], 0x100
            //   0f85a6020000         | jne                 0x2ac
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]

        $sequence_7 = { 6a00 ffb5b0fcffff ff15???????? 8985c8feffff 83bdc8feffff00 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   ffb5b0fcffff         | push                dword ptr [ebp - 0x350]
            //   ff15????????         |                     
            //   8985c8feffff         | mov                 dword ptr [ebp - 0x138], eax
            //   83bdc8feffff00       | cmp                 dword ptr [ebp - 0x138], 0

        $sequence_8 = { 80bdacfcffff20 7432 eb57 68???????? e8???????? 59 e9???????? }
            // n = 7, score = 100
            //   80bdacfcffff20       | cmp                 byte ptr [ebp - 0x354], 0x20
            //   7432                 | je                  0x34
            //   eb57                 | jmp                 0x59
            //   68????????           |                     
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   e9????????           |                     

        $sequence_9 = { 50 ff15???????? 3bc3 7517 ffd6 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   3bc3                 | cmp                 eax, ebx
            //   7517                 | jne                 0x19
            //   ffd6                 | call                esi

    condition:
        7 of them and filesize < 40960
}