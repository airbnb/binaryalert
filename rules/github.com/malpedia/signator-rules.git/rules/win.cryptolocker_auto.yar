rule win_cryptolocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.cryptolocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cryptolocker"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945b0 8d45a0 50 8975a0 c745a400000000 c745a800000000 c745ac00000000 }
            // n = 7, score = 600
            //   8945b0               | mov                 dword ptr [ebp - 0x50], eax
            //   8d45a0               | lea                 eax, dword ptr [ebp - 0x60]
            //   50                   | push                eax
            //   8975a0               | mov                 dword ptr [ebp - 0x60], esi
            //   c745a400000000       | mov                 dword ptr [ebp - 0x5c], 0
            //   c745a800000000       | mov                 dword ptr [ebp - 0x58], 0
            //   c745ac00000000       | mov                 dword ptr [ebp - 0x54], 0

        $sequence_1 = { 85d2 740d 52 ff7510 53 e8???????? 83c40c }
            // n = 7, score = 600
            //   85d2                 | test                edx, edx
            //   740d                 | je                  0xf
            //   52                   | push                edx
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 8b45ec 2b45e8 40 3945f0 0f9cc0 84c0 7467 }
            // n = 7, score = 600
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   2b45e8               | sub                 eax, dword ptr [ebp - 0x18]
            //   40                   | inc                 eax
            //   3945f0               | cmp                 dword ptr [ebp - 0x10], eax
            //   0f9cc0               | setl                al
            //   84c0                 | test                al, al
            //   7467                 | je                  0x69

        $sequence_3 = { c21800 8b451c f6400c40 740b 5f 5e 33c0 }
            // n = 7, score = 600
            //   c21800               | ret                 0x18
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]
            //   f6400c40             | test                byte ptr [eax + 0xc], 0x40
            //   740b                 | je                  0xd
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 8bf1 8bda 85f6 0f8487000000 0fb70e }
            // n = 5, score = 600
            //   8bf1                 | mov                 esi, ecx
            //   8bda                 | mov                 ebx, edx
            //   85f6                 | test                esi, esi
            //   0f8487000000         | je                  0x8d
            //   0fb70e               | movzx               ecx, word ptr [esi]

        $sequence_5 = { 2945d8 8b4dcc 294dd4 8945e0 8d45dc 50 ff7614 }
            // n = 7, score = 600
            //   2945d8               | sub                 dword ptr [ebp - 0x28], eax
            //   8b4dcc               | mov                 ecx, dword ptr [ebp - 0x34]
            //   294dd4               | sub                 dword ptr [ebp - 0x2c], ecx
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8d45dc               | lea                 eax, dword ptr [ebp - 0x24]
            //   50                   | push                eax
            //   ff7614               | push                dword ptr [esi + 0x14]

        $sequence_6 = { 8be5 5d c21800 668b7d14 53 668b5d1c 0fb7cf }
            // n = 7, score = 600
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c21800               | ret                 0x18
            //   668b7d14             | mov                 di, word ptr [ebp + 0x14]
            //   53                   | push                ebx
            //   668b5d1c             | mov                 bx, word ptr [ebp + 0x1c]
            //   0fb7cf               | movzx               ecx, di

        $sequence_7 = { 51 57 8bfa 85ff 7504 33c9 eb20 }
            // n = 7, score = 600
            //   51                   | push                ecx
            //   57                   | push                edi
            //   8bfa                 | mov                 edi, edx
            //   85ff                 | test                edi, edi
            //   7504                 | jne                 6
            //   33c9                 | xor                 ecx, ecx
            //   eb20                 | jmp                 0x22

        $sequence_8 = { ff35???????? ff15???????? 68a0000000 ff15???????? 5f 5e 33c0 }
            // n = 7, score = 600
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   68a0000000           | push                0xa0
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { ff75e4 57 ff15???????? 57 ff15???????? 8d45cc 50 }
            // n = 7, score = 600
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   57                   | push                edi
            //   ff15????????         |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8d45cc               | lea                 eax, dword ptr [ebp - 0x34]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 778240
}