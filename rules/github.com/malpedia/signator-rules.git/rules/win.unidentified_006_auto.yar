rule win_unidentified_006_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.unidentified_006."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_006"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? 50 ff15???????? 8bf0 8975f4 85f6 }
            // n = 6, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   85f6                 | test                esi, esi

        $sequence_1 = { e8???????? 8b45f8 0345f4 56 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   0345f4               | add                 eax, dword ptr [ebp - 0xc]
            //   56                   | push                esi

        $sequence_2 = { 25ff000000 30041a 42 3bd1 }
            // n = 4, score = 100
            //   25ff000000           | and                 eax, 0xff
            //   30041a               | xor                 byte ptr [edx + ebx], al
            //   42                   | inc                 edx
            //   3bd1                 | cmp                 edx, ecx

        $sequence_3 = { ff75f4 57 56 e8???????? 8b45f4 83c40c }
            // n = 6, score = 100
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   57                   | push                edi
            //   56                   | push                esi
            //   e8????????           |                     
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { 6a00 8d45fc 897dfc 50 8d45f8 50 6a00 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_5 = { 8b45e8 8b4d08 8930 8b45f8 }
            // n = 4, score = 100
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8930                 | mov                 dword ptr [eax], esi
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_6 = { 6a38 8d45c8 8937 53 50 }
            // n = 5, score = 100
            //   6a38                 | push                0x38
            //   8d45c8               | lea                 eax, dword ptr [ebp - 0x38]
            //   8937                 | mov                 dword ptr [edi], esi
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_7 = { 894708 4e 668b45dc 6689470c 33c0 85f6 0f94c0 }
            // n = 7, score = 100
            //   894708               | mov                 dword ptr [edi + 8], eax
            //   4e                   | dec                 esi
            //   668b45dc             | mov                 ax, word ptr [ebp - 0x24]
            //   6689470c             | mov                 word ptr [edi + 0xc], ax
            //   33c0                 | xor                 eax, eax
            //   85f6                 | test                esi, esi
            //   0f94c0               | sete                al

        $sequence_8 = { 7407 57 e8???????? 59 84db }
            // n = 5, score = 100
            //   7407                 | je                  9
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   84db                 | test                bl, bl

        $sequence_9 = { b301 85ff 7407 57 }
            // n = 4, score = 100
            //   b301                 | mov                 bl, 1
            //   85ff                 | test                edi, edi
            //   7407                 | je                  9
            //   57                   | push                edi

    condition:
        7 of them and filesize < 40960
}