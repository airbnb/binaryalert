rule win_rustock_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.rustock."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rustock"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 29cb 83c1ff ebb5 7402 ebd3 }
            // n = 5, score = 100
            //   29cb                 | sub                 ebx, ecx
            //   83c1ff               | add                 ecx, -1
            //   ebb5                 | jmp                 0xffffffb7
            //   7402                 | je                  4
            //   ebd3                 | jmp                 0xffffffd5

        $sequence_1 = { 53 e8???????? 83c40c 8bc3 8d5001 8a08 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8bc3                 | mov                 eax, ebx
            //   8d5001               | lea                 edx, dword ptr [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_2 = { 22a999155d2e ad 282cf4 d7 846be6 5d }
            // n = 6, score = 100
            //   22a999155d2e         | and                 ch, byte ptr [ecx + 0x2e5d1599]
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   282cf4               | sub                 byte ptr [esp + esi*8], ch
            //   d7                   | xlatb               
            //   846be6               | test                byte ptr [ebx - 0x1a], ch
            //   5d                   | pop                 ebp

        $sequence_3 = { 8b5508 53 56 57 33c0 3b14c5e82b0401 7406 }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   3b14c5e82b0401       | cmp                 edx, dword ptr [eax*8 + 0x1042be8]
            //   7406                 | je                  8

        $sequence_4 = { c3 ff15???????? 8b1424 83c404 }
            // n = 4, score = 100
            //   c3                   | ret                 
            //   ff15????????         |                     
            //   8b1424               | mov                 edx, dword ptr [esp]
            //   83c404               | add                 esp, 4

        $sequence_5 = { 8d043f 50 e8???????? 59 8945d0 }
            // n = 5, score = 100
            //   8d043f               | lea                 eax, dword ptr [edi + edi]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax

        $sequence_6 = { a5 1c90 d6 a6 7f1a c9 }
            // n = 6, score = 100
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   1c90                 | sbb                 al, 0x90
            //   d6                   | salc                
            //   a6                   | cmpsb               byte ptr [esi], byte ptr es:[edi]
            //   7f1a                 | jg                  0x1c
            //   c9                   | leave               

        $sequence_7 = { e8???????? 8d3d00c00101 bb04000000 8b16 29c2 8d801c3367d0 8d6424fc }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d3d00c00101         | lea                 edi, dword ptr [0x101c000]
            //   bb04000000           | mov                 ebx, 4
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   29c2                 | sub                 edx, eax
            //   8d801c3367d0         | lea                 eax, dword ptr [eax - 0x2f98cce4]
            //   8d6424fc             | lea                 esp, dword ptr [esp - 4]

        $sequence_8 = { 89d7 29d7 bf00000000 29f7 31d7 21d1 033d???????? }
            // n = 7, score = 100
            //   89d7                 | mov                 edi, edx
            //   29d7                 | sub                 edi, edx
            //   bf00000000           | mov                 edi, 0
            //   29f7                 | sub                 edi, esi
            //   31d7                 | xor                 edi, edx
            //   21d1                 | and                 ecx, edx
            //   033d????????         |                     

        $sequence_9 = { 01df 57 6aff e8???????? 5f }
            // n = 5, score = 100
            //   01df                 | add                 edi, ebx
            //   57                   | push                edi
            //   6aff                 | push                -1
            //   e8????????           |                     
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 565248
}