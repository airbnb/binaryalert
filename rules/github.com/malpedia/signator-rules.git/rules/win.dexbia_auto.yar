rule win_dexbia_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.dexbia."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dexbia"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bcb 8d9424f80b0000 83e103 f3a4 bf???????? }
            // n = 5, score = 200
            //   8bcb                 | mov                 ecx, ebx
            //   8d9424f80b0000       | lea                 edx, dword ptr [esp + 0xbf8]
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   bf????????           |                     

        $sequence_1 = { 8b0485e0b04000 8d04c8 eb05 b8???????? f6400420 740d }
            // n = 6, score = 200
            //   8b0485e0b04000       | mov                 eax, dword ptr [eax*4 + 0x40b0e0]
            //   8d04c8               | lea                 eax, dword ptr [eax + ecx*8]
            //   eb05                 | jmp                 7
            //   b8????????           |                     
            //   f6400420             | test                byte ptr [eax + 4], 0x20
            //   740d                 | je                  0xf

        $sequence_2 = { 6a64 ff15???????? 8b442414 03f0 8d442414 50 }
            // n = 6, score = 200
            //   6a64                 | push                0x64
            //   ff15????????         |                     
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   03f0                 | add                 esi, eax
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   50                   | push                eax

        $sequence_3 = { 8b8c2420100000 6a00 6a00 6a03 6a00 }
            // n = 5, score = 200
            //   8b8c2420100000       | mov                 ecx, dword ptr [esp + 0x1020]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   6a00                 | push                0

        $sequence_4 = { 0fb6d2 f682a19f400004 7403 40 ff01 }
            // n = 5, score = 200
            //   0fb6d2               | movzx               edx, dl
            //   f682a19f400004       | test                byte ptr [edx + 0x409fa1], 4
            //   7403                 | je                  5
            //   40                   | inc                 eax
            //   ff01                 | inc                 dword ptr [ecx]

        $sequence_5 = { ffd6 be???????? 8d442418 8a10 8a1e }
            // n = 5, score = 200
            //   ffd6                 | call                esi
            //   be????????           |                     
            //   8d442418             | lea                 eax, dword ptr [esp + 0x18]
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8a1e                 | mov                 bl, byte ptr [esi]

        $sequence_6 = { 33c0 8dbc248a000000 66c78424880000000000 f3ab 66ab b908000000 }
            // n = 6, score = 200
            //   33c0                 | xor                 eax, eax
            //   8dbc248a000000       | lea                 edi, dword ptr [esp + 0x8a]
            //   66c78424880000000000     | mov    word ptr [esp + 0x88], 0
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b908000000           | mov                 ecx, 8

        $sequence_7 = { 68???????? e8???????? 83c428 53 ff15???????? 5f }
            // n = 6, score = 200
            //   68????????           |                     
            //   e8????????           |                     
            //   83c428               | add                 esp, 0x28
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   5f                   | pop                 edi

        $sequence_8 = { f3ab 66ab aa c744241400000000 bf00100000 }
            // n = 5, score = 200
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   c744241400000000     | mov                 dword ptr [esp + 0x14], 0
            //   bf00100000           | mov                 edi, 0x1000

        $sequence_9 = { 51 ffd6 8b542418 52 ffd6 55 }
            // n = 6, score = 200
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   8b542418             | mov                 edx, dword ptr [esp + 0x18]
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   55                   | push                ebp

    condition:
        7 of them and filesize < 106496
}