rule win_defray_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.defray."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.defray"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2b07 6a01 50 ff37 e8???????? 83c40c 8d0433 }
            // n = 7, score = 200
            //   2b07                 | sub                 eax, dword ptr [edi]
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ff37                 | push                dword ptr [edi]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d0433               | lea                 eax, dword ptr [ebx + esi]

        $sequence_1 = { 8a06 3c7f 7435 8b5db4 84c0 7e2b 0fbec8 }
            // n = 7, score = 200
            //   8a06                 | mov                 al, byte ptr [esi]
            //   3c7f                 | cmp                 al, 0x7f
            //   7435                 | je                  0x37
            //   8b5db4               | mov                 ebx, dword ptr [ebp - 0x4c]
            //   84c0                 | test                al, al
            //   7e2b                 | jle                 0x2d
            //   0fbec8               | movsx               ecx, al

        $sequence_2 = { 894dec 3b04b5e0fb4800 7cb5 51 6bce0c 891cb5d8f94800 030d???????? }
            // n = 7, score = 200
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   3b04b5e0fb4800       | cmp                 eax, dword ptr [esi*4 + 0x48fbe0]
            //   7cb5                 | jl                  0xffffffb7
            //   51                   | push                ecx
            //   6bce0c               | imul                ecx, esi, 0xc
            //   891cb5d8f94800       | mov                 dword ptr [esi*4 + 0x48f9d8], ebx
            //   030d????????         |                     

        $sequence_3 = { 75f1 8dbdc8fdffff 83ef02 668b4702 83c702 663bc6 75f4 }
            // n = 7, score = 200
            //   75f1                 | jne                 0xfffffff3
            //   8dbdc8fdffff         | lea                 edi, dword ptr [ebp - 0x238]
            //   83ef02               | sub                 edi, 2
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   83c702               | add                 edi, 2
            //   663bc6               | cmp                 ax, si
            //   75f4                 | jne                 0xfffffff6

        $sequence_4 = { a5 a5 a5 66a5 8dbdc8fdffff 83ef02 668b4702 }
            // n = 7, score = 200
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   8dbdc8fdffff         | lea                 edi, dword ptr [ebp - 0x238]
            //   83ef02               | sub                 edi, 2
            //   668b4702             | mov                 ax, word ptr [edi + 2]

        $sequence_5 = { 8b5518 3bc1 0f44d7 8b45fc 8910 e9???????? 8b5518 }
            // n = 7, score = 200
            //   8b5518               | mov                 edx, dword ptr [ebp + 0x18]
            //   3bc1                 | cmp                 eax, ecx
            //   0f44d7               | cmove               edx, edi
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8910                 | mov                 dword ptr [eax], edx
            //   e9????????           |                     
            //   8b5518               | mov                 edx, dword ptr [ebp + 0x18]

        $sequence_6 = { a5 a5 8dbd60efffff be???????? ab ab ab }
            // n = 7, score = 200
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   8dbd60efffff         | lea                 edi, dword ptr [ebp - 0x10a0]
            //   be????????           |                     
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_7 = { 8bc6 83e03f 6bc830 8b049568f34800 f644082801 740b 56 }
            // n = 7, score = 200
            //   8bc6                 | mov                 eax, esi
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b049568f34800       | mov                 eax, dword ptr [edx*4 + 0x48f368]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   740b                 | je                  0xd
            //   56                   | push                esi

        $sequence_8 = { 895704 89770c 897710 897714 8975fc e8???????? 8bd8 }
            // n = 7, score = 200
            //   895704               | mov                 dword ptr [edi + 4], edx
            //   89770c               | mov                 dword ptr [edi + 0xc], esi
            //   897710               | mov                 dword ptr [edi + 0x10], esi
            //   897714               | mov                 dword ptr [edi + 0x14], esi
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_9 = { 8d4902 6685c0 75f1 8dbdc0fdffff 83ef02 668b4702 83c702 }
            // n = 7, score = 200
            //   8d4902               | lea                 ecx, dword ptr [ecx + 2]
            //   6685c0               | test                ax, ax
            //   75f1                 | jne                 0xfffffff3
            //   8dbdc0fdffff         | lea                 edi, dword ptr [ebp - 0x240]
            //   83ef02               | sub                 edi, 2
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   83c702               | add                 edi, 2

    condition:
        7 of them and filesize < 1253376
}