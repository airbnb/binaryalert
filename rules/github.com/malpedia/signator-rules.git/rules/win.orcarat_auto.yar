rule win_orcarat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.orcarat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.orcarat"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 52 6a01 8bcf e8???????? 85c0 }
            // n = 6, score = 200
            //   51                   | push                ecx
            //   52                   | push                edx
            //   6a01                 | push                1
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_1 = { 8bd9 8b4c2414 57 56 8d6b04 50 51 }
            // n = 7, score = 200
            //   8bd9                 | mov                 ebx, ecx
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   57                   | push                edi
            //   56                   | push                esi
            //   8d6b04               | lea                 ebp, dword ptr [ebx + 4]
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_2 = { 81ec780f0000 53 56 57 8d4c241c e8???????? }
            // n = 6, score = 200
            //   81ec780f0000         | sub                 esp, 0xf78
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d4c241c             | lea                 ecx, dword ptr [esp + 0x1c]
            //   e8????????           |                     

        $sequence_3 = { 83e103 50 f3a4 8d7c2420 83c9ff }
            // n = 5, score = 200
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d7c2420             | lea                 edi, dword ptr [esp + 0x20]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_4 = { f7d1 2bf9 8d94242c140000 8bf7 }
            // n = 4, score = 200
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8d94242c140000       | lea                 edx, dword ptr [esp + 0x142c]
            //   8bf7                 | mov                 esi, edi

        $sequence_5 = { e8???????? 83c404 68581b0000 ffd6 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68581b0000           | push                0x1b58
            //   ffd6                 | call                esi

        $sequence_6 = { 3d97010000 740b 3d91010000 0f8569010000 }
            // n = 4, score = 200
            //   3d97010000           | cmp                 eax, 0x197
            //   740b                 | je                  0xd
            //   3d91010000           | cmp                 eax, 0x191
            //   0f8569010000         | jne                 0x16f

        $sequence_7 = { 50 e8???????? 5f 5e 5b 81c424610000 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   81c424610000         | add                 esp, 0x6124

        $sequence_8 = { 8d542420 f2ae f7d1 2bf9 6a2b }
            // n = 5, score = 200
            //   8d542420             | lea                 edx, dword ptr [esp + 0x20]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   6a2b                 | push                0x2b

        $sequence_9 = { b808500000 e8???????? 53 8b9c2410500000 55 56 57 }
            // n = 7, score = 200
            //   b808500000           | mov                 eax, 0x5008
            //   e8????????           |                     
            //   53                   | push                ebx
            //   8b9c2410500000       | mov                 ebx, dword ptr [esp + 0x5010]
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi

    condition:
        7 of them and filesize < 114688
}