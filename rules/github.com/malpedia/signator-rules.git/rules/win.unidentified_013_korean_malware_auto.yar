rule win_unidentified_013_korean_malware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.unidentified_013_korean_malware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_013_korean_malware"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 803c383f 0f84d6000000 3b7c243c 7605 }
            // n = 4, score = 200
            //   803c383f             | cmp                 byte ptr [eax + edi], 0x3f
            //   0f84d6000000         | je                  0xdc
            //   3b7c243c             | cmp                 edi, dword ptr [esp + 0x3c]
            //   7605                 | jbe                 7

        $sequence_1 = { 8b842420010000 53 56 57 6a00 }
            // n = 5, score = 200
            //   8b842420010000       | mov                 eax, dword ptr [esp + 0x120]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a00                 | push                0

        $sequence_2 = { 803c337f 8944242c 0f840f010000 3bd8 }
            // n = 4, score = 200
            //   803c337f             | cmp                 byte ptr [ebx + esi], 0x7f
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   0f840f010000         | je                  0x115
            //   3bd8                 | cmp                 ebx, eax

        $sequence_3 = { 5f 33c0 5e 83c428 c3 8b442418 }
            // n = 6, score = 200
            //   5f                   | pop                 edi
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   83c428               | add                 esp, 0x28
            //   c3                   | ret                 
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]

        $sequence_4 = { 56 ff15???????? 8bf8 85ff 743c 6a00 8d442414 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   743c                 | je                  0x3e
            //   6a00                 | push                0
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]

        $sequence_5 = { eb02 8bc2 c6043800 83eb01 }
            // n = 4, score = 200
            //   eb02                 | jmp                 4
            //   8bc2                 | mov                 eax, edx
            //   c6043800             | mov                 byte ptr [eax + edi], 0
            //   83eb01               | sub                 ebx, 1

        $sequence_6 = { 8d842458060000 64a300000000 68???????? 68???????? 68???????? 8d842460050000 68???????? }
            // n = 7, score = 200
            //   8d842458060000       | lea                 eax, dword ptr [esp + 0x658]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   68????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   8d842460050000       | lea                 eax, dword ptr [esp + 0x560]
            //   68????????           |                     

        $sequence_7 = { 80e10f 02c9 8ad0 02c9 c0ea06 02ca 243f }
            // n = 7, score = 200
            //   80e10f               | and                 cl, 0xf
            //   02c9                 | add                 cl, cl
            //   8ad0                 | mov                 dl, al
            //   02c9                 | add                 cl, cl
            //   c0ea06               | shr                 dl, 6
            //   02ca                 | add                 cl, dl
            //   243f                 | and                 al, 0x3f

        $sequence_8 = { e8???????? 85ff 7648 8b4e14 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   85ff                 | test                edi, edi
            //   7648                 | jbe                 0x4a
            //   8b4e14               | mov                 ecx, dword ptr [esi + 0x14]

        $sequence_9 = { 0f8485010000 e8???????? 8b442418 8b4c2414 50 51 53 }
            // n = 7, score = 200
            //   0f8485010000         | je                  0x18b
            //   e8????????           |                     
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 204800
}