rule win_anel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.anel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.anel"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 57 3b4508 746f 8d5010 eb65 8bf2 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   3b4508               | cmp                 eax, dword ptr [ebp + 8]
            //   746f                 | je                  0x71
            //   8d5010               | lea                 edx, dword ptr [eax + 0x10]
            //   eb65                 | jmp                 0x67
            //   8bf2                 | mov                 esi, edx

        $sequence_1 = { e8???????? 6a01 8d75b8 c645fc07 e8???????? 8d4dd4 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d75b8               | lea                 esi, dword ptr [ebp - 0x48]
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   e8????????           |                     
            //   8d4dd4               | lea                 ecx, dword ptr [ebp - 0x2c]
            //   e8????????           |                     

        $sequence_2 = { 05b1675616 0301 8d4a04 eb19 8b3a 69ffc3514d3d 2bc7 }
            // n = 7, score = 200
            //   05b1675616           | add                 eax, 0x165667b1
            //   0301                 | add                 eax, dword ptr [ecx]
            //   8d4a04               | lea                 ecx, dword ptr [edx + 4]
            //   eb19                 | jmp                 0x1b
            //   8b3a                 | mov                 edi, dword ptr [edx]
            //   69ffc3514d3d         | imul                edi, edi, 0x3d4d51c3
            //   2bc7                 | sub                 eax, edi

        $sequence_3 = { 83e910 3b5904 7f17 7c07 8b75e8 }
            // n = 5, score = 200
            //   83e910               | sub                 ecx, 0x10
            //   3b5904               | cmp                 ebx, dword ptr [ecx + 4]
            //   7f17                 | jg                  0x19
            //   7c07                 | jl                  9
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]

        $sequence_4 = { 0f86b8000000 eb05 8b5d80 33ff c745e80f000000 897de4 c645d400 }
            // n = 7, score = 200
            //   0f86b8000000         | jbe                 0xbe
            //   eb05                 | jmp                 7
            //   8b5d80               | mov                 ebx, dword ptr [ebp - 0x80]
            //   33ff                 | xor                 edi, edi
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   c645d400             | mov                 byte ptr [ebp - 0x2c], 0

        $sequence_5 = { 8db568ffffff e8???????? 6a01 8d7590 e8???????? 6a01 8d75ac }
            // n = 7, score = 200
            //   8db568ffffff         | lea                 esi, dword ptr [ebp - 0x98]
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d7590               | lea                 esi, dword ptr [ebp - 0x70]
            //   e8????????           |                     
            //   6a01                 | push                1
            //   8d75ac               | lea                 esi, dword ptr [ebp - 0x54]

        $sequence_6 = { 0bdf 8b7d08 0fb67f07 c1e308 0bdf 8b7dfc 33d3 }
            // n = 7, score = 200
            //   0bdf                 | or                  ebx, edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   0fb67f07             | movzx               edi, byte ptr [edi + 7]
            //   c1e308               | shl                 ebx, 8
            //   0bdf                 | or                  ebx, edi
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   33d3                 | xor                 edx, ebx

        $sequence_7 = { ff7514 8bc3 57 e8???????? 59 59 5f }
            // n = 7, score = 200
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   8bc3                 | mov                 eax, ebx
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_8 = { c20800 8b4104 56 8b31 57 2bc6 6a1c }
            // n = 7, score = 200
            //   c20800               | ret                 8
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   56                   | push                esi
            //   8b31                 | mov                 esi, dword ptr [ecx]
            //   57                   | push                edi
            //   2bc6                 | sub                 eax, esi
            //   6a1c                 | push                0x1c

        $sequence_9 = { e9???????? 2bc1 6a1c 99 5e }
            // n = 5, score = 200
            //   e9????????           |                     
            //   2bc1                 | sub                 eax, ecx
            //   6a1c                 | push                0x1c
            //   99                   | cdq                 
            //   5e                   | pop                 esi

    condition:
        7 of them and filesize < 376832
}