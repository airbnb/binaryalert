rule win_ragnarok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.ragnarok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarok"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb6486f c1e708 0fb689104b4300 33f9 0fb6486e c1e708 0fb689104b4300 }
            // n = 7, score = 200
            //   0fb6486f             | movzx               ecx, byte ptr [eax + 0x6f]
            //   c1e708               | shl                 edi, 8
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33f9                 | xor                 edi, ecx
            //   0fb6486e             | movzx               ecx, byte ptr [eax + 0x6e]
            //   c1e708               | shl                 edi, 8
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]

        $sequence_1 = { 56 8b750c 33c9 33db 894df8 32f6 33c0 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   33c9                 | xor                 ecx, ecx
            //   33db                 | xor                 ebx, ebx
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   32f6                 | xor                 dh, dh
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 6bc000 c780746d430002000000 6a04 58 6bc000 8b0d???????? 894c05f8 }
            // n = 7, score = 200
            //   6bc000               | imul                eax, eax, 0
            //   c780746d430002000000     | mov    dword ptr [eax + 0x436d74], 2
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   8b0d????????         |                     
            //   894c05f8             | mov                 dword ptr [ebp + eax - 8], ecx

        $sequence_3 = { 8b501c 0fb6ca 0fb6b1104b4300 8bca }
            // n = 4, score = 200
            //   8b501c               | mov                 edx, dword ptr [eax + 0x1c]
            //   0fb6ca               | movzx               ecx, dl
            //   0fb6b1104b4300       | movzx               esi, byte ptr [ecx + 0x434b10]
            //   8bca                 | mov                 ecx, edx

        $sequence_4 = { 8b149510614300 33148d10654300 8b4df0 c1e918 33148d10694300 8b4df4 0fb6c9 }
            // n = 7, score = 200
            //   8b149510614300       | mov                 edx, dword ptr [edx*4 + 0x436110]
            //   33148d10654300       | xor                 edx, dword ptr [ecx*4 + 0x436510]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   c1e918               | shr                 ecx, 0x18
            //   33148d10694300       | xor                 edx, dword ptr [ecx*4 + 0x436910]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   0fb6c9               | movzx               ecx, cl

        $sequence_5 = { c1e908 0fb6c9 0fb689104b4300 33f9 8b4df8 33fe 8b75f4 }
            // n = 7, score = 200
            //   c1e908               | shr                 ecx, 8
            //   0fb6c9               | movzx               ecx, cl
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33f9                 | xor                 edi, ecx
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   33fe                 | xor                 edi, esi
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]

        $sequence_6 = { 8bc8 83c40c 890f 8b5610 8a02 8d5201 8801 }
            // n = 7, score = 200
            //   8bc8                 | mov                 ecx, eax
            //   83c40c               | add                 esp, 0xc
            //   890f                 | mov                 dword ptr [edi], ecx
            //   8b5610               | mov                 edx, dword ptr [esi + 0x10]
            //   8a02                 | mov                 al, byte ptr [edx]
            //   8d5201               | lea                 edx, dword ptr [edx + 1]
            //   8801                 | mov                 byte ptr [ecx], al

        $sequence_7 = { 0fb689104b4300 33f9 c1e708 8b4dfc c1e908 0fb6c9 0fb689104b4300 }
            // n = 7, score = 200
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33f9                 | xor                 edi, ecx
            //   c1e708               | shl                 edi, 8
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   c1e908               | shr                 ecx, 8
            //   0fb6c9               | movzx               ecx, cl
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]

        $sequence_8 = { ffd6 0f57c0 c785f4feffff44000000 33c0 }
            // n = 4, score = 200
            //   ffd6                 | call                esi
            //   0f57c0               | xorps               xmm0, xmm0
            //   c785f4feffff44000000     | mov    dword ptr [ebp - 0x10c], 0x44
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { 8945ac 81c1a1ebd96e 8b45b0 f7d0 }
            // n = 4, score = 200
            //   8945ac               | mov                 dword ptr [ebp - 0x54], eax
            //   81c1a1ebd96e         | add                 ecx, 0x6ed9eba1
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   f7d0                 | not                 eax

    condition:
        7 of them and filesize < 483328
}