rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7403 c60000 68???????? 55 ff15???????? }
            // n = 5, score = 100
            //   7403                 | je                  5
            //   c60000               | mov                 byte ptr [eax], 0
            //   68????????           |                     
            //   55                   | push                ebp
            //   ff15????????         |                     

        $sequence_1 = { 8bd8 b900010000 33c0 8bfb 83c404 f3ab ff15???????? }
            // n = 7, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   b900010000           | mov                 ecx, 0x100
            //   33c0                 | xor                 eax, eax
            //   8bfb                 | mov                 edi, ebx
            //   83c404               | add                 esp, 4
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   ff15????????         |                     

        $sequence_2 = { 8bce e8???????? 50 8bce e8???????? 33c3 5e }
            // n = 7, score = 100
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   33c3                 | xor                 eax, ebx
            //   5e                   | pop                 esi

        $sequence_3 = { 8d4de4 51 8d95d8feffff 52 50 8b85a8fdffff 50 }
            // n = 7, score = 100
            //   8d4de4               | lea                 ecx, dword ptr [ebp - 0x1c]
            //   51                   | push                ecx
            //   8d95d8feffff         | lea                 edx, dword ptr [ebp - 0x128]
            //   52                   | push                edx
            //   50                   | push                eax
            //   8b85a8fdffff         | mov                 eax, dword ptr [ebp - 0x258]
            //   50                   | push                eax

        $sequence_4 = { 8b51fc c1ea18 885002 83c004 8d1406 3bd7 7cd4 }
            // n = 7, score = 100
            //   8b51fc               | mov                 edx, dword ptr [ecx - 4]
            //   c1ea18               | shr                 edx, 0x18
            //   885002               | mov                 byte ptr [eax + 2], dl
            //   83c004               | add                 eax, 4
            //   8d1406               | lea                 edx, dword ptr [esi + eax]
            //   3bd7                 | cmp                 edx, edi
            //   7cd4                 | jl                  0xffffffd6

        $sequence_5 = { 8bf0 83e00f c1ee04 c1e604 8a840620420110 5e 884202 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   83e00f               | and                 eax, 0xf
            //   c1ee04               | shr                 esi, 4
            //   c1e604               | shl                 esi, 4
            //   8a840620420110       | mov                 al, byte ptr [esi + eax + 0x10014220]
            //   5e                   | pop                 esi
            //   884202               | mov                 byte ptr [edx + 2], al

        $sequence_6 = { 50 53 ffd7 68???????? 53 ffd7 8d4de4 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ffd7                 | call                edi
            //   68????????           |                     
            //   53                   | push                ebx
            //   ffd7                 | call                edi
            //   8d4de4               | lea                 ecx, dword ptr [ebp - 0x1c]

        $sequence_7 = { 57 8b7c2410 85ff 7e3e 8b542408 8b4c240c 56 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   85ff                 | test                edi, edi
            //   7e3e                 | jle                 0x40
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   56                   | push                esi

        $sequence_8 = { eb04 8b6c2410 33f6 03ef 8d041e 99 }
            // n = 6, score = 100
            //   eb04                 | jmp                 6
            //   8b6c2410             | mov                 ebp, dword ptr [esp + 0x10]
            //   33f6                 | xor                 esi, esi
            //   03ef                 | add                 ebp, edi
            //   8d041e               | lea                 eax, dword ptr [esi + ebx]
            //   99                   | cdq                 

        $sequence_9 = { 85c0 0f8584030000 56 ffd3 6a10 ff15???????? 8bf0 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f8584030000         | jne                 0x38a
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   6a10                 | push                0x10
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

    condition:
        7 of them and filesize < 204800
}