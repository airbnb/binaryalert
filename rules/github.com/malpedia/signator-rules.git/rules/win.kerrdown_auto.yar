rule win_kerrdown_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.kerrdown."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kerrdown"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8ac8 8ad4 c0ea04 8ac4 c0e102 80e203 02d1 }
            // n = 7, score = 200
            //   8ac8                 | mov                 cl, al
            //   8ad4                 | mov                 dl, ah
            //   c0ea04               | shr                 dl, 4
            //   8ac4                 | mov                 al, ah
            //   c0e102               | shl                 cl, 2
            //   80e203               | and                 dl, 3
            //   02d1                 | add                 dl, cl

        $sequence_1 = { 8bcf e8???????? 43 3bde 7ced 8bc7 8b4df4 }
            // n = 7, score = 200
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   43                   | inc                 ebx
            //   3bde                 | cmp                 ebx, esi
            //   7ced                 | jl                  0xffffffef
            //   8bc7                 | mov                 eax, edi
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

        $sequence_2 = { 6a00 ff15???????? 837d1c10 8d4d08 ff7518 0f434d08 }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   837d1c10             | cmp                 dword ptr [ebp + 0x1c], 0x10
            //   8d4d08               | lea                 ecx, dword ptr [ebp + 8]
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   0f434d08             | cmovae              ecx, dword ptr [ebp + 8]

        $sequence_3 = { e8???????? 88441de8 43 83fb04 7ce3 8b45e8 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   88441de8             | mov                 byte ptr [ebp + ebx - 0x18], al
            //   43                   | inc                 ebx
            //   83fb04               | cmp                 ebx, 4
            //   7ce3                 | jl                  0xffffffe5
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]

        $sequence_4 = { 0f878d000000 3bfe 7366 52 56 }
            // n = 5, score = 200
            //   0f878d000000         | ja                  0x93
            //   3bfe                 | cmp                 edi, esi
            //   7366                 | jae                 0x68
            //   52                   | push                edx
            //   56                   | push                esi

        $sequence_5 = { e8???????? 85c0 0f84ee200000 c3 833d????????ff 7503 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f84ee200000         | je                  0x20f4
            //   c3                   | ret                 
            //   833d????????ff       |                     
            //   7503                 | jne                 5

        $sequence_6 = { 0f43c1 85f6 741b 56 }
            // n = 4, score = 200
            //   0f43c1               | cmovae              eax, ecx
            //   85f6                 | test                esi, esi
            //   741b                 | je                  0x1d
            //   56                   | push                esi

        $sequence_7 = { b9???????? 2bc2 50 68???????? e8???????? 5f 5d }
            // n = 7, score = 200
            //   b9????????           |                     
            //   2bc2                 | sub                 eax, edx
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5d                   | pop                 ebp

        $sequence_8 = { c745f800000000 83feff 7438 6a00 8d45f8 50 }
            // n = 6, score = 200
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   83feff               | cmp                 esi, -1
            //   7438                 | je                  0x3a
            //   6a00                 | push                0
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax

        $sequence_9 = { 8935???????? b8???????? 0f43c1 c6043000 5e b8???????? 5f }
            // n = 7, score = 200
            //   8935????????         |                     
            //   b8????????           |                     
            //   0f43c1               | cmovae              eax, ecx
            //   c6043000             | mov                 byte ptr [eax + esi], 0
            //   5e                   | pop                 esi
            //   b8????????           |                     
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 278528
}