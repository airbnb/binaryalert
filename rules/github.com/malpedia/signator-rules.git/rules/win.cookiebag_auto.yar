rule win_cookiebag_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.cookiebag."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cookiebag"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c404 8d4c242c 50 68???????? e8???????? b302 68???????? }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   8d4c242c             | lea                 ecx, dword ptr [esp + 0x2c]
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   b302                 | mov                 bl, 2
            //   68????????           |                     

        $sequence_1 = { 8bfc 89642428 53 8bcf c684244401000024 8807 }
            // n = 6, score = 100
            //   8bfc                 | mov                 edi, esp
            //   89642428             | mov                 dword ptr [esp + 0x28], esp
            //   53                   | push                ebx
            //   8bcf                 | mov                 ecx, edi
            //   c684244401000024     | mov                 byte ptr [esp + 0x144], 0x24
            //   8807                 | mov                 byte ptr [edi], al

        $sequence_2 = { 8b4c2430 3bcd 741c 8a41ff 84c0 740b 3cff }
            // n = 7, score = 100
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]
            //   3bcd                 | cmp                 ecx, ebp
            //   741c                 | je                  0x1e
            //   8a41ff               | mov                 al, byte ptr [ecx - 1]
            //   84c0                 | test                al, al
            //   740b                 | je                  0xd
            //   3cff                 | cmp                 al, 0xff

        $sequence_3 = { 8b456c 83f8ff 7403 50 ffd6 8b6d70 83fdff }
            // n = 7, score = 100
            //   8b456c               | mov                 eax, dword ptr [ebp + 0x6c]
            //   83f8ff               | cmp                 eax, -1
            //   7403                 | je                  5
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8b6d70               | mov                 ebp, dword ptr [ebp + 0x70]
            //   83fdff               | cmp                 ebp, -1

        $sequence_4 = { 33c0 88542414 895c2418 895c241c }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   88542414             | mov                 byte ptr [esp + 0x14], dl
            //   895c2418             | mov                 dword ptr [esp + 0x18], ebx
            //   895c241c             | mov                 dword ptr [esp + 0x1c], ebx

        $sequence_5 = { 7e47 8b442464 8d8c24e8000000 50 51 8bcb e8???????? }
            // n = 7, score = 100
            //   7e47                 | jle                 0x49
            //   8b442464             | mov                 eax, dword ptr [esp + 0x64]
            //   8d8c24e8000000       | lea                 ecx, dword ptr [esp + 0xe8]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

        $sequence_6 = { 8bb42404060000 85f6 7505 be???????? 8bcb 8d7c2414 8bc1 }
            // n = 7, score = 100
            //   8bb42404060000       | mov                 esi, dword ptr [esp + 0x604]
            //   85f6                 | test                esi, esi
            //   7505                 | jne                 7
            //   be????????           |                     
            //   8bcb                 | mov                 ecx, ebx
            //   8d7c2414             | lea                 edi, dword ptr [esp + 0x14]
            //   8bc1                 | mov                 eax, ecx

        $sequence_7 = { 8bcf 8817 e8???????? 68???????? e8???????? 83c404 8be8 }
            // n = 7, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   8817                 | mov                 byte ptr [edi], dl
            //   e8????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8be8                 | mov                 ebp, eax

        $sequence_8 = { e8???????? 8b0d???????? c644247406 51 57 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   c644247406           | mov                 byte ptr [esp + 0x74], 6
            //   51                   | push                ecx
            //   57                   | push                edi

        $sequence_9 = { 8b442410 53 0fbe08 51 55 e8???????? }
            // n = 6, score = 100
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   53                   | push                ebx
            //   0fbe08               | movsx               ecx, byte ptr [eax]
            //   51                   | push                ecx
            //   55                   | push                ebp
            //   e8????????           |                     

    condition:
        7 of them and filesize < 311296
}