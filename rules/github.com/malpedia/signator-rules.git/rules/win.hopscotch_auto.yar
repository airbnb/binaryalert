rule win_hopscotch_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.hopscotch."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hopscotch"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6aff 51 6a02 57 e8???????? }
            // n = 5, score = 100
            //   6aff                 | push                -1
            //   51                   | push                ecx
            //   6a02                 | push                2
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_1 = { e8???????? 8d542430 6a64 52 e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8d542430             | lea                 edx, dword ptr [esp + 0x30]
            //   6a64                 | push                0x64
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_2 = { 85c0 7406 5f b001 5e 59 c3 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8
            //   5f                   | pop                 edi
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi
            //   59                   | pop                 ecx
            //   c3                   | ret                 

        $sequence_3 = { 6aff 50 6a00 68e9fd0000 ffd7 be???????? }
            // n = 6, score = 100
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   6a00                 | push                0
            //   68e9fd0000           | push                0xfde9
            //   ffd7                 | call                edi
            //   be????????           |                     

        $sequence_4 = { bf???????? 83c9ff f2ae f7d1 49 8d442418 }
            // n = 6, score = 100
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8d442418             | lea                 eax, dword ptr [esp + 0x18]

        $sequence_5 = { 83f801 752b 8b94240c020000 6801010000 }
            // n = 4, score = 100
            //   83f801               | cmp                 eax, 1
            //   752b                 | jne                 0x2d
            //   8b94240c020000       | mov                 edx, dword ptr [esp + 0x20c]
            //   6801010000           | push                0x101

        $sequence_6 = { 833d????????01 750d 8b442404 50 e8???????? 83c404 }
            // n = 6, score = 100
            //   833d????????01       |                     
            //   750d                 | jne                 0xf
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_7 = { e8???????? 83c404 85f6 7403 56 ffd7 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85f6                 | test                esi, esi
            //   7403                 | je                  5
            //   56                   | push                esi
            //   ffd7                 | call                edi

        $sequence_8 = { 68???????? e8???????? 8d8c249c020000 6801010000 51 }
            // n = 5, score = 100
            //   68????????           |                     
            //   e8????????           |                     
            //   8d8c249c020000       | lea                 ecx, dword ptr [esp + 0x29c]
            //   6801010000           | push                0x101
            //   51                   | push                ecx

        $sequence_9 = { 56 c744243001000000 e8???????? 8d50ff 83c410 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   c744243001000000     | mov                 dword ptr [esp + 0x30], 1
            //   e8????????           |                     
            //   8d50ff               | lea                 edx, dword ptr [eax - 1]
            //   83c410               | add                 esp, 0x10

    condition:
        7 of them and filesize < 1143808
}