rule win_dubrute_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.dubrute."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dubrute"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b89d0000000 ff25???????? b8???????? e8???????? 51 51 56 }
            // n = 7, score = 100
            //   8b89d0000000         | mov                 ecx, dword ptr [ecx + 0xd0]
            //   ff25????????         |                     
            //   b8????????           |                     
            //   e8????????           |                     
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   56                   | push                esi

        $sequence_1 = { 0f8430ffffff 394518 7303 8b4518 8d4df8 51 50 }
            // n = 7, score = 100
            //   0f8430ffffff         | je                  0xffffff36
            //   394518               | cmp                 dword ptr [ebp + 0x18], eax
            //   7303                 | jae                 5
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   8d4df8               | lea                 ecx, dword ptr [ebp - 8]
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_2 = { 8808 8b4d10 ff06 8b06 03d1 52 50 }
            // n = 7, score = 100
            //   8808                 | mov                 byte ptr [eax], cl
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   ff06                 | inc                 dword ptr [esi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   03d1                 | add                 edx, ecx
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_3 = { 897510 894df0 0f8475020000 3bc1 894d0c 0f8494000000 394818 }
            // n = 7, score = 100
            //   897510               | mov                 dword ptr [ebp + 0x10], esi
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   0f8475020000         | je                  0x27b
            //   3bc1                 | cmp                 eax, ecx
            //   894d0c               | mov                 dword ptr [ebp + 0xc], ecx
            //   0f8494000000         | je                  0x9a
            //   394818               | cmp                 dword ptr [eax + 0x18], ecx

        $sequence_4 = { 8b460c 85c0 7d63 8b4d14 803900 755b 394518 }
            // n = 7, score = 100
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   85c0                 | test                eax, eax
            //   7d63                 | jge                 0x65
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   803900               | cmp                 byte ptr [ecx], 0
            //   755b                 | jne                 0x5d
            //   394518               | cmp                 dword ptr [ebp + 0x18], eax

        $sequence_5 = { 3bbb98000100 7620 57 ffb394000100 e8???????? 59 898394000100 }
            // n = 7, score = 100
            //   3bbb98000100         | cmp                 edi, dword ptr [ebx + 0x10098]
            //   7620                 | jbe                 0x22
            //   57                   | push                edi
            //   ffb394000100         | push                dword ptr [ebx + 0x10094]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   898394000100         | mov                 dword ptr [ebx + 0x10094], eax

        $sequence_6 = { 02cb 8808 ff06 8b4df4 8b06 03cb c1e908 }
            // n = 7, score = 100
            //   02cb                 | add                 cl, bl
            //   8808                 | mov                 byte ptr [eax], cl
            //   ff06                 | inc                 dword ptr [esi]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   03cb                 | add                 ecx, ebx
            //   c1e908               | shr                 ecx, 8

        $sequence_7 = { e8???????? 011e 8b06 83c444 8b4df8 c60010 ff06 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   011e                 | add                 dword ptr [esi], ebx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   83c444               | add                 esp, 0x44
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   c60010               | mov                 byte ptr [eax], 0x10
            //   ff06                 | inc                 dword ptr [esi]

        $sequence_8 = { 85c0 752a 56 6a01 68???????? e8???????? 83c40c }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   752a                 | jne                 0x2c
            //   56                   | push                esi
            //   6a01                 | push                1
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_9 = { 7409 c745f801000000 eb40 6a02 5e ff33 68???????? }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   c745f801000000       | mov                 dword ptr [ebp - 8], 1
            //   eb40                 | jmp                 0x42
            //   6a02                 | push                2
            //   5e                   | pop                 esi
            //   ff33                 | push                dword ptr [ebx]
            //   68????????           |                     

    condition:
        7 of them and filesize < 598016
}