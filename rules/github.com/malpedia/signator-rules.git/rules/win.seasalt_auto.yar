rule win_seasalt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.seasalt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.seasalt"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d542414 53 55 56 57 }
            // n = 5, score = 100
            //   8d542414             | lea                 edx, dword ptr [esp + 0x14]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_1 = { 0f84cb000000 a1???????? 885c0418 40 }
            // n = 4, score = 100
            //   0f84cb000000         | je                  0xd1
            //   a1????????           |                     
            //   885c0418             | mov                 byte ptr [esp + eax + 0x18], bl
            //   40                   | inc                 eax

        $sequence_2 = { 8bc3 c1f905 83e01f 8b0c8d40db0010 8d04c0 8d0481 }
            // n = 6, score = 100
            //   8bc3                 | mov                 eax, ebx
            //   c1f905               | sar                 ecx, 5
            //   83e01f               | and                 eax, 0x1f
            //   8b0c8d40db0010       | mov                 ecx, dword ptr [ecx*4 + 0x1000db40]
            //   8d04c0               | lea                 eax, dword ptr [eax + eax*8]
            //   8d0481               | lea                 eax, dword ptr [ecx + eax*4]

        $sequence_3 = { f3ab 8d8424f8030000 6860010000 50 8d8c247c010000 6880000000 }
            // n = 6, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8d8424f8030000       | lea                 eax, dword ptr [esp + 0x3f8]
            //   6860010000           | push                0x160
            //   50                   | push                eax
            //   8d8c247c010000       | lea                 ecx, dword ptr [esp + 0x17c]
            //   6880000000           | push                0x80

        $sequence_4 = { 8bd8 be???????? 8a10 8aca }
            // n = 4, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   be????????           |                     
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8aca                 | mov                 cl, dl

        $sequence_5 = { 0fb6fa 3bc7 7714 8b55fc 8a92c0cc0010 089001da0010 }
            // n = 6, score = 100
            //   0fb6fa               | movzx               edi, dl
            //   3bc7                 | cmp                 eax, edi
            //   7714                 | ja                  0x16
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8a92c0cc0010         | mov                 dl, byte ptr [edx + 0x1000ccc0]
            //   089001da0010         | or                  byte ptr [eax + 0x1000da01], dl

        $sequence_6 = { 49 52 51 8b0d???????? 8d45e0 }
            // n = 5, score = 100
            //   49                   | dec                 ecx
            //   52                   | push                edx
            //   51                   | push                ecx
            //   8b0d????????         |                     
            //   8d45e0               | lea                 eax, dword ptr [ebp - 0x20]

        $sequence_7 = { 85c0 0f8574010000 a1???????? 6a00 8d95dcfeffff 6804010000 52 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f8574010000         | jne                 0x17a
            //   a1????????           |                     
            //   6a00                 | push                0
            //   8d95dcfeffff         | lea                 edx, dword ptr [ebp - 0x124]
            //   6804010000           | push                0x104
            //   52                   | push                edx

        $sequence_8 = { f3a5 66a5 a4 b90f000000 8dbd9ffeffff f3ab aa }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   b90f000000           | mov                 ecx, 0xf
            //   8dbd9ffeffff         | lea                 edi, dword ptr [ebp - 0x161]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_9 = { 6a02 51 55 ff15???????? }
            // n = 4, score = 100
            //   6a02                 | push                2
            //   51                   | push                ecx
            //   55                   | push                ebp
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 139264
}