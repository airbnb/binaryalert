rule win_squirrelwaffle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.squirrelwaffle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.squirrelwaffle"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc2 898568f7ffff 85c0 75d1 8d45ed }
            // n = 5, score = 400
            //   8bc2                 | mov                 eax, edx
            //   898568f7ffff         | mov                 dword ptr [ebp - 0x898], eax
            //   85c0                 | test                eax, eax
            //   75d1                 | jne                 0xffffffd3
            //   8d45ed               | lea                 eax, dword ptr [ebp - 0x13]

        $sequence_1 = { 8bce 894640 a1???????? 894644 8d45dc }
            // n = 5, score = 400
            //   8bce                 | mov                 ecx, esi
            //   894640               | mov                 dword ptr [esi + 0x40], eax
            //   a1????????           |                     
            //   894644               | mov                 dword ptr [esi + 0x44], eax
            //   8d45dc               | lea                 eax, dword ptr [ebp - 0x24]

        $sequence_2 = { 83c40c c6460400 8d85c8f6ffff eb1a }
            // n = 4, score = 400
            //   83c40c               | add                 esp, 0xc
            //   c6460400             | mov                 byte ptr [esi + 4], 0
            //   8d85c8f6ffff         | lea                 eax, dword ptr [ebp - 0x938]
            //   eb1a                 | jmp                 0x1c

        $sequence_3 = { 888d80f7ffff 8d8d38f9ffff ffb580f7ffff e8???????? }
            // n = 4, score = 400
            //   888d80f7ffff         | mov                 byte ptr [ebp - 0x880], cl
            //   8d8d38f9ffff         | lea                 ecx, dword ptr [ebp - 0x6c8]
            //   ffb580f7ffff         | push                dword ptr [ebp - 0x880]
            //   e8????????           |                     

        $sequence_4 = { 83f81f 777f 51 56 e8???????? 83c408 }
            // n = 6, score = 400
            //   83f81f               | cmp                 eax, 0x1f
            //   777f                 | ja                  0x81
            //   51                   | push                ecx
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_5 = { e8???????? 68???????? 68???????? 6a14 6a18 8d8518faffff c645fc06 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   6a14                 | push                0x14
            //   6a18                 | push                0x18
            //   8d8518faffff         | lea                 eax, dword ptr [ebp - 0x5e8]
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6

        $sequence_6 = { c7431000000000 c743140f000000 68???????? c60300 }
            // n = 4, score = 400
            //   c7431000000000       | mov                 dword ptr [ebx + 0x10], 0
            //   c743140f000000       | mov                 dword ptr [ebx + 0x14], 0xf
            //   68????????           |                     
            //   c60300               | mov                 byte ptr [ebx], 0

        $sequence_7 = { 3bc1 0f46c2 50 e8???????? 83c404 85c0 0f848c000000 }
            // n = 7, score = 400
            //   3bc1                 | cmp                 eax, ecx
            //   0f46c2               | cmovbe              eax, edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   0f848c000000         | je                  0x92

        $sequence_8 = { eb0a 2bc7 8945fc eb03 894dfc 8d4201 50 }
            // n = 7, score = 400
            //   eb0a                 | jmp                 0xc
            //   2bc7                 | sub                 eax, edi
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   eb03                 | jmp                 5
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8d4201               | lea                 eax, dword ptr [edx + 1]
            //   50                   | push                eax

        $sequence_9 = { 83c802 50 51 ff15???????? 8bd8 83c40c 85db }
            // n = 7, score = 400
            //   83c802               | or                  eax, 2
            //   50                   | push                eax
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   83c40c               | add                 esp, 0xc
            //   85db                 | test                ebx, ebx

    condition:
        7 of them and filesize < 147456
}