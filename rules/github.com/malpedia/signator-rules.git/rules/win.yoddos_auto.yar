rule win_yoddos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.yoddos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yoddos"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d459c 68???????? 50 c645fc02 c7459c21000000 }
            // n = 5, score = 100
            //   8d459c               | lea                 eax, dword ptr [ebp - 0x64]
            //   68????????           |                     
            //   50                   | push                eax
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   c7459c21000000       | mov                 dword ptr [ebp - 0x64], 0x21

        $sequence_1 = { c645eb63 c645ec6e 885ded c645d077 c645d177 c645d277 c645d32e }
            // n = 7, score = 100
            //   c645eb63             | mov                 byte ptr [ebp - 0x15], 0x63
            //   c645ec6e             | mov                 byte ptr [ebp - 0x14], 0x6e
            //   885ded               | mov                 byte ptr [ebp - 0x13], bl
            //   c645d077             | mov                 byte ptr [ebp - 0x30], 0x77
            //   c645d177             | mov                 byte ptr [ebp - 0x2f], 0x77
            //   c645d277             | mov                 byte ptr [ebp - 0x2e], 0x77
            //   c645d32e             | mov                 byte ptr [ebp - 0x2d], 0x2e

        $sequence_2 = { 68ffff0000 57 c7459ce8030000 ffd6 83f8ff }
            // n = 5, score = 100
            //   68ffff0000           | push                0xffff
            //   57                   | push                edi
            //   c7459ce8030000       | mov                 dword ptr [ebp - 0x64], 0x3e8
            //   ffd6                 | call                esi
            //   83f8ff               | cmp                 eax, -1

        $sequence_3 = { 6801100000 68ffff0000 56 895de4 ffd7 c7450864000000 }
            // n = 6, score = 100
            //   6801100000           | push                0x1001
            //   68ffff0000           | push                0xffff
            //   56                   | push                esi
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   ffd7                 | call                edi
            //   c7450864000000       | mov                 dword ptr [ebp + 8], 0x64

        $sequence_4 = { 50 6802020000 ff15???????? 6a01 53 53 68ff000000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   6802020000           | push                0x202
            //   ff15????????         |                     
            //   6a01                 | push                1
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   68ff000000           | push                0xff

        $sequence_5 = { 57 8965f0 8d45a4 68???????? 50 c745a42c000000 e8???????? }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   8d45a4               | lea                 eax, dword ptr [ebp - 0x5c]
            //   68????????           |                     
            //   50                   | push                eax
            //   c745a42c000000       | mov                 dword ptr [ebp - 0x5c], 0x2c
            //   e8????????           |                     

        $sequence_6 = { 66895dea c645ec80 c645ed06 66895dee ff15???????? ffb5e0feffff 8945f0 }
            // n = 7, score = 100
            //   66895dea             | mov                 word ptr [ebp - 0x16], bx
            //   c645ec80             | mov                 byte ptr [ebp - 0x14], 0x80
            //   c645ed06             | mov                 byte ptr [ebp - 0x13], 6
            //   66895dee             | mov                 word ptr [ebp - 0x12], bx
            //   ff15????????         |                     
            //   ffb5e0feffff         | push                dword ptr [ebp - 0x120]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

        $sequence_7 = { c645ad6e c645ae74 c645af65 c645b072 c645b16e c645b265 }
            // n = 6, score = 100
            //   c645ad6e             | mov                 byte ptr [ebp - 0x53], 0x6e
            //   c645ae74             | mov                 byte ptr [ebp - 0x52], 0x74
            //   c645af65             | mov                 byte ptr [ebp - 0x51], 0x65
            //   c645b072             | mov                 byte ptr [ebp - 0x50], 0x72
            //   c645b16e             | mov                 byte ptr [ebp - 0x4f], 0x6e
            //   c645b265             | mov                 byte ptr [ebp - 0x4e], 0x65

        $sequence_8 = { c68525ffffff6a c68526ffffff6b c68527ffffff65 c68528ffffff6e c68529ffffff74 c6852affffff2e }
            // n = 6, score = 100
            //   c68525ffffff6a       | mov                 byte ptr [ebp - 0xdb], 0x6a
            //   c68526ffffff6b       | mov                 byte ptr [ebp - 0xda], 0x6b
            //   c68527ffffff65       | mov                 byte ptr [ebp - 0xd9], 0x65
            //   c68528ffffff6e       | mov                 byte ptr [ebp - 0xd8], 0x6e
            //   c68529ffffff74       | mov                 byte ptr [ebp - 0xd7], 0x74
            //   c6852affffff2e       | mov                 byte ptr [ebp - 0xd6], 0x2e

        $sequence_9 = { 66899522ffffff 6689b524ffffff 66c78526ffffff0800 66898528ffffff 6689bd2affffff 6689b52cffffff 66c7852effffff0800 }
            // n = 7, score = 100
            //   66899522ffffff       | mov                 word ptr [ebp - 0xde], dx
            //   6689b524ffffff       | mov                 word ptr [ebp - 0xdc], si
            //   66c78526ffffff0800     | mov    word ptr [ebp - 0xda], 8
            //   66898528ffffff       | mov                 word ptr [ebp - 0xd8], ax
            //   6689bd2affffff       | mov                 word ptr [ebp - 0xd6], di
            //   6689b52cffffff       | mov                 word ptr [ebp - 0xd4], si
            //   66c7852effffff0800     | mov    word ptr [ebp - 0xd2], 8

    condition:
        7 of them and filesize < 557056
}