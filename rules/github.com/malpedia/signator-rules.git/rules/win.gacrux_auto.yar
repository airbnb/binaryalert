rule win_gacrux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.gacrux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gacrux"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 48 03c7 48 8bf8 49 3bc7 7749 }
            // n = 7, score = 300
            //   48                   | dec                 eax
            //   03c7                 | add                 eax, edi
            //   48                   | dec                 eax
            //   8bf8                 | mov                 edi, eax
            //   49                   | dec                 ecx
            //   3bc7                 | cmp                 eax, edi
            //   7749                 | ja                  0x4b

        $sequence_1 = { 8bf0 48 85c0 7574 }
            // n = 4, score = 300
            //   8bf0                 | mov                 esi, eax
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   7574                 | jne                 0x76

        $sequence_2 = { 48 89742420 48 896c2428 4c 89742430 49 }
            // n = 7, score = 300
            //   48                   | dec                 eax
            //   89742420             | mov                 dword ptr [esp + 0x20], esi
            //   48                   | dec                 eax
            //   896c2428             | mov                 dword ptr [esp + 0x28], ebp
            //   4c                   | dec                 esp
            //   89742430             | mov                 dword ptr [esp + 0x30], esi
            //   49                   | dec                 ecx

        $sequence_3 = { 83ec20 48 8b1d???????? 33d2 }
            // n = 4, score = 300
            //   83ec20               | sub                 esp, 0x20
            //   48                   | dec                 eax
            //   8b1d????????         |                     
            //   33d2                 | xor                 edx, edx

        $sequence_4 = { 7407 8801 48 ffc1 eb0a 48 83c608 }
            // n = 7, score = 300
            //   7407                 | je                  9
            //   8801                 | mov                 byte ptr [ecx], al
            //   48                   | dec                 eax
            //   ffc1                 | inc                 ecx
            //   eb0a                 | jmp                 0xc
            //   48                   | dec                 eax
            //   83c608               | add                 esi, 8

        $sequence_5 = { 7511 49 ffc1 49 8bc1 49 }
            // n = 6, score = 300
            //   7511                 | jne                 0x13
            //   49                   | dec                 ecx
            //   ffc1                 | inc                 ecx
            //   49                   | dec                 ecx
            //   8bc1                 | mov                 eax, ecx
            //   49                   | dec                 ecx

        $sequence_6 = { 3bd0 7419 ffc1 41 3bc8 72eb 4c }
            // n = 7, score = 300
            //   3bd0                 | cmp                 edx, eax
            //   7419                 | je                  0x1b
            //   ffc1                 | inc                 ecx
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   72eb                 | jb                  0xffffffed
            //   4c                   | dec                 esp

        $sequence_7 = { 8b442428 85c0 7508 8d59ff }
            // n = 4, score = 300
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   85c0                 | test                eax, eax
            //   7508                 | jne                 0xa
            //   8d59ff               | lea                 ebx, dword ptr [ecx - 1]

        $sequence_8 = { 48 8be9 e8???????? 44 8bcb 44 }
            // n = 6, score = 300
            //   48                   | dec                 eax
            //   8be9                 | mov                 ebp, ecx
            //   e8????????           |                     
            //   44                   | inc                 esp
            //   8bcb                 | mov                 ecx, ebx
            //   44                   | inc                 esp

        $sequence_9 = { 8d4c2438 45 33c0 33d2 33ff ffd0 }
            // n = 6, score = 300
            //   8d4c2438             | lea                 ecx, dword ptr [esp + 0x38]
            //   45                   | inc                 ebp
            //   33c0                 | xor                 eax, eax
            //   33d2                 | xor                 edx, edx
            //   33ff                 | xor                 edi, edi
            //   ffd0                 | call                eax

    condition:
        7 of them and filesize < 122880
}