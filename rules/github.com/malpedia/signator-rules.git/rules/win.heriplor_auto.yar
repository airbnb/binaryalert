rule win_heriplor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.heriplor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.heriplor"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85ff 7420 46 46 46 46 8b06 }
            // n = 7, score = 300
            //   85ff                 | test                edi, edi
            //   7420                 | je                  0x22
            //   46                   | inc                 esi
            //   46                   | inc                 esi
            //   46                   | inc                 esi
            //   46                   | inc                 esi
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_1 = { 8b7918 8b5f3c 8b5c3b78 01fb }
            // n = 4, score = 300
            //   8b7918               | mov                 edi, dword ptr [ecx + 0x18]
            //   8b5f3c               | mov                 ebx, dword ptr [edi + 0x3c]
            //   8b5c3b78             | mov                 ebx, dword ptr [ebx + edi + 0x78]
            //   01fb                 | add                 ebx, edi

        $sequence_2 = { 8b11 8b4130 6a02 ff7508 50 }
            // n = 5, score = 300
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b4130               | mov                 eax, dword ptr [ecx + 0x30]
            //   6a02                 | push                2
            //   ff7508               | push                dword ptr [ebp + 8]
            //   50                   | push                eax

        $sequence_3 = { 83c204 43 43 ebe6 }
            // n = 4, score = 300
            //   83c204               | add                 edx, 4
            //   43                   | inc                 ebx
            //   43                   | inc                 ebx
            //   ebe6                 | jmp                 0xffffffe8

        $sequence_4 = { 01cb c1e301 034510 ebed 91 3b5d0c 7401 }
            // n = 7, score = 300
            //   01cb                 | add                 ebx, ecx
            //   c1e301               | shl                 ebx, 1
            //   034510               | add                 eax, dword ptr [ebp + 0x10]
            //   ebed                 | jmp                 0xffffffef
            //   91                   | xchg                eax, ecx
            //   3b5d0c               | cmp                 ebx, dword ptr [ebp + 0xc]
            //   7401                 | je                  3

        $sequence_5 = { 33d2 668b13 8b0491 01f8 }
            // n = 4, score = 300
            //   33d2                 | xor                 edx, edx
            //   668b13               | mov                 dx, word ptr [ebx]
            //   8b0491               | mov                 eax, dword ptr [ecx + edx*4]
            //   01f8                 | add                 eax, edi

        $sequence_6 = { 89ec 5d c20c00 55 89e5 56 }
            // n = 6, score = 300
            //   89ec                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20c00               | ret                 0xc
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   56                   | push                esi

        $sequence_7 = { 8b32 01fe 6a01 ff750c 56 e8???????? }
            // n = 6, score = 300
            //   8b32                 | mov                 esi, dword ptr [edx]
            //   01fe                 | add                 esi, edi
            //   6a01                 | push                1
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_8 = { 40 5b 59 89ec 5d c20c00 }
            // n = 6, score = 300
            //   40                   | inc                 eax
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   89ec                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20c00               | ret                 0xc

        $sequence_9 = { 6a02 ff7508 50 e8???????? 85c0 }
            // n = 5, score = 300
            //   6a02                 | push                2
            //   ff7508               | push                dword ptr [ebp + 8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 49152
}