rule win_revil_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.revil."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.revil"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf2 898ab0000000 8b4dec 8982b4000000 f7d1 234de0 8b45f0 }
            // n = 7, score = 4500
            //   8bf2                 | mov                 esi, edx
            //   898ab0000000         | mov                 dword ptr [edx + 0xb0], ecx
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8982b4000000         | mov                 dword ptr [edx + 0xb4], eax
            //   f7d1                 | not                 ecx
            //   234de0               | and                 ecx, dword ptr [ebp - 0x20]
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_1 = { 2345e8 3345f0 334dec 894724 894f20 8b4728 }
            // n = 6, score = 4500
            //   2345e8               | and                 eax, dword ptr [ebp - 0x18]
            //   3345f0               | xor                 eax, dword ptr [ebp - 0x10]
            //   334dec               | xor                 ecx, dword ptr [ebp - 0x14]
            //   894724               | mov                 dword ptr [edi + 0x24], eax
            //   894f20               | mov                 dword ptr [edi + 0x20], ecx
            //   8b4728               | mov                 eax, dword ptr [edi + 0x28]

        $sequence_2 = { 8d8510feffff 899d08feffff 56 50 }
            // n = 4, score = 4500
            //   8d8510feffff         | lea                 eax, dword ptr [ebp - 0x1f0]
            //   899d08feffff         | mov                 dword ptr [ebp - 0x1f8], ebx
            //   56                   | push                esi
            //   50                   | push                eax

        $sequence_3 = { 59 85f6 741f 57 56 ff7514 53 }
            // n = 7, score = 4500
            //   59                   | pop                 ecx
            //   85f6                 | test                esi, esi
            //   741f                 | je                  0x21
            //   57                   | push                edi
            //   56                   | push                esi
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   53                   | push                ebx

        $sequence_4 = { 50 8d45f8 50 8d45e0 50 8d4584 50 }
            // n = 7, score = 4500
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   8d45e0               | lea                 eax, dword ptr [ebp - 0x20]
            //   50                   | push                eax
            //   8d4584               | lea                 eax, dword ptr [ebp - 0x7c]
            //   50                   | push                eax

        $sequence_5 = { 85c0 7537 8b4dec c6040f0d eb2e 8b45b4 85c0 }
            // n = 7, score = 4500
            //   85c0                 | test                eax, eax
            //   7537                 | jne                 0x39
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   c6040f0d             | mov                 byte ptr [edi + ecx], 0xd
            //   eb2e                 | jmp                 0x30
            //   8b45b4               | mov                 eax, dword ptr [ebp - 0x4c]
            //   85c0                 | test                eax, eax

        $sequence_6 = { bf00ff0000 33c2 895620 894624 8d5630 33c8 }
            // n = 6, score = 4500
            //   bf00ff0000           | mov                 edi, 0xff00
            //   33c2                 | xor                 eax, edx
            //   895620               | mov                 dword ptr [esi + 0x20], edx
            //   894624               | mov                 dword ptr [esi + 0x24], eax
            //   8d5630               | lea                 edx, dword ptr [esi + 0x30]
            //   33c8                 | xor                 ecx, eax

        $sequence_7 = { 56 8bd8 e8???????? 83c40c 85db 7504 }
            // n = 6, score = 4500
            //   56                   | push                esi
            //   8bd8                 | mov                 ebx, eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85db                 | test                ebx, ebx
            //   7504                 | jne                 6

        $sequence_8 = { 81e6bf030000 8a4513 83ce40 83e103 c1e602 0bf1 c0e004 }
            // n = 7, score = 4500
            //   81e6bf030000         | and                 esi, 0x3bf
            //   8a4513               | mov                 al, byte ptr [ebp + 0x13]
            //   83ce40               | or                  esi, 0x40
            //   83e103               | and                 ecx, 3
            //   c1e602               | shl                 esi, 2
            //   0bf1                 | or                  esi, ecx
            //   c0e004               | shl                 al, 4

        $sequence_9 = { 8b7608 85f6 75e9 33c0 5e 5d c3 }
            // n = 7, score = 4500
            //   8b7608               | mov                 esi, dword ptr [esi + 8]
            //   85f6                 | test                esi, esi
            //   75e9                 | jne                 0xffffffeb
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 155794432
}