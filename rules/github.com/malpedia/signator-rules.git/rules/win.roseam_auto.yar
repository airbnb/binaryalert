rule win_roseam_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.roseam."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.roseam"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d 9d 5d 3b55f0 0f8d88000000 }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   9d                   | popfd               
            //   5d                   | pop                 ebp
            //   3b55f0               | cmp                 edx, dword ptr [ebp - 0x10]
            //   0f8d88000000         | jge                 0x8e

        $sequence_1 = { b914000000 e2fe 59 9d 58 58 b940000000 }
            // n = 7, score = 100
            //   b914000000           | mov                 ecx, 0x14
            //   e2fe                 | loop                0
            //   59                   | pop                 ecx
            //   9d                   | popfd               
            //   58                   | pop                 eax
            //   58                   | pop                 eax
            //   b940000000           | mov                 ecx, 0x40

        $sequence_2 = { 58 6a00 68a00f0000 8d4518 6a01 50 6a01 }
            // n = 7, score = 100
            //   58                   | pop                 eax
            //   6a00                 | push                0
            //   68a00f0000           | push                0xfa0
            //   8d4518               | lea                 eax, dword ptr [ebp + 0x18]
            //   6a01                 | push                1
            //   50                   | push                eax
            //   6a01                 | push                1

        $sequence_3 = { 898570ffffff 889575ffffff 50 68???????? }
            // n = 4, score = 100
            //   898570ffffff         | mov                 dword ptr [ebp - 0x90], eax
            //   889575ffffff         | mov                 byte ptr [ebp - 0x8b], dl
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_4 = { 8955e8 8955f8 8955fc e8???????? 83c40c 50 }
            // n = 6, score = 100
            //   8955e8               | mov                 dword ptr [ebp - 0x18], edx
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   50                   | push                eax

        $sequence_5 = { 6a0a 50 51 e8???????? 8d542414 52 e8???????? }
            // n = 7, score = 100
            //   6a0a                 | push                0xa
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8d542414             | lea                 edx, dword ptr [esp + 0x14]
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_6 = { 58 68???????? ffd6 b91f000000 33c0 }
            // n = 5, score = 100
            //   58                   | pop                 eax
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   b91f000000           | mov                 ecx, 0x1f
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 8b551c 8d4df0 6a10 51 6a00 }
            // n = 5, score = 100
            //   8b551c               | mov                 edx, dword ptr [ebp + 0x1c]
            //   8d4df0               | lea                 ecx, dword ptr [ebp - 0x10]
            //   6a10                 | push                0x10
            //   51                   | push                ecx
            //   6a00                 | push                0

        $sequence_8 = { 42 51 52 8b5510 52 e8???????? 8b450c }
            // n = 7, score = 100
            //   42                   | inc                 edx
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_9 = { 5d 9d 5d 58 b921000000 }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   9d                   | popfd               
            //   5d                   | pop                 ebp
            //   58                   | pop                 eax
            //   b921000000           | mov                 ecx, 0x21

    condition:
        7 of them and filesize < 221184
}