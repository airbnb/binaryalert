rule win_rtpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.rtpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rtpos"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6bf230 c1f806 033485b86a4300 f6462d01 }
            // n = 4, score = 100
            //   6bf230               | imul                esi, edx, 0x30
            //   c1f806               | sar                 eax, 6
            //   033485b86a4300       | add                 esi, dword ptr [eax*4 + 0x436ab8]
            //   f6462d01             | test                byte ptr [esi + 0x2d], 1

        $sequence_1 = { 85c0 7505 e9???????? 8b4dfc e8???????? 833810 7277 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   e9????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   833810               | cmp                 dword ptr [eax], 0x10
            //   7277                 | jb                  0x79

        $sequence_2 = { 8955f0 6a00 8b45e4 50 }
            // n = 4, score = 100
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx
            //   6a00                 | push                0
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   50                   | push                eax

        $sequence_3 = { 8b45d0 2500010000 7402 eb9a c745f400000000 }
            // n = 5, score = 100
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   2500010000           | and                 eax, 0x100
            //   7402                 | je                  4
            //   eb9a                 | jmp                 0xffffff9c
            //   c745f400000000       | mov                 dword ptr [ebp - 0xc], 0

        $sequence_4 = { 837df000 7405 e9???????? 8b4df0 034dc8 894df0 8b55d0 }
            // n = 7, score = 100
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   7405                 | je                  7
            //   e9????????           |                     
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   034dc8               | add                 ecx, dword ptr [ebp - 0x38]
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b55d0               | mov                 edx, dword ptr [ebp - 0x30]

        $sequence_5 = { 0fb608 51 8b4df8 e8???????? 83f801 }
            // n = 5, score = 100
            //   0fb608               | movzx               ecx, byte ptr [eax]
            //   51                   | push                ecx
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     
            //   83f801               | cmp                 eax, 1

        $sequence_6 = { c7459c00000000 837d0c00 0f8667030000 8b4508 8945bc }
            // n = 5, score = 100
            //   c7459c00000000       | mov                 dword ptr [ebp - 0x64], 0
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   0f8667030000         | jbe                 0x36d
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax

        $sequence_7 = { 83c474 85c0 0f8426970000 b801000000 }
            // n = 4, score = 100
            //   83c474               | add                 esp, 0x74
            //   85c0                 | test                eax, eax
            //   0f8426970000         | je                  0x972c
            //   b801000000           | mov                 eax, 1

        $sequence_8 = { 894ddc c745e0b4af4200 e9???????? c745e0b0af4200 }
            // n = 4, score = 100
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx
            //   c745e0b4af4200       | mov                 dword ptr [ebp - 0x20], 0x42afb4
            //   e9????????           |                     
            //   c745e0b0af4200       | mov                 dword ptr [ebp - 0x20], 0x42afb0

        $sequence_9 = { 8945fc 683f000f00 6a00 6a00 }
            // n = 4, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   683f000f00           | push                0xf003f
            //   6a00                 | push                0
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 507904
}