rule win_glassrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.glassrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.glassrat"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 66ab 6804010000 51 52 aa }
            // n = 5, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   6804010000           | push                0x104
            //   51                   | push                ecx
            //   52                   | push                edx
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_1 = { 53 ff15???????? b91f000000 33c0 8dbd71ffffff }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   b91f000000           | mov                 ecx, 0x1f
            //   33c0                 | xor                 eax, eax
            //   8dbd71ffffff         | lea                 edi, dword ptr [ebp - 0x8f]

        $sequence_2 = { c784246427000001000000 ffd6 85c0 7e16 8a441c20 }
            // n = 5, score = 100
            //   c784246427000001000000     | mov    dword ptr [esp + 0x2764], 1
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   7e16                 | jle                 0x18
            //   8a441c20             | mov                 al, byte ptr [esp + ebx + 0x20]

        $sequence_3 = { 8955dc 47 8bc2 56 8955e4 897de4 }
            // n = 6, score = 100
            //   8955dc               | mov                 dword ptr [ebp - 0x24], edx
            //   47                   | inc                 edi
            //   8bc2                 | mov                 eax, edx
            //   56                   | push                esi
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi

        $sequence_4 = { 81c414010000 c21000 57 6a00 ff15???????? }
            // n = 5, score = 100
            //   81c414010000         | add                 esp, 0x114
            //   c21000               | ret                 0x10
            //   57                   | push                edi
            //   6a00                 | push                0
            //   ff15????????         |                     

        $sequence_5 = { 50 8955e0 51 53 8955e4 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx

        $sequence_6 = { 83c408 c21400 53 56 8d4524 57 50 }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   c21400               | ret                 0x14
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d4524               | lea                 eax, dword ptr [ebp + 0x24]
            //   57                   | push                edi
            //   50                   | push                eax

        $sequence_7 = { 83e80f 7428 8b842424010000 8b942420010000 }
            // n = 4, score = 100
            //   83e80f               | sub                 eax, 0xf
            //   7428                 | je                  0x2a
            //   8b842424010000       | mov                 eax, dword ptr [esp + 0x124]
            //   8b942420010000       | mov                 edx, dword ptr [esp + 0x120]

        $sequence_8 = { ff15???????? 85c0 0f84bb000000 8b55c4 6860ea0000 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84bb000000         | je                  0xc1
            //   8b55c4               | mov                 edx, dword ptr [ebp - 0x3c]
            //   6860ea0000           | push                0xea60

        $sequence_9 = { c706???????? e8???????? 8d4624 50 ff15???????? }
            // n = 5, score = 100
            //   c706????????         |                     
            //   e8????????           |                     
            //   8d4624               | lea                 eax, dword ptr [esi + 0x24]
            //   50                   | push                eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 65536
}