rule win_backspace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.backspace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.backspace"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 56 57 6800e80300 ff15???????? 8bf0 33ff }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6800e80300           | push                0x3e800
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   33ff                 | xor                 edi, edi

        $sequence_1 = { 59 50 ffd6 8bd8 8b450c 6a00 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8bd8                 | mov                 ebx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   6a00                 | push                0

        $sequence_2 = { 8d85f4fcffff 6804010000 33ff 50 57 ff15???????? }
            // n = 6, score = 100
            //   8d85f4fcffff         | lea                 eax, dword ptr [ebp - 0x30c]
            //   6804010000           | push                0x104
            //   33ff                 | xor                 edi, edi
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_3 = { 393d???????? 0f84de000000 57 56 6a02 }
            // n = 5, score = 100
            //   393d????????         |                     
            //   0f84de000000         | je                  0xe4
            //   57                   | push                edi
            //   56                   | push                esi
            //   6a02                 | push                2

        $sequence_4 = { 59 59 ff15???????? 6a04 }
            // n = 4, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   ff15????????         |                     
            //   6a04                 | push                4

        $sequence_5 = { c68567ffffff28 c68568ffffff29 c68569ffffff2a c6856affffff2b c6856bffffff2c }
            // n = 5, score = 100
            //   c68567ffffff28       | mov                 byte ptr [ebp - 0x99], 0x28
            //   c68568ffffff29       | mov                 byte ptr [ebp - 0x98], 0x29
            //   c68569ffffff2a       | mov                 byte ptr [ebp - 0x97], 0x2a
            //   c6856affffff2b       | mov                 byte ptr [ebp - 0x96], 0x2b
            //   c6856bffffff2c       | mov                 byte ptr [ebp - 0x95], 0x2c

        $sequence_6 = { 50 e8???????? 59 85c0 59 0f84d6000000 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   59                   | pop                 ecx
            //   0f84d6000000         | je                  0xdc

        $sequence_7 = { ff750c 56 e8???????? 8d45f0 50 56 }
            // n = 6, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   e8????????           |                     
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_8 = { 83b96464400000 0f8591000000 68???????? 53 }
            // n = 4, score = 100
            //   83b96464400000       | cmp                 dword ptr [ecx + 0x406464], 0
            //   0f8591000000         | jne                 0x97
            //   68????????           |                     
            //   53                   | push                ebx

        $sequence_9 = { 8d95f0fcffff 6a01 52 8b08 }
            // n = 4, score = 100
            //   8d95f0fcffff         | lea                 edx, dword ptr [ebp - 0x310]
            //   6a01                 | push                1
            //   52                   | push                edx
            //   8b08                 | mov                 ecx, dword ptr [eax]

    condition:
        7 of them and filesize < 131072
}