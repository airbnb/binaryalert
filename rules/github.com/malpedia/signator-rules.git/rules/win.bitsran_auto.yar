rule win_bitsran_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.bitsran."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bitsran"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 894e20 897e1c 8bc8 2b0b 6afd }
            // n = 5, score = 100
            //   894e20               | mov                 dword ptr [esi + 0x20], ecx
            //   897e1c               | mov                 dword ptr [esi + 0x1c], edi
            //   8bc8                 | mov                 ecx, eax
            //   2b0b                 | sub                 ecx, dword ptr [ebx]
            //   6afd                 | push                -3

        $sequence_1 = { 897dfc 3bdf 7305 895dfc }
            // n = 4, score = 100
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   3bdf                 | cmp                 ebx, edi
            //   7305                 | jae                 7
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_2 = { 5e f7f3 5b 5d c3 8b4f1c 8b4718 }
            // n = 7, score = 100
            //   5e                   | pop                 esi
            //   f7f3                 | div                 ebx
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b4f1c               | mov                 ecx, dword ptr [edi + 0x1c]
            //   8b4718               | mov                 eax, dword ptr [edi + 0x18]

        $sequence_3 = { 837dfc00 7405 bf99ffffff 8d5594 52 56 e8???????? }
            // n = 7, score = 100
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0
            //   7405                 | je                  7
            //   bf99ffffff           | mov                 edi, 0xffffff99
            //   8d5594               | lea                 edx, dword ptr [ebp - 0x6c]
            //   52                   | push                edx
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_4 = { 743c 807e0100 742a 8b5604 }
            // n = 4, score = 100
            //   743c                 | je                  0x3e
            //   807e0100             | cmp                 byte ptr [esi + 1], 0
            //   742a                 | je                  0x2c
            //   8b5604               | mov                 edx, dword ptr [esi + 4]

        $sequence_5 = { 6a13 6a13 50 e8???????? 8bf0 83c428 83fefd }
            // n = 7, score = 100
            //   6a13                 | push                0x13
            //   6a13                 | push                0x13
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c428               | add                 esp, 0x28
            //   83fefd               | cmp                 esi, -3

        $sequence_6 = { 0f8456030000 8b00 53 33db 837d0c04 57 0f95c3 }
            // n = 7, score = 100
            //   0f8456030000         | je                  0x35c
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   53                   | push                ebx
            //   33db                 | xor                 ebx, ebx
            //   837d0c04             | cmp                 dword ptr [ebp + 0xc], 4
            //   57                   | push                edi
            //   0f95c3               | setne               bl

        $sequence_7 = { 0345e8 8945f0 837df000 750c 8b55fc }
            // n = 5, score = 100
            //   0345e8               | add                 eax, dword ptr [ebp - 0x18]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   750c                 | jne                 0xe
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_8 = { 837b04ff 0f85b9000000 57 8dbb44020000 57 }
            // n = 5, score = 100
            //   837b04ff             | cmp                 dword ptr [ebx + 4], -1
            //   0f85b9000000         | jne                 0xbf
            //   57                   | push                edi
            //   8dbb44020000         | lea                 edi, dword ptr [ebx + 0x244]
            //   57                   | push                edi

        $sequence_9 = { 0f8255ffffff 8b0d???????? 8b15???????? 8bc1 2bc2 }
            // n = 5, score = 100
            //   0f8255ffffff         | jb                  0xffffff5b
            //   8b0d????????         |                     
            //   8b15????????         |                     
            //   8bc1                 | mov                 eax, ecx
            //   2bc2                 | sub                 eax, edx

    condition:
        7 of them and filesize < 344064
}