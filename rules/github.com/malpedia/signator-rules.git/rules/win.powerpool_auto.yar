rule win_powerpool_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.powerpool."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.powerpool"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7215 8b9540ffffff 52 e8???????? }
            // n = 4, score = 200
            //   7215                 | jb                  0x17
            //   8b9540ffffff         | mov                 edx, dword ptr [ebp - 0xc0]
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_1 = { 7214 8b03 3b01 7512 }
            // n = 4, score = 200
            //   7214                 | jb                  0x16
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   3b01                 | cmp                 eax, dword ptr [ecx]
            //   7512                 | jne                 0x14

        $sequence_2 = { 006711 40 0000 0303 }
            // n = 4, score = 200
            //   006711               | add                 byte ptr [edi + 0x11], ah
            //   40                   | inc                 eax
            //   0000                 | add                 byte ptr [eax], al
            //   0303                 | add                 eax, dword ptr [ebx]

        $sequence_3 = { 013e 017e08 5b 8bc7 }
            // n = 4, score = 200
            //   013e                 | add                 dword ptr [esi], edi
            //   017e08               | add                 dword ptr [esi + 8], edi
            //   5b                   | pop                 ebx
            //   8bc7                 | mov                 eax, edi

        $sequence_4 = { 7215 90 8b06 3b01 }
            // n = 4, score = 200
            //   7215                 | jb                  0x17
            //   90                   | nop                 
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   3b01                 | cmp                 eax, dword ptr [ecx]

        $sequence_5 = { 005311 40 005d11 40 006711 }
            // n = 5, score = 200
            //   005311               | add                 byte ptr [ebx + 0x11], dl
            //   40                   | inc                 eax
            //   005d11               | add                 byte ptr [ebp + 0x11], bl
            //   40                   | inc                 eax
            //   006711               | add                 byte ptr [edi + 0x11], ah

        $sequence_6 = { 013e 017e08 894630 5b }
            // n = 4, score = 200
            //   013e                 | add                 dword ptr [esi], edi
            //   017e08               | add                 dword ptr [esi + 8], edi
            //   894630               | mov                 dword ptr [esi + 0x30], eax
            //   5b                   | pop                 ebx

        $sequence_7 = { 7403 894dd8 8b7638 6a00 }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   894dd8               | mov                 dword ptr [ebp - 0x28], ecx
            //   8b7638               | mov                 esi, dword ptr [esi + 0x38]
            //   6a00                 | push                0

        $sequence_8 = { 014140 8b45cc 8bc8 d3ea 8b4df8 }
            // n = 5, score = 200
            //   014140               | add                 dword ptr [ecx + 0x40], eax
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   8bc8                 | mov                 ecx, eax
            //   d3ea                 | shr                 edx, cl
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_9 = { 0101 8b45ec 8b4d18 5f }
            // n = 4, score = 200
            //   0101                 | add                 dword ptr [ecx], eax
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8b4d18               | mov                 ecx, dword ptr [ebp + 0x18]
            //   5f                   | pop                 edi

        $sequence_10 = { 8b442414 50 e8???????? 57 e8???????? 8b4d08 }
            // n = 6, score = 200
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   50                   | push                eax
            //   e8????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_11 = { 7212 33c0 3bf7 0f95c0 c68593f9ffff01 3bc3 }
            // n = 6, score = 200
            //   7212                 | jb                  0x14
            //   33c0                 | xor                 eax, eax
            //   3bf7                 | cmp                 esi, edi
            //   0f95c0               | setne               al
            //   c68593f9ffff01       | mov                 byte ptr [ebp - 0x66d], 1
            //   3bc3                 | cmp                 eax, ebx

        $sequence_12 = { 7216 8b8d58faffff 51 e8???????? }
            // n = 4, score = 200
            //   7216                 | jb                  0x18
            //   8b8d58faffff         | mov                 ecx, dword ptr [ebp - 0x5a8]
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_13 = { 7216 83fa05 0f95c0 85c0 }
            // n = 4, score = 200
            //   7216                 | jb                  0x18
            //   83fa05               | cmp                 edx, 5
            //   0f95c0               | setne               al
            //   85c0                 | test                eax, eax

        $sequence_14 = { 7214 33d2 83f804 0f95c2 }
            // n = 4, score = 200
            //   7214                 | jb                  0x16
            //   33d2                 | xor                 edx, edx
            //   83f804               | cmp                 eax, 4
            //   0f95c2               | setne               dl

        $sequence_15 = { 01411c 8b7df0 85c0 742c }
            // n = 4, score = 200
            //   01411c               | add                 dword ptr [ecx + 0x1c], eax
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   85c0                 | test                eax, eax
            //   742c                 | je                  0x2e

    condition:
        7 of them and filesize < 819200
}