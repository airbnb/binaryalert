rule win_matrix_banker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.matrix_banker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.matrix_banker"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7705 80c2a9 eb0b 8d4abf 80f905 7703 }
            // n = 6, score = 900
            //   7705                 | push                esi
            //   80c2a9               | dec                 eax
            //   eb0b                 | sub                 esp, 0x30
            //   8d4abf               | dec                 eax
            //   80f905               | mov                 esi, ecx
            //   7703                 | dec                 eax

        $sequence_1 = { 80f905 7704 04a9 eb0a }
            // n = 4, score = 900
            //   80f905               | jne                 0x151a
            //   7704                 | push                esi
            //   04a9                 | mov                 esi, dword ptr [ebp + 8]
            //   eb0a                 | cmp                 dword ptr [esi*8 + 0x4cb4ab0], 0

        $sequence_2 = { eb0a 8d48bf 80f905 7702 04c9 8d4ad0 }
            // n = 6, score = 900
            //   eb0a                 | test                ebx, ebx
            //   8d48bf               | jb                  0x6a
            //   80f905               | dec                 eax
            //   7702                 | mov                 eax, dword ptr [esp + 0x68]
            //   04c9                 | dec                 eax
            //   8d4ad0               | add                 eax, ebx

        $sequence_3 = { 80f905 7704 04a9 eb0a 8d48bf }
            // n = 5, score = 900
            //   80f905               | lea                 ecx, dword ptr [esp + 0x28]
            //   7704                 | dec                 eax
            //   04a9                 | cmp                 dword ptr [esp + 0x40], 0x10
            //   eb0a                 | dec                 eax
            //   8d48bf               | cmovae              ecx, dword ptr [esp + 0x28]

        $sequence_4 = { 8d489f 80f905 7704 04a9 eb0a 8d48bf }
            // n = 6, score = 900
            //   8d489f               | mov                 edx, eax
            //   80f905               | dec                 esp
            //   7704                 | mov                 eax, dword ptr [esp + 0x90]
            //   04a9                 | dec                 eax
            //   eb0a                 | lea                 eax, dword ptr [0x24e7c]
            //   8d48bf               | dec                 eax

        $sequence_5 = { 7705 80c2a9 eb0b 8d4abf 80f905 7703 80c2c9 }
            // n = 7, score = 900
            //   7705                 | dec                 eax
            //   80c2a9               | mov                 edx, dword ptr [esp + 0x30]
            //   eb0b                 | inc                 ebp
            //   8d4abf               | xor                 ecx, ecx
            //   80f905               | inc                 ebp
            //   7703                 | xor                 eax, eax
            //   80c2c9               | dec                 eax

        $sequence_6 = { eb0a 8d48bf 80f905 7702 04c9 8d4ad0 80f909 }
            // n = 7, score = 900
            //   eb0a                 | jne                 0xe1d
            //   8d48bf               | lea                 eax, dword ptr [esi + 8]
            //   80f905               | push                eax
            //   7702                 | push                1
            //   04c9                 | lea                 eax, dword ptr [ebp - 0x14]
            //   8d4ad0               | push                eax
            //   80f909               | push                esi

        $sequence_7 = { 8d489f 80f905 7704 04a9 eb0a }
            // n = 5, score = 900
            //   8d489f               | dec                 esp
            //   80f905               | lea                 eax, dword ptr [ebp + 1]
            //   7704                 | xor                 edx, edx
            //   04a9                 | dec                 esp
            //   eb0a                 | mov                 dword ptr [esp + 0x30], esi

        $sequence_8 = { 8d4a9f 80f905 7705 80c2a9 eb0b }
            // n = 5, score = 900
            //   8d4a9f               | dec                 eax
            //   80f905               | test                eax, eax
            //   7705                 | je                  0x17ed
            //   80c2a9               | dec                 ecx
            //   eb0b                 | cmp                 eax, dword ptr [ecx + 0x30]

        $sequence_9 = { 04a9 eb0a 8d48bf 80f905 }
            // n = 4, score = 900
            //   04a9                 | add                 al, 0x5c
            //   eb0a                 | add                 al, 0x4c
            //   8d48bf               | out                 0xb2, al
            //   80f905               | add                 al, 0x23

    condition:
        7 of them and filesize < 422912
}