rule win_upatre_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.upatre."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.upatre"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8ac8 ff5508 8bf0 66ad 6685c0 7404 }
            // n = 6, score = 200
            //   8ac8                 | mov                 cl, al
            //   ff5508               | call                dword ptr [ebp + 8]
            //   8bf0                 | mov                 esi, eax
            //   66ad                 | lodsw               ax, word ptr [esi]
            //   6685c0               | test                ax, ax
            //   7404                 | je                  6

        $sequence_1 = { b000 66ab 8bc6 5e 50 56 }
            // n = 6, score = 200
            //   b000                 | mov                 al, 0
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_2 = { 66ab b02f 66ab 8bc1 }
            // n = 4, score = 200
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b02f                 | mov                 al, 0x2f
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   8bc1                 | mov                 eax, ecx

        $sequence_3 = { 66ad 8945ac 33c0 8bc8 8bd0 893b 83c304 }
            // n = 7, score = 200
            //   66ad                 | lodsw               ax, word ptr [esi]
            //   8945ac               | mov                 dword ptr [ebp - 0x54], eax
            //   33c0                 | xor                 eax, eax
            //   8bc8                 | mov                 ecx, eax
            //   8bd0                 | mov                 edx, eax
            //   893b                 | mov                 dword ptr [ebx], edi
            //   83c304               | add                 ebx, 4

        $sequence_4 = { 50 6880000000 6a02 50 6a02 6800000040 ff75f0 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   6880000000           | push                0x80
            //   6a02                 | push                2
            //   50                   | push                eax
            //   6a02                 | push                2
            //   6800000040           | push                0x40000000
            //   ff75f0               | push                dword ptr [ebp - 0x10]

        $sequence_5 = { 6a00 8d4de0 51 50 57 ff75ec }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   8d4de0               | lea                 ecx, dword ptr [ebp - 0x20]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff75ec               | push                dword ptr [ebp - 0x14]

        $sequence_6 = { 897d94 8bdf 03d8 b02f }
            // n = 4, score = 200
            //   897d94               | mov                 dword ptr [ebp - 0x6c], edi
            //   8bdf                 | mov                 ebx, edi
            //   03d8                 | add                 ebx, eax
            //   b02f                 | mov                 al, 0x2f

        $sequence_7 = { 8bec 83c4f0 895df4 53 ff7504 }
            // n = 5, score = 200
            //   8bec                 | mov                 ebp, esp
            //   83c4f0               | add                 esp, -0x10
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   53                   | push                ebx
            //   ff7504               | push                dword ptr [ebp + 4]

        $sequence_8 = { 8d440a06 8945d8 8b4dd8 3b4d0c }
            // n = 4, score = 100
            //   8d440a06             | lea                 eax, dword ptr [edx + ecx + 6]
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   8b4dd8               | mov                 ecx, dword ptr [ebp - 0x28]
            //   3b4d0c               | cmp                 ecx, dword ptr [ebp + 0xc]

        $sequence_9 = { 7529 8b4df4 8b5110 81c200100000 8955f0 8d45f0 50 }
            // n = 7, score = 100
            //   7529                 | jne                 0x2b
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]
            //   81c200100000         | add                 edx, 0x1000
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax

        $sequence_10 = { 0fb745f4 83f832 7e0d 0fb745f4 99 2bc2 d1f8 }
            // n = 7, score = 100
            //   0fb745f4             | movzx               eax, word ptr [ebp - 0xc]
            //   83f832               | cmp                 eax, 0x32
            //   7e0d                 | jle                 0xf
            //   0fb745f4             | movzx               eax, word ptr [ebp - 0xc]
            //   99                   | cdq                 
            //   2bc2                 | sub                 eax, edx
            //   d1f8                 | sar                 eax, 1

        $sequence_11 = { 50 e8???????? 8945d4 68d770a437 8b4dd4 51 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   68d770a437           | push                0x37a470d7
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   51                   | push                ecx

        $sequence_12 = { 8b55f4 8b4210 50 e8???????? 83c404 0fb7c8 81c100100000 }
            // n = 7, score = 100
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8b4210               | mov                 eax, dword ptr [edx + 0x10]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   0fb7c8               | movzx               ecx, ax
            //   81c100100000         | add                 ecx, 0x1000

        $sequence_13 = { af 4f ac 8e4edc a0???????? f8 }
            // n = 6, score = 100
            //   af                   | scasd               eax, dword ptr es:[edi]
            //   4f                   | dec                 edi
            //   ac                   | lodsb               al, byte ptr [esi]
            //   8e4edc               | mov                 cs, word ptr [esi - 0x24]
            //   a0????????           |                     
            //   f8                   | clc                 

        $sequence_14 = { eb09 8b4df0 83c101 894df0 8b55f0 3b55f4 7d51 }
            // n = 7, score = 100
            //   eb09                 | jmp                 0xb
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   83c101               | add                 ecx, 1
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   3b55f4               | cmp                 edx, dword ptr [ebp - 0xc]
            //   7d51                 | jge                 0x53

        $sequence_15 = { 7409 8b4dfc 51 e8???????? 837dd800 7410 6800800000 }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   837dd800             | cmp                 dword ptr [ebp - 0x28], 0
            //   7410                 | je                  0x12
            //   6800800000           | push                0x8000

    condition:
        7 of them and filesize < 294912
}