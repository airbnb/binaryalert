rule win_unidentified_081_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.unidentified_081."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_081"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc1 be10000000 83e00f 2bf0 8d0439 }
            // n = 5, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   be10000000           | mov                 esi, 0x10
            //   83e00f               | and                 eax, 0xf
            //   2bf0                 | sub                 esi, eax
            //   8d0439               | lea                 eax, dword ptr [ecx + edi]

        $sequence_1 = { 50 8d4df0 e8???????? 68???????? 8d45f0 c745f0bc414100 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d4df0               | lea                 ecx, dword ptr [ebp - 0x10]
            //   e8????????           |                     
            //   68????????           |                     
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   c745f0bc414100       | mov                 dword ptr [ebp - 0x10], 0x4141bc
            //   50                   | push                eax

        $sequence_2 = { 8d0c452ccb4100 8bc1 2d???????? d1f8 2bf0 56 51 }
            // n = 7, score = 100
            //   8d0c452ccb4100       | lea                 ecx, dword ptr [eax*2 + 0x41cb2c]
            //   8bc1                 | mov                 eax, ecx
            //   2d????????           |                     
            //   d1f8                 | sar                 eax, 1
            //   2bf0                 | sub                 esi, eax
            //   56                   | push                esi
            //   51                   | push                ecx

        $sequence_3 = { 8b7d08 33db 391cfd30bd4100 755c 6a18 e8???????? }
            // n = 6, score = 100
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   33db                 | xor                 ebx, ebx
            //   391cfd30bd4100       | cmp                 dword ptr [edi*8 + 0x41bd30], ebx
            //   755c                 | jne                 0x5e
            //   6a18                 | push                0x18
            //   e8????????           |                     

        $sequence_4 = { 742b 0fb611 0fb6c0 eb17 81fa00010000 7313 8a8710b74100 }
            // n = 7, score = 100
            //   742b                 | je                  0x2d
            //   0fb611               | movzx               edx, byte ptr [ecx]
            //   0fb6c0               | movzx               eax, al
            //   eb17                 | jmp                 0x19
            //   81fa00010000         | cmp                 edx, 0x100
            //   7313                 | jae                 0x15
            //   8a8710b74100         | mov                 al, byte ptr [edi + 0x41b710]

        $sequence_5 = { 85c0 0f84bd040000 b9???????? 8d85d0fdffff }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   0f84bd040000         | je                  0x4c3
            //   b9????????           |                     
            //   8d85d0fdffff         | lea                 eax, dword ptr [ebp - 0x230]

        $sequence_6 = { 6810040000 53 e8???????? 83c414 f685a4fdffff10 0f8487000000 6820080000 }
            // n = 7, score = 100
            //   6810040000           | push                0x410
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   f685a4fdffff10       | test                byte ptr [ebp - 0x25c], 0x10
            //   0f8487000000         | je                  0x8d
            //   6820080000           | push                0x820

        $sequence_7 = { 88410b 0fb605???????? 88410c 0fb605???????? 88410d }
            // n = 5, score = 100
            //   88410b               | mov                 byte ptr [ecx + 0xb], al
            //   0fb605????????       |                     
            //   88410c               | mov                 byte ptr [ecx + 0xc], al
            //   0fb605????????       |                     
            //   88410d               | mov                 byte ptr [ecx + 0xd], al

        $sequence_8 = { 888840d74100 83fe20 7c88 8b3d???????? }
            // n = 4, score = 100
            //   888840d74100         | mov                 byte ptr [eax + 0x41d740], cl
            //   83fe20               | cmp                 esi, 0x20
            //   7c88                 | jl                  0xffffff8a
            //   8b3d????????         |                     

        $sequence_9 = { b81c000000 2bc6 50 8d8664c24100 50 53 }
            // n = 6, score = 100
            //   b81c000000           | mov                 eax, 0x1c
            //   2bc6                 | sub                 eax, esi
            //   50                   | push                eax
            //   8d8664c24100         | lea                 eax, dword ptr [esi + 0x41c264]
            //   50                   | push                eax
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 273408
}