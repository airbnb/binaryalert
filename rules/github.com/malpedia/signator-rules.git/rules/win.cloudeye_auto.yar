rule win_cloudeye_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.cloudeye."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cloudeye"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 6a02 6639c1 6800000040 }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   6a02                 | push                2
            //   6639c1               | cmp                 cx, ax
            //   6800000040           | push                0x40000000

        $sequence_1 = { ffb704080000 ffb518010000 6685d8 e8???????? }
            // n = 4, score = 100
            //   ffb704080000         | push                dword ptr [edi + 0x804]
            //   ffb518010000         | push                dword ptr [ebp + 0x118]
            //   6685d8               | test                ax, bx
            //   e8????????           |                     

        $sequence_2 = { ff7610 8b5520 035614 52 8b8700080000 03460c }
            // n = 6, score = 100
            //   ff7610               | push                dword ptr [esi + 0x10]
            //   8b5520               | mov                 edx, dword ptr [ebp + 0x20]
            //   035614               | add                 edx, dword ptr [esi + 0x14]
            //   52                   | push                edx
            //   8b8700080000         | mov                 eax, dword ptr [edi + 0x800]
            //   03460c               | add                 eax, dword ptr [esi + 0xc]

        $sequence_3 = { 52 51 3d39050000 7545 66f7c14179 }
            // n = 5, score = 100
            //   52                   | push                edx
            //   51                   | push                ecx
            //   3d39050000           | cmp                 eax, 0x539
            //   7545                 | jne                 0x47
            //   66f7c14179           | test                cx, 0x7941

        $sequence_4 = { 59 5b 6685da 31c0 83c004 833c0400 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   5b                   | pop                 ebx
            //   6685da               | test                dx, bx
            //   31c0                 | xor                 eax, eax
            //   83c004               | add                 eax, 4
            //   833c0400             | cmp                 dword ptr [esp + eax], 0

        $sequence_5 = { 3b8f04080000 75d7 ffb70c080000 39c8 ff7520 6639d1 }
            // n = 6, score = 100
            //   3b8f04080000         | cmp                 ecx, dword ptr [edi + 0x804]
            //   75d7                 | jne                 0xffffffd9
            //   ffb70c080000         | push                dword ptr [edi + 0x80c]
            //   39c8                 | cmp                 eax, ecx
            //   ff7520               | push                dword ptr [ebp + 0x20]
            //   6639d1               | cmp                 cx, dx

        $sequence_6 = { 6200 7600 6d 0036 0030 }
            // n = 5, score = 100
            //   6200                 | bound               eax, qword ptr [eax]
            //   7600                 | jbe                 2
            //   6d                   | insd                dword ptr es:[edi], dx
            //   0036                 | add                 byte ptr [esi], dh
            //   0030                 | add                 byte ptr [eax], dh

        $sequence_7 = { 8b400c 8b4014 8b00 8b5810 84c2 }
            // n = 5, score = 100
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b5810               | mov                 ebx, dword ptr [eax + 0x10]
            //   84c2                 | test                dl, al

        $sequence_8 = { 6685d8 e8???????? 6639d8 6685da }
            // n = 4, score = 100
            //   6685d8               | test                ax, bx
            //   e8????????           |                     
            //   6639d8               | cmp                 ax, bx
            //   6685da               | test                dx, bx

        $sequence_9 = { 31d2 48 ffc2 49 }
            // n = 4, score = 100
            //   31d2                 | xor                 edx, edx
            //   48                   | dec                 eax
            //   ffc2                 | inc                 edx
            //   49                   | dec                 ecx

    condition:
        7 of them and filesize < 90112
}