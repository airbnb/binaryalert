rule win_webc2_div_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.webc2_div."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_div"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 0f85b8000000 8dbc241c020000 83c9ff }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   0f85b8000000         | jne                 0xbe
            //   8dbc241c020000       | lea                 edi, dword ptr [esp + 0x21c]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_1 = { 55 56 57 33ff 33db 397c2418 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   33db                 | xor                 ebx, ebx
            //   397c2418             | cmp                 dword ptr [esp + 0x18], edi

        $sequence_2 = { ff15???????? 8dbc2418010000 83c9ff 33c0 8d94241c020000 f2ae }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8dbc2418010000       | lea                 edi, dword ptr [esp + 0x118]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   8d94241c020000       | lea                 edx, dword ptr [esp + 0x21c]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]

        $sequence_3 = { 85c0 7407 33c0 5e 83c454 c3 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   83c454               | add                 esp, 0x54
            //   c3                   | ret                 

        $sequence_4 = { 50 8d85ecfdffff 50 ff15???????? 6a09 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   8d85ecfdffff         | lea                 eax, dword ptr [ebp - 0x214]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a09                 | push                9

        $sequence_5 = { 83c9ff 33c0 8d942424040000 f2ae f7d1 2bf9 }
            // n = 6, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   8d942424040000       | lea                 edx, dword ptr [esp + 0x424]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx

        $sequence_6 = { 7519 c7048e29000000 eb10 c7048e28000000 eb07 c7048e27000000 8a0411 }
            // n = 7, score = 100
            //   7519                 | jne                 0x1b
            //   c7048e29000000       | mov                 dword ptr [esi + ecx*4], 0x29
            //   eb10                 | jmp                 0x12
            //   c7048e28000000       | mov                 dword ptr [esi + ecx*4], 0x28
            //   eb07                 | jmp                 9
            //   c7048e27000000       | mov                 dword ptr [esi + ecx*4], 0x27
            //   8a0411               | mov                 al, byte ptr [ecx + edx]

        $sequence_7 = { 83f819 7f07 8ac8 80c161 eb1a 83f826 7f0b }
            // n = 7, score = 100
            //   83f819               | cmp                 eax, 0x19
            //   7f07                 | jg                  9
            //   8ac8                 | mov                 cl, al
            //   80c161               | add                 cl, 0x61
            //   eb1a                 | jmp                 0x1c
            //   83f826               | cmp                 eax, 0x26
            //   7f0b                 | jg                  0xd

        $sequence_8 = { f2ae f7d1 2bf9 8d95f0feffff 8bf7 }
            // n = 5, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8d95f0feffff         | lea                 edx, dword ptr [ebp - 0x110]
            //   8bf7                 | mov                 esi, edi

        $sequence_9 = { 83c9ff c70001000000 8d5008 33c0 f2ae f7d1 }
            // n = 6, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   c70001000000         | mov                 dword ptr [eax], 1
            //   8d5008               | lea                 edx, dword ptr [eax + 8]
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

    condition:
        7 of them and filesize < 32768
}