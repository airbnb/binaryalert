rule win_socksbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.socksbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.socksbot"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 81ec0c010000 53 56 57 8b7d14 }
            // n = 5, score = 300
            //   81ec0c010000         | sub                 esp, 0x10c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7d14               | mov                 edi, dword ptr [ebp + 0x14]

        $sequence_1 = { 49 75fa 33c0 668945dc }
            // n = 4, score = 300
            //   49                   | dec                 ecx
            //   75fa                 | jne                 0xfffffffc
            //   33c0                 | xor                 eax, eax
            //   668945dc             | mov                 word ptr [ebp - 0x24], ax

        $sequence_2 = { 50 ff15???????? 8bf8 8d45c0 }
            // n = 4, score = 300
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   8d45c0               | lea                 eax, dword ptr [ebp - 0x40]

        $sequence_3 = { 5d c3 ff750c 6a40 ff15???????? ff750c }
            // n = 6, score = 300
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a40                 | push                0x40
            //   ff15????????         |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_4 = { 83ec1c 8d45e4 6a10 50 e8???????? 8a4510 }
            // n = 6, score = 300
            //   83ec1c               | sub                 esp, 0x1c
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   e8????????           |                     
            //   8a4510               | mov                 al, byte ptr [ebp + 0x10]

        $sequence_5 = { 5b c9 c3 55 8bec 83ec60 8d45e0 }
            // n = 7, score = 300
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec60               | sub                 esp, 0x60
            //   8d45e0               | lea                 eax, dword ptr [ebp - 0x20]

        $sequence_6 = { 03f3 eb6d 8b460c 03c3 }
            // n = 4, score = 300
            //   03f3                 | add                 esi, ebx
            //   eb6d                 | jmp                 0x6f
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   03c3                 | add                 eax, ebx

        $sequence_7 = { 51 51 8d85acfeffff 50 51 c785acfeffff01000000 }
            // n = 6, score = 300
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   8d85acfeffff         | lea                 eax, dword ptr [ebp - 0x154]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   c785acfeffff01000000     | mov    dword ptr [ebp - 0x154], 1

        $sequence_8 = { 8b15???????? 53 8a1d???????? 56 8b35???????? }
            // n = 5, score = 300
            //   8b15????????         |                     
            //   53                   | push                ebx
            //   8a1d????????         |                     
            //   56                   | push                esi
            //   8b35????????         |                     

        $sequence_9 = { 8d8520ffffff 53 56 57 33db }
            // n = 5, score = 300
            //   8d8520ffffff         | lea                 eax, dword ptr [ebp - 0xe0]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx

    condition:
        7 of them and filesize < 73728
}