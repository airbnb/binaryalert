rule win_apocalypse_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.apocalypse_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.apocalypse_ransom"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 51 e8???????? 83c408 5e 8be5 }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp

        $sequence_1 = { ffd6 b801000000 5e 83c418 c3 33c0 }
            // n = 6, score = 200
            //   ffd6                 | call                esi
            //   b801000000           | mov                 eax, 1
            //   5e                   | pop                 esi
            //   83c418               | add                 esp, 0x18
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 6a01 6a00 6a02 6800000040 8d542420 52 }
            // n = 6, score = 200
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a02                 | push                2
            //   6800000040           | push                0x40000000
            //   8d542420             | lea                 edx, dword ptr [esp + 0x20]
            //   52                   | push                edx

        $sequence_3 = { 8d542434 52 ff15???????? 83f801 7542 837c241400 743b }
            // n = 7, score = 200
            //   8d542434             | lea                 edx, dword ptr [esp + 0x34]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   7542                 | jne                 0x44
            //   837c241400           | cmp                 dword ptr [esp + 0x14], 0
            //   743b                 | je                  0x3d

        $sequence_4 = { 8bf0 83feff 7428 6a00 8d442408 50 }
            // n = 6, score = 200
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   7428                 | je                  0x2a
            //   6a00                 | push                0
            //   8d442408             | lea                 eax, dword ptr [esp + 8]
            //   50                   | push                eax

        $sequence_5 = { 83f803 0f94c1 56 8d94246c020000 68???????? }
            // n = 5, score = 200
            //   83f803               | cmp                 eax, 3
            //   0f94c1               | sete                cl
            //   56                   | push                esi
            //   8d94246c020000       | lea                 edx, dword ptr [esp + 0x26c]
            //   68????????           |                     

        $sequence_6 = { 81ec04080000 56 68???????? 50 }
            // n = 4, score = 200
            //   81ec04080000         | sub                 esp, 0x804
            //   56                   | push                esi
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_7 = { 8b3d???????? 6a00 6a00 03c0 }
            // n = 4, score = 200
            //   8b3d????????         |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   03c0                 | add                 eax, eax

        $sequence_8 = { 81ec1c020000 53 56 57 68ff000000 }
            // n = 5, score = 200
            //   81ec1c020000         | sub                 esp, 0x21c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   68ff000000           | push                0xff

        $sequence_9 = { 8d4c2408 51 89442438 ff15???????? }
            // n = 4, score = 200
            //   8d4c2408             | lea                 ecx, dword ptr [esp + 8]
            //   51                   | push                ecx
            //   89442438             | mov                 dword ptr [esp + 0x38], eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 40960
}