rule win_newsreels_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.newsreels."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.newsreels"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7409 50 e8???????? 83c404 8b865c020000 }
            // n = 5, score = 100
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b865c020000         | mov                 eax, dword ptr [esi + 0x25c]

        $sequence_1 = { e8???????? 56 e8???????? 8b442424 83c414 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   83c414               | add                 esp, 0x14

        $sequence_2 = { 8b5c2418 0fbe5c0bfa 8d1453 8b5c241c }
            // n = 4, score = 100
            //   8b5c2418             | mov                 ebx, dword ptr [esp + 0x18]
            //   0fbe5c0bfa           | movsx               ebx, byte ptr [ebx + ecx - 6]
            //   8d1453               | lea                 edx, dword ptr [ebx + edx*2]
            //   8b5c241c             | mov                 ebx, dword ptr [esp + 0x1c]

        $sequence_3 = { e8???????? 8b442424 83c414 3bc7 7219 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   83c414               | add                 esp, 0x14
            //   3bc7                 | cmp                 eax, edi
            //   7219                 | jb                  0x1b

        $sequence_4 = { 55 56 8b742420 57 8bd6 }
            // n = 5, score = 100
            //   55                   | push                ebp
            //   56                   | push                esi
            //   8b742420             | mov                 esi, dword ptr [esp + 0x20]
            //   57                   | push                edi
            //   8bd6                 | mov                 edx, esi

        $sequence_5 = { 668b5e40 66391c01 75da 8b4e3c 668b5c2414 }
            // n = 5, score = 100
            //   668b5e40             | mov                 bx, word ptr [esi + 0x40]
            //   66391c01             | cmp                 word ptr [ecx + eax], bx
            //   75da                 | jne                 0xffffffdc
            //   8b4e3c               | mov                 ecx, dword ptr [esi + 0x3c]
            //   668b5c2414           | mov                 bx, word ptr [esp + 0x14]

        $sequence_6 = { 83c408 be???????? 8b16 8d442408 52 50 }
            // n = 6, score = 100
            //   83c408               | add                 esp, 8
            //   be????????           |                     
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8d442408             | lea                 eax, dword ptr [esp + 8]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_7 = { e8???????? 33db bf???????? 8818 83c9ff 33c0 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   bf????????           |                     
            //   8818                 | mov                 byte ptr [eax], bl
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { e8???????? 8bf8 83c404 893d???????? b9a3020000 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   83c404               | add                 esp, 4
            //   893d????????         |                     
            //   b9a3020000           | mov                 ecx, 0x2a3

        $sequence_9 = { 8b74240c 57 8b7c240c 33c9 }
            // n = 4, score = 100
            //   8b74240c             | mov                 esi, dword ptr [esp + 0xc]
            //   57                   | push                edi
            //   8b7c240c             | mov                 edi, dword ptr [esp + 0xc]
            //   33c9                 | xor                 ecx, ecx

    condition:
        7 of them and filesize < 65536
}