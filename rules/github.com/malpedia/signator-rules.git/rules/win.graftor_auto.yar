rule win_graftor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-10-07"
        version = "1"
        description = "Detects win.graftor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.graftor"
        malpedia_rule_date = "20211007"
        malpedia_hash = "e5b790e0f888f252d49063a1251ca60ec2832535"
        malpedia_version = "20211008"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6aff 68a0d84e00 33db c645fc1c e8???????? 53 6a01 }
            // n = 7, score = 100
            //   6aff                 | push                -1
            //   68a0d84e00           | push                0x4ed8a0
            //   33db                 | xor                 ebx, ebx
            //   c645fc1c             | mov                 byte ptr [ebp - 4], 0x1c
            //   e8????????           |                     
            //   53                   | push                ebx
            //   6a01                 | push                1

        $sequence_1 = { 84c0 0f85d4010000 68fc894d00 8db424cc000000 e8???????? bf0c8a4d00 57 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   0f85d4010000         | jne                 0x1da
            //   68fc894d00           | push                0x4d89fc
            //   8db424cc000000       | lea                 esi, dword ptr [esp + 0xcc]
            //   e8????????           |                     
            //   bf0c8a4d00           | mov                 edi, 0x4d8a0c
            //   57                   | push                edi

        $sequence_2 = { 53 8db510ffffff e8???????? 57 53 8db5d8feffff e8???????? }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8db510ffffff         | lea                 esi, dword ptr [ebp - 0xf0]
            //   e8????????           |                     
            //   57                   | push                edi
            //   53                   | push                ebx
            //   8db5d8feffff         | lea                 esi, dword ptr [ebp - 0x128]
            //   e8????????           |                     

        $sequence_3 = { c645fc0f e8???????? 6a00 6a01 8db57cffffff e8???????? 6a00 }
            // n = 7, score = 100
            //   c645fc0f             | mov                 byte ptr [ebp - 4], 0xf
            //   e8????????           |                     
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   8db57cffffff         | lea                 esi, dword ptr [ebp - 0x84]
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_4 = { 6aff 8d8c2414020000 51 c68424580300005c e8???????? 53 6a01 }
            // n = 7, score = 100
            //   6aff                 | push                -1
            //   8d8c2414020000       | lea                 ecx, dword ptr [esp + 0x214]
            //   51                   | push                ecx
            //   c68424580300005c     | mov                 byte ptr [esp + 0x358], 0x5c
            //   e8????????           |                     
            //   53                   | push                ebx
            //   6a01                 | push                1

        $sequence_5 = { 83a574ffffff00 8365fc00 6a01 89bd78ffffff 894580 6bc030 }
            // n = 6, score = 100
            //   83a574ffffff00       | and                 dword ptr [ebp - 0x8c], 0
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   6a01                 | push                1
            //   89bd78ffffff         | mov                 dword ptr [ebp - 0x88], edi
            //   894580               | mov                 dword ptr [ebp - 0x80], eax
            //   6bc030               | imul                eax, eax, 0x30

        $sequence_6 = { 84c0 745e a1???????? ff7004 b998f04e00 e8???????? a1???????? }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   745e                 | je                  0x60
            //   a1????????           |                     
            //   ff7004               | push                dword ptr [eax + 4]
            //   b998f04e00           | mov                 ecx, 0x4ef098
            //   e8????????           |                     
            //   a1????????           |                     

        $sequence_7 = { 837e1808 8945d0 894dc8 8d5e04 7204 8b03 eb02 }
            // n = 7, score = 100
            //   837e1808             | cmp                 dword ptr [esi + 0x18], 8
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   8d5e04               | lea                 ebx, dword ptr [esi + 4]
            //   7204                 | jb                  6
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   eb02                 | jmp                 4

        $sequence_8 = { a1???????? 33c4 50 8d842490000000 64a300000000 33db 8bf2 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   33c4                 | xor                 eax, esp
            //   50                   | push                eax
            //   8d842490000000       | lea                 eax, dword ptr [esp + 0x90]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   33db                 | xor                 ebx, ebx
            //   8bf2                 | mov                 esi, edx

        $sequence_9 = { 57 8d75d4 e8???????? 8365fc00 85ff 7412 6a00 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8d75d4               | lea                 esi, dword ptr [ebp - 0x2c]
            //   e8????????           |                     
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   85ff                 | test                edi, edi
            //   7412                 | je                  0x14
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 294912
}