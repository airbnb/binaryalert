import "pe"

rule malware_windows_ransomware_wannacry
{
    meta:
        description = "wannacry ransomware for windows"
        reference = "https://securelist.com/blog/incidents/78351/wannacry-ransomware-used-in-widespread-attacks-all-over-the-world/"
        author = "Airbnb CSIRT"
        md5 = "4fef5e34143e646dbf9907c4374276f5"
    strings:
        // generic
        $a1 = "msg/m_chinese" wide ascii
        $a2 = ".wnry" wide ascii
        $a3 = "attrib +h" wide ascii
        // unique malware strings
        $b1 = "WNcry@2ol7" wide ascii
        // c2
        $b2 = "iuqerfsodp9ifjaposdfjhgosurijfaewrwergwea.com" wide ascii
        // bitcoin addresses
        $b3 = "115p7UMMngoj1pMvkpHijcRdfJNXj6LrLn" wide ascii
        $b4 = "12t9YDPgwueZ9NyMgw519p7AA8isjr6SMw" wide ascii
        $b5 = "13AM4VW2dhxYgXeQepoHkHSQuy6NgaEb94" wide ascii
    condition:
        all of ($a*) or any of ($b*)
}

rule malware_windows_pony_stealer
{
    meta:
        description = "Pony stealer malware"
        reference = "https://www.knowbe4.com/pony-stealer"
        author = "Airbnb CSIRT"
        md5 = "5e52ce394c3be2a685dbb8f435e2f64f"
    strings:
        $a1 = "signons.sqlite" nocase wide ascii
        $a2 = "signons.txt" nocase wide ascii
        $a3 = "signons2.txt" nocase wide ascii
        $a4 = "signons3.txt" nocase wide ascii
        $a5 = "WininetCacheCredentials" nocase wide ascii
        $a6 = "moz_logins" nocase wide ascii
        $a7 = "encryptedPassword" nocase wide ascii
        $a8 = "FlashFXP" nocase wide ascii
        $a9 = "BulletProof" nocase wide ascii
        $a10 = "CuteFTP" nocase wide ascii
    condition:
        all of ($a*)
}

rule malware_windows_remcos_rat
{
    meta:
        description = "https://blog.fortinet.com/2017/02/14/remcos-a-new-rat-in-the-wild-2"
        reference = "https://breaking-security.net/remcos/remcos-changelog/"
        author = "Airbnb CSIRT"
        md5 = "c8dafe143fe1d81ae6a3c0cd4724b272"
    strings:
        $a1 = "[Following text has been pasted from clipboard:]" wide ascii
        $a2 = "[Chrome StoredLogins found, cleared!]" wide ascii
        $a3 = "[Firefox StoredLogins cleared!]" wide ascii
        $b1 = "getclipboard" wide ascii
        $b2 = "stopmiccapture" wide ascii
        $b3 = "downloadfromurltofile" wide ascii
        $b4 = "getcamsingleframe" wide ascii
        $c1 = "Breaking-Security.Net" wide ascii
        $c2 = "REMCOS v" wide ascii
    condition:
        any of ($a*) or 3 of ($b*) or all of ($c*)
}

rule malware_windows_winnti_loadperf_dll_loader
{
    meta:
        description = "Winnti APT group; gzwrite64 imported from loadoerf.ini"
        reference = "http://blog.trendmicro.com/trendlabs-security-intelligence/winnti-abuses-github/"
        author = "Airbnb CSIRT"
        md5 = "879ce99e253e598a3c156258a9e81457"
    strings:
        $s1 = "loadoerf.ini" fullword ascii wide
        $s2 = "gzwrite64" fullword ascii wide
    condition:
        all of ($s*)
}

rule malware_windows_red_leaves_generic
{
    meta:
        description = "Red Leaves malware, related to APT10"
        reference = "https://github.com/nccgroup/Cyber-Defence/blob/master/Technical%20Notes/Red%20Leaves/Source/Red%20Leaves%20technical%20note%20v1.0.md"
        author = "David Cannings"
        md5 = "81df89d6fa0b26cadd4e50ef5350f341"
    strings:
        // MiniLZO release date
        $a1 = "Feb 04 2015"
        $a2 = "I can not start %s"
        $a3 = "dwConnectPort" fullword
        $a4 = "dwRemoteLanPort" fullword
        $a5 = "strRemoteLanAddress" fullword
        $a6 = "strLocalConnectIp" fullword
        $a7 = "\\\\.\\pipe\\NamePipe_MoreWindows" wide
        $a8 = "RedLeavesCMDSimulatorMutex" wide
        $a9 = "(NT %d.%d Build %d)" wide
        $a10 = "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET4.0C; .NET4.0E)" wide
        $a11 = "red_autumnal_leaves_dllmain.dll" wide ascii
        $a12 = "__data" wide
        $a13 = "__serial" wide
        $a14 = "__upt" wide
        $a15 = "__msgid" wide
    condition:
        7 of ($a*)
}

rule malware_windows_moonlightmaze_loki
{
    meta:
        description = "Rule to detect Moonlight Maze Loki samples by custom attacker-authored strings"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
        md5_1 = "14cce7e641d308c3a177a8abb5457019"
        md5_2 = "a3164d2bbc45fb1eef5fde7eb8b245ea"
        md5_3 = "dabee9a7ea0ddaf900ef1e3e166ffe8a"
        md5_4 = "1980958afffb6a9d5a6c73fc1e2795c2"
        md5_5 = "e59f92aadb6505f29a9f368ab803082e"
    strings:
        $a1 = "Write file Ok..." ascii wide
        $a2 = "ERROR: Can not open socket...." ascii wide
        $a3 = "Error in parametrs:"  ascii wide
        $a4 = "Usage: @<get/put> <IP> <PORT> <file>"  ascii wide
        $a5 = "ERROR: Not connect..."  ascii wide
        $a6 = "Connect successful...."  ascii wide
        $a7 = "clnt <%d> rqstd n ll kll"  ascii wide
        $a8 = "clnt <%d> rqstd swap"  ascii wide
        $a9 = "cld nt sgnl prcs grp" ascii wide
        $a10 = "cld nt sgnl prnt" ascii wide
        // keeping only ascii version of string ->
        $a11 = "ork error" ascii fullword
    condition:
        2 of ($a*)
}

rule malware_windows_moonlightmaze_customsniffer
{
    meta:
        description = "Rule to detect Moonlight Maze sniffer tools"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
        md5_1 = "7b86f40e861705d59f5206c482e1f2a5"
        md5_2 = "927426b558888ad680829bd34b0ad0e7"
    strings:
        //strings from ora ->
        $a1 = "/var/tmp/gogo" fullword
        $a2 = "myfilename= |%s|" fullword
        $a3 = "mypid,mygid=" fullword
        $a4 = "mypid=|%d| mygid=|%d|" fullword
        //strings from tdn ->
        $a5 = "/var/tmp/task" fullword
        $a6 = "mydevname= |%s|" fullword
    condition:
        any of ($a*)
}

rule malware_windows_moonlightmaze_loki2crypto
{
    meta:
        description = "Rule to detect hardcoded DH modulus used in 1996/1997 Loki2 sourcecode; #ifdef STRONG_CRYPTO /* 384-bit strong prime */"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Costin Raiu, Kaspersky Lab"
        md5_1 = "19fbd8cbfb12482e8020a887d6427315"
        md5_2 = "ea06b213d5924de65407e8931b1e4326"
        md5_3 = "14ecd5e6fc8e501037b54ca263896a11"
        md5_4 = "e079ec947d3d4dacb21e993b760a65dc"
        md5_5 = "edf900cebb70c6d1fcab0234062bfc28"
    strings:
        $modulus = {DA E1 01 CD D8 C9 70 AF C2 E4 F2 7A 41 8B 43 39 52 9B 4B 4D E5 85 F8 49}
    condition:
        $modulus
}

rule malware_windows_moonlightmaze_de_tool
{
    meta:
        description = "Rule to detect Moonlight Maze 'de' and 'deg' tunnel tool"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
        md5_1 = "4bc7ed168fb78f0dc688ee2be20c9703"
        md5_2 = "8b56e8552a74133da4bc5939b5f74243"
    strings:
        $a1 = "Vnuk: %d" ascii fullword
        $a2 = "Syn: %d" ascii fullword
        //%s\r%s\r%s\r%s\r ->
        $a3 = {25 73 0A 25 73 0A 25 73 0A 25 73 0A}
    condition:
        2 of ($a*)
}

rule malware_windows_moonlightmaze_cle_tool
{
    meta:
        description = "Rule to detect Moonlight Maze 'cle' log cleaning tool"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
        md5 = "647d7b711f7b4434145ea30d0ef207b0"
    strings:
        $a1 = "./a filename template_file" ascii wide
        $a2 = "May be %s is empty?"  ascii wide
        $a3 = "template string = |%s|"   ascii wide
        $a4 = "No blocks !!!"
        $a5 = "No data in this block !!!!!!"  ascii wide
        $a6 = "No good line"
    condition:
        3 of ($a*)
}

rule malware_windows_moonlightmaze_xk_keylogger
{
    meta:
        description = "Rule to detect Moonlight Maze 'xk' keylogger"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
    strings:
        $a1 = "Log ended at => %s"
        $a2 = "Log started at => %s [pid %d]"
        $a3 = "/var/tmp/task" fullword
        $a4 = "/var/tmp/taskhost" fullword
        $a5 = "my hostname: %s"
        $a6 = "/var/tmp/tasklog"
        $a7 = "/var/tmp/.Xtmp01" fullword
        $a8 = "myfilename=-%s-"
        $a9 = "/var/tmp/taskpid"
        $a10 = "mypid=-%d-" fullword
        $a11 = "/var/tmp/taskgid" fullword
        $a12 = "mygid=-%d-" fullword
    condition:
        3 of ($a*)
}

rule malware_windows_moonlightmaze_encrypted_keylog
{
    meta:
        description = "Rule to detect Moonlight Maze encrypted keylogger logs"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        author = "Kaspersky Lab"
    strings:
        $a1 = {47 01 22 2A 6D 3E 39 2C}
    condition:
        ($a1 at 0)
}

rule malware_windows_moonlightmaze_IRIX_exploit_GEN
{
    meta:
        description = "Rule to detect Irix exploits from David Hedley used by Moonlight Maze hackers"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        reference2 = "https://www.exploit-db.com/exploits/19274/"
        author = "Kaspersky Lab"
        md5_1 = "008ea82f31f585622353bd47fa1d84be" //df3
        md5_2 = "a26bad2b79075f454c83203fa00ed50c" //log
        md5_3 = "f67fc6e90f05ba13f207c7fdaa8c2cab" //xconsole
        md5_4 = "5937db3896cdd8b0beb3df44e509e136" //xlock
        md5_5 = "f4ed5170dcea7e5ba62537d84392b280" //xterm
    strings:
        $a1 = "stack = 0x%x, targ_addr = 0x%x"
        $a2 = "execl failed"
    condition:
        (uint32(0)==0x464c457f) and (all of them)
}

rule malware_windows_moonlightmaze_u_logcleaner
{
    meta:
        description = "Rule to detect log cleaners based on utclean.c"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        reference2 = "http://cd.textfiles.com/cuteskunk/Unix-Hacking-Exploits/utclean.c"
        author = "Kaspersky Lab"
        md5_1 = "d98796dcda1443a37b124dbdc041fe3b"
        md5_2 = "73a518f0a73ab77033121d4191172820"
    strings:
        $a1 = "Hiding complit...n"
        $a2 = "usage: %s <username> <fixthings> [hostname]"
        $a3 = "ls -la %s* ; /bin/cp  ./wtmp.tmp %s; rm  ./wtmp.tmp"
    condition:
        (uint32(0)==0x464c457f) and (any of them)
}

rule malware_windows_moonlightmaze_wipe
{
    meta:
        description = "Rule to detect log cleaner based on wipe.c"
        reference = "https://en.wikipedia.org/wiki/Moonlight_Maze"
        reference2 = "http://www.afn.org/~afn28925/wipe.c"
        author = "Kaspersky Lab"
        md5 = "e69efc504934551c6a77b525d5343241"
    strings:
        $a1 = "ERROR: Unlinking tmp WTMP file."
        $a2 = "USAGE: wipe [ u|w|l|a ] ...options..."
        $a3 = "Erase acct entries on tty :   wipe a [username] [tty]"
        $a4 = "Alter lastlog entry       :   wipe l [username] [tty] [time] [host]"
    condition:
        (uint32(0)==0x464c457f) and (2 of them)
}

rule malware_windows_ransomware_zcrypt
{
    meta:
        description = "Zcrypt will encrypt data and append the .zcrypt extension to the filenames"
        reference = "https://blog.malwarebytes.com/threat-analysis/2016/06/zcrypt-ransomware/"
        author = "Airbnb CSIRT"
        md5 = "d1e75b274211a78d9c5d38c8ff2e1778"
    strings:
        // unique strings
        $u1 = "How to Buy Bitcoins" ascii wide
        $u2 = "ALL YOUR PERSONAL FILES ARE ENCRYPTED" ascii wide
        $u3 = "Click Here to Show Bitcoin Address" ascii wide
        $u4 = "MyEncrypter2.pdb" fullword ascii wide
        // generic strings
        $g1 = ".p7b" fullword ascii wide
        $g2 = ".p7c" fullword ascii wide
        $g3 = ".pdd" fullword ascii wide
        $g4 = ".pef" fullword ascii wide
        $g5 = ".pem" fullword ascii wide
        $g6 = "How to decrypt files.html" fullword ascii wide
    condition:
        any of ($u*) or all of ($g*)
}

rule malware_windows_ransomware_hydracrypt
{
    meta:
        description = "HydraCrypt encrypts a victim’s files and appends the filenames with the extension “hydracrypt_ID_*"
        reference = "https://securingtomorrow.mcafee.com/mcafee-labs/hydracrypt-variant-of-ransomware-distributed-by-angler-exploit-kit/"
        author = "Airbnb CSIRT"
        md5 = "08b304d01220f9de63244b4666621bba"
    strings:
        $u0 = "oTraining" fullword ascii wide
        $u1 = "Stop Training" fullword ascii wide
        $u2 = "Play \"sound.wav\"" fullword ascii wide
        $u3 = "&Start Recording" fullword ascii wide
        $u4 = "7About record" fullword ascii wide
    condition:
        all of them
}

rule malware_windows_ransomware_cryptolocker
{
    meta:
        description = "The CryptoLocker malware propagated via infected email attachments, and via an existing botnet; when activated, the malware encrypts files stored on local and mounted network drives"
        reference = "https://www.secureworks.com/research/cryptolocker-ransomware"
        author = "Airbnb CSIRT"
        md5 = "012d9088558072bc3103ab5da39ddd54"
    strings:
        $u0 = "Paysafecard is an electronic payment method for predominantly online shopping" fullword ascii wide
        $u1 = "bb to select the method of payment and the currency." fullword ascii wide
        $u2 = "Where can I purchase a MoneyPak?" fullword ascii wide
        $u3 = "Ukash is electronic cash and e-commerce brand." fullword ascii wide
        $u4 = "You have to send below specified amount to Bitcoin address" fullword ascii wide
        $u5 = "cashU is a prepaid online" fullword ascii wide
        $u6 = "Your important files \\b encryption" fullword ascii wide
        $u7 = "Encryption was produced using a \\b unique\\b0  public key" fullword ascii wide
        $u8 = "then be used to pay online, or loaded on to a prepaid card or eWallet." fullword ascii wide
        $u9 = "Arabic online gamers and e-commerce buyers." fullword ascii wide
    condition:
        2 of them
}

rule malware_windows_ransomware_HDDCryptorA
{
    meta:
        description = "The HDDCryptor ransomware encrypts local harddisks as well as resources in network shares via Server Message Block (SMB)"
        reference = "http://blog.trendmicro.com/trendlabs-security-intelligence/bksod-by-ransomware-hddcryptor-uses-commercial-tools-to-encrypt-network-shares-and-lock-hdds/"
        author = "Airbnb CSIRT"
        md5 = "498bdcfb93d13fecaf92e96f77063abf"
    strings:
        // unique strings
        $u1 = "You are Hacked" fullword ascii wide
        $u2 = "Your H.D.D Encrypted , Contact Us For Decryption Key" nocase ascii wide
        $u3 = "start hard drive encryption..." ascii wide
        $u4 = "Your hard drive is securely encrypted" ascii wide
        // generic strings
        $g1 = "Wipe All Passwords?" ascii wide
        $g2 = "SYSTEM\\CurrentControlSet\\Services\\dcrypt\\config" ascii wide
        $g3 = "DiskCryptor" ascii wide
        $g4 = "dcinst.exe" fullword ascii wide
        $g5 = "dcrypt.exe" fullword ascii wide
        $g6 = "you can only use AES to encrypt the boot partition!" ascii wide
    condition:
        2 of ($u*) or 4 of ($g*)
}

rule malware_wnidows_ransomware_powerware_locky
{
    meta:
        description = "PowerWare Ransomware"
        reference = "https://researchcenter.paloaltonetworks.com/2016/07/unit42-powerware-ransomware-spoofing-locky-malware-family/"
        author = "Airbnb CSIRT"
        md5 = "3433a4da9d8794709630eb06afd2b8c1"
    strings:
        // unpacks the powershell script
        $s0 = "ScriptRunner.dll" fullword ascii wide
        // debug file
        $s1 = "ScriptRunner.pdb" fullword ascii wide
        // dropped powershell script
        $s2 = "fixed.ps1" fullword ascii wide
    condition:
        all of them
}

rule malware_windows_ransomware_petya_variant_1
{
    meta:
        description = "Petya Ransomware new variant June 2017 using ETERNALBLUE"
        reference = "https://gist.github.com/vulnersCom/65fe44d27d29d7a5de4c176baba45759"
        author = "Airbnb CSIRT"
        md5 = "71b6a493388e7d0b40c83ce903bc6b04"
    strings:
        // instructions
        $s1 = "Ooops, your important files are encrypted." fullword ascii wide
        $s2 = "Send your Bitcoin wallet ID and personal installation key to e-mail" fullword ascii wide
        $s3 = "wowsmith123456@posteo.net. Your personal installation key:" fullword ascii wide
        $s4 = "Send $300 worth of Bitcoin to following address:" fullword ascii wide
        $s5 = "have been encrypted.  Perhaps you are busy looking for a way to recover your" fullword ascii wide
        $s6 = "need to do is submit the payment and purchase the decryption key." fullword ascii wide
    condition:
        any of them
}

rule malware_windows_ransomware_petya_variant_2
{
    meta:
        description = "Petya Ransomware new variant June 2017 using ETERNALBLUE"
        reference = "https://gist.github.com/vulnersCom/65fe44d27d29d7a5de4c176baba45759"
        author = "Airbnb CSIRT"
        md5 = "71b6a493388e7d0b40c83ce903bc6b04"
    strings:
        // psexec disguised - applicable to s1
        $s1 = "dllhost.dat" fullword wide
        $s2 = "\\\\%ws\\admin$\\%ws" fullword wide
        $s3 = "%s /node:\"%ws\" /user:\"%ws\" /password:\"%ws\"" fullword wide
        $s4 = "\\\\.\\PhysicalDrive" fullword wide
        $s5 =  ".3ds.7z.accdb.ai.asp.aspx.avhd.back.bak.c.cfg.conf.cpp.cs.ctl.dbf.disk.djvu.doc.docx.dwg.eml.fdb.gz.h.hdd.kdbx.mail.mdb.msg.nrg.ora.ost.ova.ovf.pdf.php.pmf.ppt.pptx.pst.pvi.py.pyc.rar.rtf.sln.sql.tar.vbox.vbs.vcb.vdi.vfd.vmc.vmdk.vmsd.vmx.vsdx.vsv.work.xls.xlsx.xvd.zip." fullword wide
    condition:
        3 of them
}

rule windows_malware_ransomware_petya_variant_3
{
    meta:
        description = "Petya Ransomware new variant June 2017 using ETERNALBLUE"
        reference = "https://gist.github.com/vulnersCom/65fe44d27d29d7a5de4c176baba45759"
        author = "Airbnb CSIRT"
        md5 = "71b6a493388e7d0b40c83ce903bc6b04"
    strings:
        $s1 = "wevtutil cl Setup & wevtutil cl System" fullword wide
        $s2 = "fsutil usn deletejournal /D %c:" fullword wide
    condition:
        any of them
}

rule malware_windows_ransomware_petya_variant_bitcoin
{
    meta:
        description = "Petya Ransomware new variant June 2017 using ETERNALBLUE: Bitcoin"
        reference = "https://gist.github.com/vulnersCom/65fe44d27d29d7a5de4c176baba45759"
        author = "Airbnb CSIRT"
        md5 = "71b6a493388e7d0b40c83ce903bc6b04"
    strings:
        //Bitcoin address
        $s1 = "MIIBCgKCAQEAxP/VqKc0yLe9JhVqFMQGwUITO6WpXWnKSNQAYT0O65Cr8PjIQInTeHkXEjfO2n2JmURWV/uHB0ZrlQ/wcYJBwLhQ9EqJ3iDqmN19Oo7NtyEUmbYmopcq+YLIBZzQ2ZTK0A2DtX4GRKxEEFLCy7vP12EYOPXknVy/+mf0JFWixz29QiTf5oLu15wVLONCuEibGaNNpgq+CXsPwfITDbDDmdrRIiUEUw6o3pt5pNOskfOJbMan2TZu6zfhzuts7KafP5UA8/0Hmf5K3/F9Mf9SE68EZjK+cIiFlKeWndP0XfRCYXI9AJYCeaOu7CXF6U0AVNnNjvLeOn42LHFUK4o6JwIDAQAB" fullword wide
    condition:
        $s1
}

rule malware_windows_ransomware_cerber_evasion
{
    meta:
        description = "Cerber Ransomware: Evades detection by machine learning applications"
        reference_1 = "http://blog.trendmicro.com/trendlabs-security-intelligence/cerber-starts-evading-machine-learning/"
        reference_2 = "http://www.darkreading.com/vulnerabilities---threats/cerber-ransomware-now-evades-machine-learning/d/d-id/1328506"
        author = "Airbnb CSIRT"
        md5 = "bc62b557d48f3501c383f25d014f22df"
    strings:
        $s1 = "38oDr5.vbs" fullword ascii wide
        $s2 = "8ivq.dll" fullword ascii wide
        $s3 = "jmsctls_progress32" fullword ascii wide
    condition:
        all of them
}

rule windows_ransomware_lazarus_wannacry
{
    meta:
        description = "Rule based on shared code between Feb 2017 Wannacry sample and Lazarus backdoor from Feb 2015 discovered by Neel Mehta"
        reference = "https://twitter.com/neelmehta/status/864164081116225536"
        author = "Costin G. Raiu, Kaspersky Lab"
        md5_1 = "9c7c7149387a1c79679a87dd1ba755bc"
        md5_2 = "ac21c8ad899727137c4b94458d7aa8d8"
    strings:
        $a1={
        51 53 55 8B 6C 24 10 56 57 6A 20 8B 45 00 8D 75
        04 24 01 0C 01 46 89 45 00 C6 46 FF 03 C6 06 01
        46 56 E8
        }

        $a2={
        03 00 04 00 05 00 06 00 08 00 09 00 0A 00 0D 00
        10 00 11 00 12 00 13 00 14 00 15 00 16 00 2F 00
        30 00 31 00 32 00 33 00 34 00 35 00 36 00 37 00
        38 00 39 00 3C 00 3D 00 3E 00 3F 00 40 00 41 00
        44 00 45 00 46 00 62 00 63 00 64 00 66 00 67 00
        68 00 69 00 6A 00 6B 00 84 00 87 00 88 00 96 00
        FF 00 01 C0 02 C0 03 C0 04 C0 05 C0 06 C0 07 C0
        08 C0 09 C0 0A C0 0B C0 0C C0 0D C0 0E C0 0F C0
        10 C0 11 C0 12 C0 13 C0 14 C0 23 C0 24 C0 27 C0
        2B C0 2C C0 FF FE
        }
    condition:
        ((uint16(0) == 0x5A4D)) and all of them
}
